{
  "spAws": {
    "prefix": "spAws",
    "body": [
      "provider \"aws\" {",
      "\tregion = \"${var.aws_region}\"",
      "}",
      ""
    ],
    "description": "Snippet for spAws"
  },
  "fpAws": {
    "prefix": "fpAws",
    "body": [
      "provider \"aws\" {",
      "\taccess_key        = \"${var.aws_access_key}\"",
      "\tsecret_key        = \"${var.aws_secret_key}\"",
      "\tregion            = \"${var.aws_region}\"",
      "\tprofile           = \"\"",
      "\talias             = \"\"",
      "\tassume_role {",
      "\t\trole_arn     = \"arn:aws:iam::ACCOUNT_ID:role/ROLE_NAME\"",
      "\t\tsession_name = \"SESSION_NAME\"",
      "\t\texternal_id  = \"EXTERNAL_ID\"",
      "\t\tpolicy       = \"\"",
      "\t}",
      "\tshared_credentials_file\t = \"\"",
      "\ttoken                     = \"\"",
      "\tmax_retries               = 11",
      "\tallowed_account_ids       = \"\"",
      "\tforbidden_account_ids     = \"\"",
      "\tdynamodb_endpoint         = \"\"",
      "\tkinesis_endpoint          = \"\"",
      "\tendpoints {",
      "\t\tdynamodb = \"\"",
      "\t\tiam      = \"\"",
      "\t\tec2      = \"\"",
      "\t\telb      = \"\"",
      "\t\tkinesis  = \"\"",
      "\t\ts3       = \"\"",
      "\t}",
      "\tinsecure                    = false",
      "\tskip_credentials_validation = false",
      "\tskip_region_validation      = false",
      "\tskip_requesting_account_id  = false",
      "\tskip_metadata_api_check     = false",
      "\ts3_force_path_style         = false",
      "}",
      "",
      "\t# Meta parameters available to all resources"
    ],
    "description": "Snippet for fpAws"
  },
  "depends": {
    "prefix": "depends",
    "body": [
      "depends_on = [\"${1:dependency}\"]"
    ],
    "description": "Snippet for depends"
  },
  "provider": {
    "prefix": "provider",
    "body": [
      "provider = [\"${1:alias}\"]"
    ],
    "description": "Snippet for provider"
  },
  "count": {
    "prefix": "count",
    "body": [
      "count = ${1:count}"
    ],
    "description": "Snippet for count"
  },
  "lifecycle": {
    "prefix": "lifecycle",
    "body": [
      "lifecycle {",
      "\tcreate_before_destroy = true|false",
      "\tprevent_destroy       = true|false",
      "\tignore_changes        = [\"\"]",
      "}",
      "\t# XXX: Add connector",
      "",
      "\t# Data source section"
    ],
    "description": "Snippet for lifecycle"
  },
  "sdAwsAcm": {
    "prefix": "sdAwsAcm",
    "body": [
      "data \"aws_acm_certificate\" \"${1:name}\" {",
      "\tdomain = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsAcm"
  },
  "fdAwsAcm": {
    "prefix": "fdAwsAcm",
    "body": [
      "data \"aws_acm_certificate\" \"${1:name}\" {",
      "\tdomain   = \"\"",
      "\tstatuses = [\"\"]",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsAcm"
  },
  "sdAwsAlb": {
    "prefix": "sdAwsAlb",
    "body": [
      "data \"aws_alb\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsAlb"
  },
  "fdAwsAlb": {
    "prefix": "fdAwsAlb",
    "body": [
      "data \"aws_alb\" \"${1:name}\" {",
      "\tarn  = \"\"",
      "\tname = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsAlb"
  },
  "sdAwsAlbListener": {
    "prefix": "sdAwsAlbListener",
    "body": [
      "data \"aws_alb_listener\" \"${1:name}\" {",
      "\tarn = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsAlbListener"
  },
  "fdAwsAlbListener": {
    "prefix": "fdAwsAlbListener",
    "body": [
      "data \"aws_alb_listener\" \"${1:name}\" {",
      "\tarn = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsAlbListener"
  },
  "sdAwsAmi": {
    "prefix": "sdAwsAmi",
    "body": [
      "data \"aws_ami\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsAmi"
  },
  "fdAwsAmi": {
    "prefix": "fdAwsAmi",
    "body": [
      "data \"aws_ami\" \"${1:name}\" {",
      "\texecutable_users = [\"\"]",
      "\tname_regex  = \"\"",
      "\tmost_recent = true|false",
      "\towners      = [\"\"]",
      "\tfilter {",
      "\t\tname   = \"\"",
      "\t\tvalues = [\"\"]",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsAmi"
  },
  "sdAwsASG": {
    "prefix": "sdAwsASG",
    "body": [
      "data \"aws_autoscaling_groups\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsASG"
  },
  "fdAwsASG": {
    "prefix": "fdAwsASG",
    "body": [
      "data \"aws_autoscaling_groups\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsASG"
  },
  "sdAwsAZ": {
    "prefix": "sdAwsAZ",
    "body": [
      "data \"aws_availability_zone\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsAZ"
  },
  "fdAwsAZ": {
    "prefix": "fdAwsAZ",
    "body": [
      "data \"aws_availability_zone\" \"${1:name}\" {",
      "\tname  = \"\"",
      "\tstate = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsAZ"
  },
  "sdAwsAZs": {
    "prefix": "sdAwsAZs",
    "body": [
      "data \"aws_availability_zones\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsAZs"
  },
  "fdAwsAZs": {
    "prefix": "fdAwsAZs",
    "body": [
      "data \"aws_availability_zones\" \"${1:name}\" {",
      "\tstate = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsAZs"
  },
  "sdAwsBillingServiceAccount": {
    "prefix": "sdAwsBillingServiceAccount",
    "body": [
      "data \"aws_billing_service_account\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsBillingServiceAccount"
  },
  "fdAwsBillingServiceAccount": {
    "prefix": "fdAwsBillingServiceAccount",
    "body": [
      "data \"aws_billing_service_account\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsBillingServiceAccount"
  },
  "sdAwsCallerIdentity": {
    "prefix": "sdAwsCallerIdentity",
    "body": [
      "data \"aws_caller_identity\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsCallerIdentity"
  },
  "fdAwsCallerIdentity": {
    "prefix": "fdAwsCallerIdentity",
    "body": [
      "data \"aws_caller_identity\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsCallerIdentity"
  },
  "sdAwsCanonicalUserId": {
    "prefix": "sdAwsCanonicalUserId",
    "body": [
      "data \"aws_canonical_user_id\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsCanonicalUserId"
  },
  "fdAwsCanonicalUserId": {
    "prefix": "fdAwsCanonicalUserId",
    "body": [
      "data \"aws_canonical_user_id\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsCanonicalUserId"
  },
  "sdAwsCloudFormationStack": {
    "prefix": "sdAwsCloudFormationStack",
    "body": [
      "data \"aws_cloud_formation_stack\" \"${1:name}\" {",
      "\tname = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsCloudFormationStack"
  },
  "fdAwsCloudFormationStack": {
    "prefix": "fdAwsCloudFormationStack",
    "body": [
      "data \"aws_cloud_formation_stack\" \"${1:name}\" {",
      "\tname = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsCloudFormationStack"
  },
  "sdAwsDbInstance": {
    "prefix": "sdAwsDbInstance",
    "body": [
      "data \"aws_db_instance\" \"${1:name}\" {",
      "\tdb_instance_identifier = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsDbInstance"
  },
  "fdAwsDbInstance": {
    "prefix": "fdAwsDbInstance",
    "body": [
      "data \"aws_db_instance\" \"${1:name}\" {",
      "\tdb_instance_identifier = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsDbInstance"
  },
  "sdAwsEbsSnapshot": {
    "prefix": "sdAwsEbsSnapshot",
    "body": [
      "data \"aws_ebs_snapshot\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsEbsSnapshot"
  },
  "fdAwsEbsSnapshot": {
    "prefix": "fdAwsEbsSnapshot",
    "body": [
      "data \"aws_ebs_snapshot\" \"${1:name}\" {",
      "\tmost_recent    = true|false",
      "\towners         = [\"\"]",
      "\tsnapshot_ids   = [\"\"]",
      "\trestorable_by_user_ids = [\"\"]",
      "\tfilter {",
      "\t\tname   = \"\"",
      "\t\tvalues = [\"\"]",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsEbsSnapshot"
  },
  "sdAwsEbsVolume": {
    "prefix": "sdAwsEbsVolume",
    "body": [
      "data \"aws_ebs_volume\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsEbsVolume"
  },
  "fdAwsEbsVolume": {
    "prefix": "fdAwsEbsVolume",
    "body": [
      "data \"aws_ebs_volume\" \"${1:name}\" {",
      "\tmost_recent = true|false",
      "\tfilter {",
      "\t\tname   = \"\"",
      "\t\tvalues = [\"\"]",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsEbsVolume"
  },
  "sdAwsEcsCluster": {
    "prefix": "sdAwsEcsCluster",
    "body": [
      "data \"aws_ecs_cluster\" \"${1:name}\" {",
      "\tcluster_name = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsEcsCluster"
  },
  "fdAwsEcsCluster": {
    "prefix": "fdAwsEcsCluster",
    "body": [
      "data \"aws_ecs_cluster\" \"${1:name}\" {",
      "\tcluster_name = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsEcsCluster"
  },
  "sdAwsEcsContainer": {
    "prefix": "sdAwsEcsContainer",
    "body": [
      "data \"aws_ecs_container_definition\" \"${1:name}\" {",
      "\ttask_definition = \"\"",
      "\tcontainer_name  = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsEcsContainer"
  },
  "fdAwsEcsContainer": {
    "prefix": "fdAwsEcsContainer",
    "body": [
      "data \"aws_ecs_container_definition\" \"${1:name}\" {",
      "\ttask_definition = \"\"",
      "\tcontainer_name  = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsEcsContainer"
  },
  "sdAwsEcsTask": {
    "prefix": "sdAwsEcsTask",
    "body": [
      "data \"aws_ecs_task_definition\" \"${1:name}\" {",
      "\ttask_definition = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsEcsTask"
  },
  "fdAwsEcsTask": {
    "prefix": "fdAwsEcsTask",
    "body": [
      "data \"aws_ecs_task_definition\" \"${1:name}\" {",
      "\ttask_definition = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsEcsTask"
  },
  "sdAwsEip": {
    "prefix": "sdAwsEip",
    "body": [
      "data \"aws_eip\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsEip"
  },
  "fdAwsEip": {
    "prefix": "fdAwsEip",
    "body": [
      "data \"aws_eip\" \"${1:name}\" {",
      "\tid        = \"\"",
      "\tpublic_ip = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsEip"
  },
  "sdAwsElbHostedZoneId": {
    "prefix": "sdAwsElbHostedZoneId",
    "body": [
      "data \"aws_elb_hosted_zone_id\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsElbHostedZoneId"
  },
  "fdAwsElbHostedZoneId": {
    "prefix": "fdAwsElbHostedZoneId",
    "body": [
      "data \"aws_elb_hosted_zone_id\" \"${1:name}\" {",
      "\tregion = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsElbHostedZoneId"
  },
  "sdAwsElbServiceAccount": {
    "prefix": "sdAwsElbServiceAccount",
    "body": [
      "data \"aws_elb_service_account\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsElbServiceAccount"
  },
  "fdAwsElbServiceAccount": {
    "prefix": "fdAwsElbServiceAccount",
    "body": [
      "data \"aws_elb_service_account\" \"${1:name}\" {",
      "\tregion = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsElbServiceAccount"
  },
  "sdAwsIamAccountAlias": {
    "prefix": "sdAwsIamAccountAlias",
    "body": [
      "data \"aws_iam_account_alias\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsIamAccountAlias"
  },
  "fdAwsIamAccountAlias": {
    "prefix": "fdAwsIamAccountAlias",
    "body": [
      "data \"aws_iam_account_alias\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsIamAccountAlias"
  },
  "sdAwsIamPolicyDocument": {
    "prefix": "sdAwsIamPolicyDocument",
    "body": [
      "data \"aws_iam_policy_document\" \"${1:name}\" {",
      "\tstatement {",
      "\t\tsid     = \"\"",
      "\t\tactions = [\"\"]",
      "\t\teffect  = \"\"",
      "\t\tprincipals {",
      "\t\ttype = \"\"",
      "\t\tidentifiers = [\"\"]",
      "\t}",
      "\t}",
      "\tstatement {",
      "\t\tactions  = [\"\"]",
      "\tresource = [\"\"]",
      "\t\tnot_principals {",
      "\t\ttype = \"\"",
      "\t\tidentifiers = [\"\"]",
      "\t}",
      "\t\tcondition {",
      "\t\ttest = \"\"",
      "\tvariable = \"\"",
      "\t\tvalues   = [\"\"]",
      "\t}",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsIamPolicyDocument"
  },
  "fdAwsIamPolicyDocument": {
    "prefix": "fdAwsIamPolicyDocument",
    "body": [
      "data \"aws_iam_policy_document\" \"${1:name}\" {",
      "\tstatement {",
      "\t\tsid\t = \"\"",
      "\t\tactions = [\"\"]",
      "\t\teffect  = \"\"",
      "\t\tprincipals {",
      "\t\ttype\t\t= \"\"",
      "\t\tidentifiers = [\"\"]",
      "\t}",
      "\t}",
      "\tstatement {",
      "\t\tactions  = [\"\"]",
      "\tresource = [\"\"]",
      "\t\tnot_principals {",
      "\t\ttype\t\t= \"\"",
      "\t\tidentifiers = [\"\"]",
      "\t}",
      "\t\tcondition {",
      "\t\ttest\t = \"\"",
      "\tvariable = \"\"",
      "\t\tvalues   = [\"\"]",
      "\t}",
      "\t}",
      "\tpolicy_id = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsIamPolicyDocument"
  },
  "sdAwsIAMRole": {
    "prefix": "sdAwsIAMRole",
    "body": [
      "data \"aws_iam_role\" \"${1:name}\" {",
      "\trole_name = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsIAMRole"
  },
  "fdAwsIAMRole": {
    "prefix": "fdAwsIAMRole",
    "body": [
      "data \"aws_iam_role\" \"${1:name}\" {",
      "\trole_name = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsIAMRole"
  },
  "sdAwsIAMServerCertificate": {
    "prefix": "sdAwsIAMServerCertificate",
    "body": [
      "data \"aws_iam_server_certificate\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsIAMServerCertificate"
  },
  "fdAwsIAMServerCertificate": {
    "prefix": "fdAwsIAMServerCertificate",
    "body": [
      "data \"aws_iam_server_certificate\" \"${1:name}\" {",
      "\tname = \"\"",
      "\tname_prefix = \"\"",
      "\tlatest      = true|false",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsIAMServerCertificate"
  },
  "sdAwsInstance": {
    "prefix": "sdAwsInstance",
    "body": [
      "data \"aws_instance\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsInstance"
  },
  "fdAwsInstance": {
    "prefix": "fdAwsInstance",
    "body": [
      "data \"aws_instance\" \"${1:name}\" {",
      "\tinstance_id = \"\"",
      "\tfilter {",
      "\t\tname    = \"\"",
      "\t\tvalues  = [\"\"]",
      "\t}",
      "\tinstance_tags {",
      "\t\tTagName = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsInstance"
  },
  "sdAwsIPRanges": {
    "prefix": "sdAwsIPRanges",
    "body": [
      "data \"aws_ip_ranges\" \"${1:name}\" {",
      "\tservices = [\"\"]",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsIPRanges"
  },
  "fdAwsIPRanges": {
    "prefix": "fdAwsIPRanges",
    "body": [
      "data \"aws_ip_ranges\" \"${1:name}\" {",
      "\tservices = [\"\"]",
      "\tregions  = [\"\"]",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsIPRanges"
  },
  "sdAwsKmsSecret": {
    "prefix": "sdAwsKmsSecret",
    "body": [
      "data \"aws_kms_secret\" \"${1:name}\" {",
      "\tsecret {",
      "\t\tname    = \"\"",
      "\t\tpayload = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsKmsSecret"
  },
  "fdAwsKmsSecret": {
    "prefix": "fdAwsKmsSecret",
    "body": [
      "data \"aws_kms_secret\" \"${1:name}\" {",
      "\tsecret {",
      "\t\tname    = \"\"",
      "\t\tpayload = \"\"",
      "\t\tcontext {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "\t\tgrant_tokens  = [\"\"]",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsKmsSecret"
  },
  "sdAwsPartition": {
    "prefix": "sdAwsPartition",
    "body": [
      "data \"aws_partition\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsPartition"
  },
  "fdAwsPartition": {
    "prefix": "fdAwsPartition",
    "body": [
      "data \"aws_partition\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsPartition"
  },
  "sdAwsPL": {
    "prefix": "sdAwsPL",
    "body": [
      "data \"aws_prefix_list\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsPL"
  },
  "fdAwsPL": {
    "prefix": "fdAwsPL",
    "body": [
      "data \"aws_prefix_list\" \"${1:name}\" {",
      "\tprefix_list_id = \"\"",
      "\tname = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsPL"
  },
  "sdAwsRedshiftServiceAccount": {
    "prefix": "sdAwsRedshiftServiceAccount",
    "body": [
      "data \"aws_redshift_service_account\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsRedshiftServiceAccount"
  },
  "fdAwsRedshiftServiceAccount": {
    "prefix": "fdAwsRedshiftServiceAccount",
    "body": [
      "data \"aws_redshift_service_account\" \"${1:name}\" {",
      "\tregion = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsRedshiftServiceAccount"
  },
  "sdAwsRegion": {
    "prefix": "sdAwsRegion",
    "body": [
      "data \"aws_region\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsRegion"
  },
  "fdAwsRegion": {
    "prefix": "fdAwsRegion",
    "body": [
      "data \"aws_region\" \"${1:name}\" {",
      "\tname = \"\"",
      "\tcurrent  = true|false",
      "\tendpoint = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsRegion"
  },
  "sdAwsRoute53Zone": {
    "prefix": "sdAwsRoute53Zone",
    "body": [
      "data \"aws_route53_zone\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsRoute53Zone"
  },
  "fdAwsRoute53Zone": {
    "prefix": "fdAwsRoute53Zone",
    "body": [
      "data \"aws_route53_zone\" \"${1:name}\" {",
      "\tzone_id = \"\"",
      "\tname    = \"\" # Conflicts with zone_id",
      "\tprivate_zone = true|false",
      "\tvpc_id  = \"\"",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsRoute53Zone"
  },
  "sdAwsRouteTable": {
    "prefix": "sdAwsRouteTable",
    "body": [
      "data \"aws_route_table\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsRouteTable"
  },
  "fdAwsRouteTable": {
    "prefix": "fdAwsRouteTable",
    "body": [
      "data \"aws_route_table\" \"${1:name}\" {",
      "\tsubnet_id = \"\"",
      "\troute_table_id = \"\"",
      "\tvpc_id = \"\"",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "\tfilter {",
      "\t\tname   = \"\"",
      "\t\tvalues = [\"\"]",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsRouteTable"
  },
  "sdAwsS3BucketObject": {
    "prefix": "sdAwsS3BucketObject",
    "body": [
      "data \"aws_s3_bucket_object\" \"${1:name}\" {",
      "\tbucket = \"\"",
      "\tkey    = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsS3BucketObject"
  },
  "fdAwsS3BucketObject": {
    "prefix": "fdAwsS3BucketObject",
    "body": [
      "data \"aws_s3_bucket_object\" \"${1:name}\" {",
      "\tbucket\t = \"\"",
      "\tkey\t\t= \"\"",
      "\trange\t= \"\"",
      "\tversion_id = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsS3BucketObject"
  },
  "sdAwsSecurityGroup": {
    "prefix": "sdAwsSecurityGroup",
    "body": [
      "data \"aws_security_group\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsSecurityGroup"
  },
  "fdAwsSecurityGroup": {
    "prefix": "fdAwsSecurityGroup",
    "body": [
      "data \"aws_security_group\" \"${1:name}\" {",
      "\tvpc_id = \"\"",
      "\tname   = \"\"",
      "\tid\t = \"\"",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "\tfilter {",
      "\t\tname   = \"\"",
      "\t\tvalues = [\"\"]",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsSecurityGroup"
  },
  "sdAwsSnsTopic": {
    "prefix": "sdAwsSnsTopic",
    "body": [
      "data \"aws_sns_topic\" \"${1:name}\" {",
      "\tname = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsSnsTopic"
  },
  "fdAwsSnsTopic": {
    "prefix": "fdAwsSnsTopic",
    "body": [
      "data \"aws_sns_topic\" \"${1:name}\" {",
      "\tname = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsSnsTopic"
  },
  "sdAwsSubnet": {
    "prefix": "sdAwsSubnet",
    "body": [
      "data \"aws_subnet\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsSubnet"
  },
  "fdAwsSubnet": {
    "prefix": "fdAwsSubnet",
    "body": [
      "data \"aws_subnet\" \"${1:name}\" {",
      "\tavailability_zone = \"\"",
      "\tcidr_block = \"\"",
      "\tdefault_for_az = true|false",
      "\tid     = \"\"",
      "\tstate  = \"\"",
      "\tvpc_id = \"\"",
      "\tfilter {",
      "\t\tname   = \"\"",
      "\t\tvalues = [\"\"]",
      "\t}",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsSubnet"
  },
  "sdAwsSubnetIDs": {
    "prefix": "sdAwsSubnetIDs",
    "body": [
      "data \"aws_subnet_ids\" \"${1:name}\" {",
      "\tvpc_id = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsSubnetIDs"
  },
  "fdAwsSubnetIDs": {
    "prefix": "fdAwsSubnetIDs",
    "body": [
      "data \"aws_subnet_ids\" \"${1:name}\" {",
      "\tvpc_id = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsSubnetIDs"
  },
  "sdAwsVpc": {
    "prefix": "sdAwsVpc",
    "body": [
      "data \"aws_vpc\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsVpc"
  },
  "fdAwsVpc": {
    "prefix": "fdAwsVpc",
    "body": [
      "data \"aws_vpc\" \"${1:name}\" {",
      "\tcidr_block = \"\"",
      "\tdhcp_options_id = \"\"",
      "\tdefault = true|false",
      "\tid = \"\"",
      "\tstate = \"\"",
      "\tfilter {",
      "\t\tname   = \"\"",
      "\t\tvalues = [\"\"]",
      "\t}",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsVpc"
  },
  "sdAwsVpcEndpoin": {
    "prefix": "sdAwsVpcEndpoin",
    "body": [
      "data \"aws_vpc_endpoint\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsVpcEndpoin"
  },
  "fdAwsVpcEndpoin": {
    "prefix": "fdAwsVpcEndpoin",
    "body": [
      "data \"aws_vpc_endpoint\" \"${1:name}\" {",
      "\tid     = \"\"",
      "\tstate  = \"\"",
      "\tvpc_id = \"\"",
      "\tservice_name = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsVpcEndpoin"
  },
  "sdAwsVpcEndpointService": {
    "prefix": "sdAwsVpcEndpointService",
    "body": [
      "data \"aws_vpc_endpoint_service\" \"${1:name}\" {",
      "\tservice = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsVpcEndpointService"
  },
  "fdAwsVpcEndpointService": {
    "prefix": "fdAwsVpcEndpointService",
    "body": [
      "data \"aws_vpc_endpoint_service\" \"${1:name}\" {",
      "\tservice = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsVpcEndpointService"
  },
  "sdAwsVpcPeeringConnection": {
    "prefix": "sdAwsVpcPeeringConnection",
    "body": [
      "data \"aws_vpc_peering_connection\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsVpcPeeringConnection"
  },
  "fdAwsVpcPeeringConnection": {
    "prefix": "fdAwsVpcPeeringConnection",
    "body": [
      "data \"aws_vpc_peering_connection\" \"${1:name}\" {",
      "\tid = \"\"",
      "\tstatus = \"\"",
      "\tvpc_id = \"\"",
      "\towner_id = \"\"",
      "\tcidr_block = \"\"",
      "\tpeer_vpc_id = \"\"",
      "\tpeer_owner_id   = \"\"",
      "\tpeer_cidr_block = \"\"",
      "\tfilter {",
      "\t\tname   = \"\"",
      "\t\tvalues = [\"\"]",
      "\t}",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for fdAwsVpcPeeringConnection"
  },
  "sdAwsVpnGateway": {
    "prefix": "sdAwsVpnGateway",
    "body": [
      "data \"aws_vpn_gateway\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for sdAwsVpnGateway"
  },
  "fdAwsVpnGateway": {
    "prefix": "fdAwsVpnGateway",
    "body": [
      "data \"aws_vpn_gateway\" \"${1:name}\" {",
      "\tid = \"\"",
      "\tstate = \"\"",
      "\tattached_vpc_id   = \"\"",
      "\tavailability_zone = \"\"",
      "\tfilter {",
      "\t\tname   = \"\"",
      "\t\tvalues = [\"\"]",
      "\t}",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "}",
      "",
      "\t# Resource snippets"
    ],
    "description": "Snippet for fdAwsVpnGateway"
  },
  "srAWSInspectorAssessmentTarget": {
    "prefix": "srAWSInspectorAssessmentTarget",
    "body": [
      "resource \"aws_inspector_assessment_target\" \"${1:name}\" {",
      "\tname = \"${1:name}\"",
      "resource_group_arn = \"${aws_inspector_resource_group.${2:foo}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAWSInspectorAssessmentTarget"
  },
  "frAWSInspectorAssessmentTarget": {
    "prefix": "frAWSInspectorAssessmentTarget",
    "body": [
      "resource \"aws_inspector_assessment_target\" \"${1:name}\" {",
      "\tname = \"${1:name}\"",
      "resource_group_arn = \"${aws_inspector_resource_group.${2:foo}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAWSInspectorAssessmentTarget"
  },
  "srAWSInspectorAssessmentTemplate": {
    "prefix": "srAWSInspectorAssessmentTemplate",
    "body": [
      "resource \"aws_inspector_assessment_template\" \"${1:name}\" {",
      "\tname = \"${1:name}\"",
      "\ttarget_arn = \"${aws_inspector_assessment_target.${2:foo}.arn}\"",
      "\tduration = 3600",
      "\trules_package_arns = [\"arn:aws:inspector:us-east-1:XXX:XXX/0-XXX\"]",
      "}",
      ""
    ],
    "description": "Snippet for srAWSInspectorAssessmentTemplate"
  },
  "frAWSInspectorAssessmentTemplate": {
    "prefix": "frAWSInspectorAssessmentTemplate",
    "body": [
      "resource \"aws_inspector_assessment_template\" \"${1:name}\" {",
      "\tname = \"${1:name}\"",
      "\ttarget_arn = \"${aws_inspector_assessment_target.${2:foo}.arn}\"",
      "\tduration = 3600",
      "\trules_package_arns = [\"arn:aws:inspector:us-east-1:XXX:XXX/0-XXX\"]",
      "}",
      ""
    ],
    "description": "Snippet for frAWSInspectorAssessmentTemplate"
  },
  "srAWSInspectorResourceGroup": {
    "prefix": "srAWSInspectorResourceGroup",
    "body": [
      "resource \"aws_inspector_resource_group\" \"${1:name}\" {",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAWSInspectorResourceGroup"
  },
  "frAWSInspectorResourceGroup": {
    "prefix": "frAWSInspectorResourceGroup",
    "body": [
      "resource \"aws_inspector_resource_group\" \"${1:name}\" {",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAWSInspectorResourceGroup"
  },
  "srAwsAlb": {
    "prefix": "srAwsAlb",
    "body": [
      "resource \"aws_alb\" \"${1:name}\" {",
      "\tsubnets = [\"${aws_subnet.${2:foo}.id}\"]",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAlb"
  },
  "frAwsAlb": {
    "prefix": "frAwsAlb",
    "body": [
      "resource \"aws_alb\" \"${1:name}\" {",
      "\tsubnets = [\"${aws_subnet.${2:foo}.id}\"]",
      "\tname = \"${1:name}\"",
      "\tname_prefix = \"\" # Conflicts with name_prefix",
      "\tinternal = true|false",
      "\tsecurity_groups = [\"${aws_security_group.${3:bar}.id}\"]",
      "\taccess_logs {",
      "\t\tbucket  = \"${aws_s3_bucket.alb_logs.bucket}\"",
      "\t\tprefix  = \"\"",
      "\t\tenabled = true|false",
      "\t}",
      "\tenable_deletion_protection = true|false",
      "\tidle_timeout = 1",
      "\tip_address_type = \"\"",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAlb"
  },
  "srAwsAlbListener": {
    "prefix": "srAwsAlbListener",
    "body": [
      "resource \"aws_alb_listener\" \"${1:name}\" {",
      "\tload_balancer_arn = \"${aws_alb.${2:foo}.arn}\"",
      "\tport\t\t\t= 443",
      "\tdefault_action {",
      "\t\ttarget_group_arn = \"\"",
      "\t\ttype\t\t\t = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAlbListener"
  },
  "frAwsAlbListener": {
    "prefix": "frAwsAlbListener",
    "body": [
      "resource \"aws_alb_listener\" \"${1:name}\" {",
      "\tload_balancer_arn = \"${aws_alb.${2:foo}.arn}\"",
      "\tport\t\t\t= 443",
      "\tdefault_action {",
      "\t\ttarget_group_arn = \"${aws_alb_target_group.${3:bar}.arn}\"",
      "\t\ttype\t\t\t = \"\"",
      "\t}",
      "\tprotocol\t\t= \"\"",
      "\tssl_policy\t\t= \"\"",
      "\tcertificate_arn   = \"arn:aws:iam::XXX:server-certificate/XXX\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAlbListener"
  },
  "srAwsAlbListenerRule": {
    "prefix": "srAwsAlbListenerRule",
    "body": [
      "resource \"aws_alb_listener_rule\" \"${1:name}\" {",
      "\tlistener_arn = \"${aws_alb_listener.${2:foo}.arn}\"",
      "\tpriority\t = 1",
      "\taction {",
      "\t\ttarget_group_arn = \"${aws_alb_target_group.${3:bar}.arn}\"",
      "\t\ttype\t\t\t = \"\"",
      "\t}",
      "\tcondition {",
      "\t\tfield  = \"\"",
      "\t\tvalues = [\"\"]",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAlbListenerRule"
  },
  "frAwsAlbListenerRule": {
    "prefix": "frAwsAlbListenerRule",
    "body": [
      "resource \"aws_alb_listener_rule\" \"${1:name}\" {",
      "\tlistener_arn = \"${aws_alb_listener.${2:foo}.arn}\"",
      "\tpriority\t = 1",
      "\taction {",
      "\t\ttarget_group_arn = \"${aws_alb_target_group.${3:bar}.arn}\"",
      "\t\ttype\t\t\t = \"\"",
      "\t}",
      "\tcondition {",
      "\t\tfield  = \"\"",
      "\t\tvalues = [\"\"]",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAlbListenerRule"
  },
  "srAwsAlbTargetGroup": {
    "prefix": "srAwsAlbTargetGroup",
    "body": [
      "resource \"aws_alb_target_group\" \"${1:name}\" {",
      "\tport\t = 80",
      "\tprotocol = \"\"",
      "\tvpc_id   = \"${aws_vpc.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAlbTargetGroup"
  },
  "frAwsAlbTargetGroup": {
    "prefix": "frAwsAlbTargetGroup",
    "body": [
      "resource \"aws_alb_target_group\" \"${1:name}\" {",
      "\tport\t\t\t\t = 80",
      "\tprotocol\t\t\t = \"\"",
      "\tvpc_id\t\t\t = \"${aws_vpc.${2:foo}.id}\"",
      "\tname\t\t\t\t = \"${1:name}\"",
      "\tname_prefix\t\t= \"\" # Conflicts with name",
      "\tderegistration_delay = 300",
      "\tstickiness {",
      "\t\tenabled\t\t = true|false",
      "\t\ttype\t\t\t= \"lb_cookie\"",
      "\t\tcookie_duration = 1",
      "\t}",
      "\thealth_check {",
      "\t\tinterval\t\t\t= 30",
      "\t\tpath\t\t\t\t= \"/\"",
      "\t\tport\t\t\t\t= \"\"",
      "\t\tprotocol\t\t\t= \"HTTP\"",
      "\t\ttimeout\t\t\t = 5",
      "\t\thealthy_threshold   = 5",
      "\t\tmatcher\t\t\t = \"200\"",
      "\t\tunhealthy_threshold = 2",
      "\t}",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAlbTargetGroup"
  },
  "srAwsAlbTargetGroupAttachment": {
    "prefix": "srAwsAlbTargetGroupAttachment",
    "body": [
      "resource \"aws_alb_target_group_attachment\" \"${1:name}\" {",
      "\ttarget_group_arn = \"${aws_alb_target_group.${2:foo}.arn}\"",
      "\ttarget_id\t\t= \"${aws_instance.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAlbTargetGroupAttachment"
  },
  "frAwsAlbTargetGroupAttachment": {
    "prefix": "frAwsAlbTargetGroupAttachment",
    "body": [
      "resource \"aws_alb_target_group_attachment\" \"${1:name}\" {",
      "\ttarget_group_arn = \"${aws_alb_target_group.${2:foo}.arn}\"",
      "\ttarget_id\t\t= \"${aws_instance.${3:bar}.id}\"",
      "\tport\t\t\t = 80",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAlbTargetGroupAttachment"
  },
  "srAwsAmi": {
    "prefix": "srAwsAmi",
    "body": [
      "resource \"aws_ami\" \"${1:name}\" {",
      "\tname = \"${1:name}\"",
      "}"
    ],
    "description": "Snippet for srAwsAmi"
  },
  "frAwsAmi": {
    "prefix": "frAwsAmi",
    "body": [
      "resource \"aws_ami\" \"${1:name}\" {",
      "\tname\t\t\t\t= \"${1:name}\"",
      "\tdescription\t\t = \"\"",
      "\tvirtualization_type = \"\"",
      "\tarchitecture\t\t= \"x86_64\"",
      "\tebs_block_device {",
      "\t\tdevice_name\t\t = \"/dev/xvda\"",
      "\t\tdelete_on_termination = true|false",
      "\t\tencrypted\t\t\t = true|false",
      "\t\tiops\t\t\t\t= \"\"",
      "\t\tsnapshot_id\t\t = \"snap-XXX\" # Conflicts with encrypted",
      "\t\tvolume_size\t\t = 8",
      "\t\tvolume_type\t\t = \"\"",
      "\t\tkms_key_id\t\t\t= \"\"",
      "\t}",
      "\tephemeral_block_device {",
      "\t\tdevice_name  = \"\"",
      "\t\tvirtual_name = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAmi"
  },
  "frAwsAmiHvm": {
    "prefix": "frAwsAmiHvm",
    "body": [
      "resource \"aws_ami\" \"${1:name}\" {",
      "\tname\t\t\t\t= \"${1:name}\"",
      "\tdescription\t\t = \"\"",
      "\tvirtualization_type = \"hvm\"",
      "\tarchitecture\t\t= \"x86_64\"",
      "\tsriov_net_support   = \"simple\"",
      "\tebs_block_device {",
      "\t\tdevice_name\t\t = \"/dev/xvda\"",
      "\t\tdelete_on_termination = true|false",
      "\t\tencrypted\t\t\t = true|false",
      "\t\tiops\t\t\t\t= \"\"",
      "\t\tsnapshot_id\t\t = \"snap-XXX\" # Conflicts with encrypted",
      "\t\tvolume_size\t\t = 8",
      "\t\tvolume_type\t\t = \"\"",
      "\t\tkms_key_id\t\t\t= \"\"",
      "\t}",
      "\tephemeral_block_device {",
      "\t\tdevice_name  = \"\"",
      "\t\tvirtual_name = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAmiHvm"
  },
  "frAwsAmiPv": {
    "prefix": "frAwsAmiPv",
    "body": [
      "resource \"aws_ami\" \"${1:name}\" {",
      "\tname\t\t\t\t= \"${1:name}\"",
      "\tdescription\t\t = \"\"",
      "\tvirtualization_type = \"paravirtual\"",
      "\tarchitecture\t\t= \"x86_64\"",
      "\timage_location\t= \"\"",
      "\tkernel_id\t\t = \"\"",
      "\tramdisk_id\t\t= \"\"",
      "\tebs_block_device {",
      "\t\tdevice_name\t\t = \"/dev/xvda\"",
      "\t\tdelete_on_termination = true|false",
      "\t\tencrypted\t\t\t = true|false",
      "\t\tiops\t\t\t\t= \"\"",
      "\t\tsnapshot_id\t\t = \"snap-XXX\"",
      "\t\tvolume_size\t\t = 8",
      "\t\tvolume_type\t\t = \"\"",
      "\t\tkms_key_id\t\t\t= \"\"",
      "\t}",
      "\tephemeral_block_device {",
      "\t\tdevice_name  = \"\"",
      "\t\tvirtual_name = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAmiPv"
  },
  "srAwsAmiCopy": {
    "prefix": "srAwsAmiCopy",
    "body": [
      "resource \"aws_ami_copy\" \"${1:name}\" {",
      "\tname\t\t\t= \"${1:name}\"",
      "\tsource_ami_id\t = \"ami-${2:id}\"",
      "\tsource_ami_region = \"us-west-1\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAmiCopy"
  },
  "frAwsAmiCopy": {
    "prefix": "frAwsAmiCopy",
    "body": [
      "resource \"aws_ami_copy\" \"${1:name}\" {",
      "\tname\t\t\t= \"${1:name}\"",
      "\tsource_ami_id\t = \"ami-${2:id}\"",
      "\tsource_ami_region = \"us-west-1\"",
      "\tencrypted\t\t = true|false",
      "\tkms_key_id\t\t= \"arn:aws:kms:region:account-id:key/key-id\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAmiCopy"
  },
  "srAwsAmiFromInstance": {
    "prefix": "srAwsAmiFromInstance",
    "body": [
      "resource \"aws_ami_from_instance\" \"${1:name}\" {",
      "\tname\t\t\t = \"${1:name}\"",
      "\tsource_instance_id = \"i-XXX\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAmiFromInstance"
  },
  "frAwsAmiFromInstance": {
    "prefix": "frAwsAmiFromInstance",
    "body": [
      "resource \"aws_ami_from_instance\" \"${1:name}\" {",
      "\tname\t\t\t\t\t= \"${1:name}\"",
      "\tsource_instance_id\t= \"i-XXX\"",
      "\tsnapshot_without_reboot = true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAmiFromInstance"
  },
  "srAwsAmiLaunchPermission": {
    "prefix": "srAwsAmiLaunchPermission",
    "body": [
      "resource \"aws_ami_launch_permission\" \"${1:name}\" {",
      "\timage_id   = \"ami-XXX\"",
      "\taccount_id = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAmiLaunchPermission"
  },
  "frAwsAmiLaunchPermission": {
    "prefix": "frAwsAmiLaunchPermission",
    "body": [
      "resource \"aws_ami_launch_permission\" \"${1:name}\" {",
      "\timage_id   = \"ami-XXX\"",
      "\taccount_id = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAmiLaunchPermission"
  },
  "srAwsApiGatewayAccount": {
    "prefix": "srAwsApiGatewayAccount",
    "body": [
      "resource \"aws_api_gateway_account\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayAccount"
  },
  "frAwsApiGatewayAccount": {
    "prefix": "frAwsApiGatewayAccount",
    "body": [
      "resource \"aws_api_gateway_account\" \"${1:name}\" {",
      "\tcloudwatch_role_arn = \"${aws_iam_role.${2:foo}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayAccount"
  },
  "srAwsApiGatewayApiKey": {
    "prefix": "srAwsApiGatewayApiKey",
    "body": [
      "resource \"aws_api_gateway_api_key\" \"${1:name}\" {",
      "\tname = \"${1:name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayApiKey"
  },
  "frAwsApiGatewayApiKey": {
    "prefix": "frAwsApiGatewayApiKey",
    "body": [
      "resource \"aws_api_gateway_api_key\" \"${1:name}\" {",
      "\tname\t\t\t= \"${1:name}\"",
      "\tdescription\t = \"\"",
      "\tenabled\t\t = true|false",
      "\tstage_key {",
      "\t\trest_api_id = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "\t\tstage_name  = \"${aws_api_gateway_deployment.${3:bar}.stage_name}\"",
      "\t}",
      "\tvalue\t\t\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayApiKey"
  },
  "srAwsApiGatewayAuthorizer": {
    "prefix": "srAwsApiGatewayAuthorizer",
    "body": [
      "resource \"aws_api_gateway_authorizer\" \"${1:name}\" {",
      "\tauthorizer_uri = \"\"",
      "\tname\t\t = \"${1:name}\"",
      "\trest_api_id\t= \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayAuthorizer"
  },
  "frAwsApiGatewayAuthorizer": {
    "prefix": "frAwsApiGatewayAuthorizer",
    "body": [
      "resource \"aws_api_gateway_authorizer\" \"${1:name}\" {",
      "\tauthorizer_uri\t\t\t\t = \"\"",
      "\tname\t\t\t\t\t\t\t = \"${1:name}\"",
      "\trest_api_id\t\t\t\t\t= \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "\tidentity_source\t\t\t\t= \"\"",
      "\ttype\t\t\t\t\t\t\t = \"\"",
      "\tauthorizer_credentials\t\t = \"\"",
      "\tauthorizer_result_ttl_in_seconds = 300",
      "\tidentity_validation_expression   = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayAuthorizer"
  },
  "srAwsApiGatewayBasePathMapping": {
    "prefix": "srAwsApiGatewayBasePathMapping",
    "body": [
      "resource \"aws_api_gateway_base_path_mapping\" \"${1:name}\" {",
      "\tapi_id\t= \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "\tdomain_name = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayBasePathMapping"
  },
  "frAwsApiGatewayBasePathMapping": {
    "prefix": "frAwsApiGatewayBasePathMapping",
    "body": [
      "resource \"aws_api_gateway_base_path_mapping\" \"${1:name}\" {",
      "\tapi_id\t= \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "\tdomain_name = \"\"",
      "\tbase_path   = \"${aws_api_gateway_deployment.${3:bar}.stage_name}\"",
      "\tstage_name  = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayBasePathMapping"
  },
  "srAwsApiGatewayClientCertificate": {
    "prefix": "srAwsApiGatewayClientCertificate",
    "body": [
      "resource \"aws_api_gateway_client_certificate\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayClientCertificate"
  },
  "frAwsApiGatewayClientCertificate": {
    "prefix": "frAwsApiGatewayClientCertificate",
    "body": [
      "resource \"aws_api_gateway_client_certificate\" \"${1:name}\" {",
      "\tdescription = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayClientCertificate"
  },
  "srAwsApiGatewayDeployment": {
    "prefix": "srAwsApiGatewayDeployment",
    "body": [
      "resource \"aws_api_gateway_deployment\" \"${1:name}\" {",
      "\tdepends_on  = [\"aws_api_gateway_method.${2:foo}\"] # Suggested on docs",
      "\trest_api_id = \"${aws_api_gateway_rest_api.${3:bar}.id}\"",
      "\tstage_name  = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayDeployment"
  },
  "frAwsApiGatewayDeployment": {
    "prefix": "frAwsApiGatewayDeployment",
    "body": [
      "resource \"aws_api_gateway_deployment\" \"${1:name}\" {",
      "\tdepends_on\t\t= [\"aws_api_gateway_method.${2:foo}\"] # Suggested on docs",
      "\trest_api_id\t = \"${aws_api_gateway_rest_api.${3:bar}.id}\"",
      "\tstage_name\t\t= \"\"",
      "\tdescription\t = \"\"",
      "\tstage_description = \"\"",
      "variables {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayDeployment"
  },
  "srAwsApiGatewayDomainName": {
    "prefix": "srAwsApiGatewayDomainName",
    "body": [
      "resource \"aws_api_gateway_domain_name\" \"${1:name}\" {",
      "\tdomain_name = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayDomainName"
  },
  "frAwsApiGatewayDomainName": {
    "prefix": "frAwsApiGatewayDomainName",
    "body": [
      "resource \"aws_api_gateway_domain_name\" \"${1:name}\" {",
      "\tdomain_name\t\t\t = \"${2:fqdn}\"",
      "\tcertificate_arn\t\t = \"arn:aws:iam::XXX:server-certificate/XXX\"",
      "\tcertificate_name\t\t= \"${3:foo}\" # Conflicts with certificate_arn",
      "\tcertificate_body\t\t= \"${file(\"example.com/example.crt\")}\" # Conflicts with certificate_arn",
      "\tcertificate_chain\t = \"${file(\"example.com/example.ca\")}\" # Conflicts with certificate_arn",
      "\tcertificate_private_key = \"${file(\"example.com/example.key\")}\" # Conflicts with certificate_arn",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayDomainName"
  },
  "srAwsApiGatewayIntegration": {
    "prefix": "srAwsApiGatewayIntegration",
    "body": [
      "resource \"aws_api_gateway_integration\" \"${1:name}\" {",
      "\trest_api_id = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "resource_id = \"${aws_api_gateway_resource.${3:bar}.id}\"",
      "\thttp_method = \"${aws_api_gateway_method.${4:baz}.http_method}\"",
      "\ttype\t\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayIntegration"
  },
  "frAwsApiGatewayIntegration": {
    "prefix": "frAwsApiGatewayIntegration",
    "body": [
      "resource \"aws_api_gateway_integration\" \"${1:name}\" {",
      "\trest_api_id\t\t\t = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "resource_id\t\t\t = \"${aws_api_gateway_resource.${3:bar}.id}\"",
      "\thttp_method\t\t\t = \"${aws_api_gateway_method.${4:baz}.http_method}\"",
      "\ttype\t\t\t\t\t= \"\"",
      "\turi\t\t\t\t\t = \"\"",
      "\tcredentials\t\t\t = \"\"",
      "\tintegration_http_method = \"\"",
      "\trequest_templates {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "\tcontent_handling\t\t= \"\"",
      "\tpassthrough_behavior\t= \"\"",
      "\trequest_parameters {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayIntegration"
  },
  "srAwsApiGatewayIntegrationResponse": {
    "prefix": "srAwsApiGatewayIntegrationResponse",
    "body": [
      "resource \"aws_api_gateway_integration_response\" \"${1:name}\" {",
      "\trest_api_id = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "resource_id = \"${aws_api_gateway_resource.${3:bar}.id}\"",
      "\thttp_method = \"${aws_api_gateway_method.${4:baz}.http_method}\"",
      "\tstatus_code = \"${aws_api_gateway_method_response.${5:qux}.status_code}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayIntegrationResponse"
  },
  "frAwsApiGatewayIntegrationResponse": {
    "prefix": "frAwsApiGatewayIntegrationResponse",
    "body": [
      "resource \"aws_api_gateway_integration_response\" \"${1:name}\" {",
      "\trest_api_id = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "resource_id = \"${aws_api_gateway_resource.${3:bar}.id}\"",
      "\thttp_method = \"${aws_api_gateway_method.${4:baz}.http_method}\"",
      "\tstatus_code = \"${aws_api_gateway_method_response.${5:qux}.status_code}\"",
      "\tselection_pattern = \"\"",
      "\tresponse_templates {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "\tcontent_handling  = \"\"",
      "\tresponse_parameters {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayIntegrationResponse"
  },
  "srAwsApiGatewayMethod": {
    "prefix": "srAwsApiGatewayMethod",
    "body": [
      "resource \"aws_api_gateway_method\" \"${1:name}\" {",
      "\trest_api_id   = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "resource_id   = \"${aws_api_gateway_resource.${3:bar}.id}\"",
      "\thttp_method   = \"${aws_api_gateway_method.${4:baz}.http_method}\"",
      "\tauthorization = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayMethod"
  },
  "frAwsApiGatewayMethod": {
    "prefix": "frAwsApiGatewayMethod",
    "body": [
      "resource \"aws_api_gateway_method\" \"${1:name}\" {",
      "\trest_api_id = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "resource_id = \"${aws_api_gateway_resource.${3:bar}.id}\"",
      "\thttp_method = \"${aws_api_gateway_method.${4:baz}.http_method}\"",
      "\tauthorization = \"\"",
      "\tauthorizer_id = \"\"",
      "\tapi_key_required = true|false",
      "\trequest_models {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "\trequest_parameters {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayMethod"
  },
  "srAwsApiGatewayMethodResponse": {
    "prefix": "srAwsApiGatewayMethodResponse",
    "body": [
      "resource \"aws_api_gateway_method_response\" \"${1:name}\" {",
      "\trest_api_id = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "resource_id = \"${aws_api_gateway_resource.${3:bar}.id}\"",
      "\thttp_method = \"${aws_api_gateway_method.${4:baz}.http_method}\"",
      "\tstatus_code = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayMethodResponse"
  },
  "frAwsApiGatewayMethodResponse": {
    "prefix": "frAwsApiGatewayMethodResponse",
    "body": [
      "resource \"aws_api_gateway_method_response\" \"${1:name}\" {",
      "\trest_api_id = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "resource_id = \"${aws_api_gateway_resource.${3:bar}.id}\"",
      "\thttp_method = \"${aws_api_gateway_method.${4:baz}.http_method}\"",
      "\tstatus_code = \"\"",
      "\tresponse_models {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "\tresponse_parameters {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayMethodResponse"
  },
  "srAwsApiGatewayMethodSettings": {
    "prefix": "srAwsApiGatewayMethodSettings",
    "body": [
      "resource \"aws_api_gateway_method_settings\" \"${1:name}\" {",
      "\trest_api_id  = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "\tstage_name   = \"${aws_api_gateway_stage.${3:bar}.stage_name}\"",
      "\tmethod_path  = \"${aws_api_gateway_resource.${4:baz}.path_part}/${aws_api_gateway_method.${5:qux}.http_method}\"",
      "\tsettings {",
      "\t\tmetrics_enabled = true|false",
      "\t\tlogging_level = \"\"",
      "\t\tdata_trace_enabled = true|false",
      "\t\tthrottling_burst_limit= 1",
      "\t\tthrottling_rate_limit = 1",
      "\t\tcaching_enabled = true|false",
      "\t\tcache_ttl_in_seconds = 60",
      "\t\tcache_data_encrypted = true|false",
      "\t\trequire_authorization_for_cache_control = true|false",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayMethodSettings"
  },
  "frAwsApiGatewayMethodSettings": {
    "prefix": "frAwsApiGatewayMethodSettings",
    "body": [
      "resource \"aws_api_gateway_method_settings\" \"${1:name}\" {",
      "\trest_api_id  = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "\tstage_name   = \"${aws_api_gateway_stage.${3:bar}.stage_name}\"",
      "\tmethod_path  = \"${aws_api_gateway_resource.${4:baz}.path_part}/${aws_api_gateway_method.${5:qux}.http_method}\"",
      "\tsettings {",
      "\t\tmetrics_enabled = true|false",
      "\t\tlogging_level = \"\"",
      "\t\tdata_trace_enabled = true|false",
      "\t\tthrottling_burst_limit = 1",
      "\t\tthrottling_rate_limit = 1",
      "\t\tcaching_enabled = true|false",
      "\t\tcache_ttl_in_seconds = 60",
      "\t\tcache_data_encrypted = true|false",
      "\t\trequire_authorization_for_cache_control = true|false",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayMethodSettings"
  },
  "srAwsApiGatewayModel": {
    "prefix": "srAwsApiGatewayModel",
    "body": [
      "resource \"aws_api_gateway_model\" \"${1:name}\" {",
      "\trest_api_id  = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "\tname = \"${1:name}\"",
      "\tcontent_type = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayModel"
  },
  "frAwsApiGatewayModel": {
    "prefix": "frAwsApiGatewayModel",
    "body": [
      "resource \"aws_api_gateway_model\" \"${1:name}\" {",
      "\trest_api_id  = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "\tname = \"${1:name}\"",
      "\tcontent_type = \"\"",
      "\tdescription  = \"\"",
      "\tschema = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayModel"
  },
  "srAwsApiGatewayResource": {
    "prefix": "srAwsApiGatewayResource",
    "body": [
      "resource \"aws_api_gateway_resource\" \"${1:name}\" {",
      "\trest_api_id = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "\tparent_id   = \"${aws_api_gateway_rest_api.${3:bar}.root_resource_id}\"",
      "\tpath_part   = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayResource"
  },
  "frAwsApiGatewayResource": {
    "prefix": "frAwsApiGatewayResource",
    "body": [
      "resource \"aws_api_gateway_resource\" \"${1:name}\" {",
      "\trest_api_id = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "\tparent_id   = \"${aws_api_gateway_rest_api.${3:bar}.root_resource_id}\"",
      "\tpath_part   = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayResource"
  },
  "srAwsApiGatewayRestApi": {
    "prefix": "srAwsApiGatewayRestApi",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"${1:name}\" {",
      "\tname = \"${1:name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayRestApi"
  },
  "frAwsApiGatewayRestApi": {
    "prefix": "frAwsApiGatewayRestApi",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"${1:name}\" {",
      "\tname\t\t\t = \"${1:name}\"",
      "\tdescription\t\t= \"\"",
      "\tbinary_media_types = [\"\"]",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayRestApi"
  },
  "srAwsApiGatewayStage": {
    "prefix": "srAwsApiGatewayStage",
    "body": [
      "resource \"aws_api_gateway_stage\" \"${1:name}\" {",
      "\tstage_name\t= \"${1:name}\"",
      "\tdeployment_id = \"${aws_api_gateway_deployment.${2:foo}.id}\"",
      "\trest_api_id   = \"${aws_api_gateway_rest_api.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayStage"
  },
  "frAwsApiGatewayStage": {
    "prefix": "frAwsApiGatewayStage",
    "body": [
      "resource \"aws_api_gateway_stage\" \"${1:name}\" {",
      "\tstage_name\t\t\t= \"${1:name}\"",
      "\tdeployment_id\t\t = \"${aws_api_gateway_deployment.${2:foo}.id}\"",
      "\trest_api_id\t\t = \"${aws_api_gateway_rest_api.${3:bar}.id}\"",
      "\tcache_cluster_enabled = true|false",
      "\tcache_cluster_size\t= \"\"",
      "\tclient_certificate_id = \"\"",
      "\tdescription\t\t = \"\"",
      "\tdocumentation_version = \"\"",
      "variables {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayStage"
  },
  "srAwsApiGatewayUsagePlan": {
    "prefix": "srAwsApiGatewayUsagePlan",
    "body": [
      "resource \"aws_api_gateway_usage_plan\" \"${1:name}\" {",
      "\tname = \"${1:name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayUsagePlan"
  },
  "frAwsApiGatewayUsagePlan": {
    "prefix": "frAwsApiGatewayUsagePlan",
    "body": [
      "resource \"aws_api_gateway_usage_plan\" \"${1:name}\" {",
      "\tname\t\t = \"${1:name}\"",
      "\tapi_stages {",
      "\t\tapi_id = \"${aws_api_gateway_rest_api.${2:foo}.id}\"",
      "\t\tstage  = \"${aws_api_gateway_deployment.${3:bar}.stage_name}\"",
      "\t}",
      "\tquota_settings {",
      "\t\tlimit  = 1",
      "\t\tperiod = \"\"",
      "\t}",
      "\tthrottle_settings {",
      "\t\tburst_limit = 1",
      "\t\trate_limit  = 1",
      "\t}",
      "\tproduct_code = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayUsagePlan"
  },
  "srAwsApiGatewayUsagePlanKey": {
    "prefix": "srAwsApiGatewayUsagePlanKey",
    "body": [
      "resource \"aws_api_gateway_usage_plan_key\" \"${1:name}\" {",
      "\tkey_id\t\t= \"${aws_api_gateway_api_key.${2:foo}.id}\"",
      "\tkey_type\t= \"\"",
      "\tusage_plan_id = \"${aws_api_gateway_usage_plan.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsApiGatewayUsagePlanKey"
  },
  "frAwsApiGatewayUsagePlanKey": {
    "prefix": "frAwsApiGatewayUsagePlanKey",
    "body": [
      "resource \"aws_api_gateway_usage_plan_key\" \"${1:name}\" {",
      "\tkey_id\t\t= \"${aws_api_gateway_api_key.${2:foo}.id}\"",
      "\tkey_type\t= \"\"",
      "\tusage_plan_id = \"${aws_api_gateway_usage_plan.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsApiGatewayUsagePlanKey"
  },
  "srAwsAppCookieStickinessPolicy": {
    "prefix": "srAwsAppCookieStickinessPolicy",
    "body": [
      "resource \"aws_app_cookie_stickiness_policy\" \"${1:name}\" {",
      "\tname\t\t= \"$1\"",
      "\tload_balancer = \"${aws_elb.${2:foo}.name}\"",
      "\tlb_port\t = 80",
      "\tcookie_name   = \"${3:bar}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAppCookieStickinessPolicy"
  },
  "frAwsAppCookieStickinessPolicy": {
    "prefix": "frAwsAppCookieStickinessPolicy",
    "body": [
      "resource \"aws_app_cookie_stickiness_policy\" \"${1:name}\" {",
      "\tname\t\t= \"$1\"",
      "\tload_balancer = \"${aws_elb.${2:foo}.name}\"",
      "\tlb_port\t = 80",
      "\tcookie_name   = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAppCookieStickinessPolicy"
  },
  "srAwsAppautoscalingPolicy": {
    "prefix": "srAwsAppautoscalingPolicy",
    "body": [
      "resource \"aws_appautoscaling_policy\" \"${1:name}\" {",
      "\tname\t\t\t\t\t= \"${1}\"",
      "resource_id\t\t\t = \"${2:bar}\"",
      "\tscalable_dimension\t= \"${3:baz}\"",
      "\tservice_namespace\t = \"${4:qux}\"",
      "\tadjustment_type\t\t = \"${5:quux}\"",
      "\tcooldown\t\t\t\t= 60",
      "\tmetric_aggregation_type = \"${6:quz}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAppautoscalingPolicy"
  },
  "frAwsAppautoscalingPolicy": {
    "prefix": "frAwsAppautoscalingPolicy",
    "body": [
      "resource \"aws_appautoscaling_policy\" \"${1:name}\" {",
      "\tname\t\t\t\t\t = \"${1}\"",
      "resource_id\t\t\t= \"${2:bar}\"",
      "\tscalable_dimension\t = \"${3:baz}\"",
      "\tservice_namespace\t\t= \"${4:qux}\"",
      "\tadjustment_type\t\t= \"${5:quux}\"",
      "\tcooldown\t\t\t\t = 60",
      "\tmetric_aggregation_type  = \"${6:quz}\"",
      "\tpolicy_type\t\t\t= \"\"",
      "\tmin_adjustment_magnitude = 1",
      "\talarms\t\t\t\t = [\"\"]",
      "\tstep_adjustment {",
      "\t\tmetric_interval_lower_bound = 1.0",
      "\t\tmetric_interval_upper_bound = 2.0",
      "\t\tscaling_adjustment\t\t= -1",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAppautoscalingPolicy"
  },
  "srAwsAppautoscalingTarget": {
    "prefix": "srAwsAppautoscalingTarget",
    "body": [
      "resource \"aws_appautoscaling_target\" \"${1:name}\" {",
      "\tmax_capacity\t = 1",
      "\tmin_capacity\t = 1",
      "resource_id\t\t= \"\"",
      "\trole_arn\t\t = \"${aws_iam_role.${2:foo}.arn}\"",
      "\tscalable_dimension = \"\"",
      "\tservice_namespace  = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAppautoscalingTarget"
  },
  "frAwsAppautoscalingTarget": {
    "prefix": "frAwsAppautoscalingTarget",
    "body": [
      "resource \"aws_appautoscaling_target\" \"${1:name}\" {",
      "\tmax_capacity\t = 1",
      "\tmin_capacity\t = 1",
      "resource_id\t\t= \"\"",
      "\trole_arn\t\t = \"${aws_iam_role.${2:foo}.arn}\"",
      "\tscalable_dimension = \"\"",
      "\tservice_namespace  = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAppautoscalingTarget"
  },
  "srAwsAutoscalingAttachment": {
    "prefix": "srAwsAutoscalingAttachment",
    "body": [
      "\t// Note: use either separate attachment or inline attachment, not both at the same time.",
      "resource \"aws_autoscaling_attachment\" \"${1:name}\" {",
      "\tautoscaling_group_name = \"${aws_autoscaling_group.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAutoscalingAttachment"
  },
  "frAwsAutoscalingAttachment": {
    "prefix": "frAwsAutoscalingAttachment",
    "body": [
      "\t// Note: use either separate attachment or inline attachment, not both at the same time.",
      "resource \"aws_autoscaling_attachment\" \"${1:name}\" {",
      "\tautoscaling_group_name = \"${aws_autoscaling_group.${2:foo}.id}\"",
      "\telb\t\t\t\t\t= \"${aws_elb.${3:bar}.id}\"",
      "\talb_target_group_arn   = \"${aws_alb_target_group.${4:baz}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAutoscalingAttachment"
  },
  "srAwsAutoscalingGroup": {
    "prefix": "srAwsAutoscalingGroup",
    "body": [
      "\t// Note: use either separate attachment or inline attachment, not both at the same time.",
      "resource \"aws_autoscaling_group\" \"${1:name}\" {",
      "\tlaunch_configuration = \"${aws_launch_configuration.${2:foo}.name}\"",
      "\tmin_size\t\t\t = 1",
      "\tmax_size\t\t\t = 1",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAutoscalingGroup"
  },
  "frAwsAutoscalingGroup": {
    "prefix": "frAwsAutoscalingGroup",
    "body": [
      "\t// Note: use either separate attachment or inline attachment, not both at the same time.",
      "resource \"aws_autoscaling_group\" \"${1:name}\" {",
      "\tlaunch_configuration\t= \"${aws_launch_configuration.${2:foo}.name}\"",
      "\tmin_size\t\t\t\t= 1",
      "\tmax_size\t\t\t\t= 1",
      "\tname\t\t\t\t\t= \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix\t\t\t = \"\"",
      "\tdesired_capacity\t\t= 1",
      "\tmin_elb_capacity\t\t= 1",
      "\tdefault_cooldown\t\t= 1",
      "\tforce_delete\t\t\t= true|false",
      "\thealth_check_grace_period = 300",
      "\thealth_check_type\t\t = \"\"",
      "\tavailability_zones\t\t= [\"\"]",
      "\tplacement_group\t\t = \"${aws_placement_group.${3:bar}.id}\"",
      "\t#load_balancers\t\t\t= [\"\"] #Provided as separate resource below",
      "\tvpc_zone_identifier\t = [\"\"]",
      "\ttermination_policies\t= [\"\"]",
      "\twait_for_capacity_timeout = \"10m\"",
      "\twait_for_elb_capacity\t = 1",
      "\tenabled_metrics\t\t = [\"\"]",
      "\tsuspended_processes\t = [\"\"]",
      "\tmetrics_granularity\t = \"1Minute\"",
      "\tprotect_from_scale_in\t = true|false",
      "\ttarget_group_arns\t\t = [\"\"]",
      "\tinitial_lifecycle_hook {",
      "\t\tname\t\t\t\t\t= \"\"",
      "\t\tdefault_result\t\t= \"\"",
      "\t\theartbeat_timeout\t = 1",
      "\t\tlifecycle_transition\t= \"\"",
      "\t\tnotification_metadata   = \"\"",
      "\t\tnotification_target_arn = \"\"",
      "\t\trole_arn\t\t\t\t= \"${aws_iam_role.${2:foo}.arn}\"",
      "\t}",
      "\ttag {",
      "\t\tkey\t\t\t\t = \"\"",
      "\t\tvalue\t\t\t = \"\"",
      "\t\tpropagate_at_launch = true|false",
      "\t}",
      "}",
      "\t# Attachment to avoid using 'load_balancers' inline (see docs)",
      "resource \"aws_autoscaling_attachment\" \"${1}_attachment\" {",
      "\tautoscaling_group_name = \"${aws_autoscaling_group.${1}.id}\"",
      "\telb\t\t\t\t\t= \"${aws_elb.${4:qux}.id}\"",
      "\talb_target_group_arn   = \"${aws_alb_target_group.${5:quz}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAutoscalingGroup"
  },
  "srAwsAutoscalingLifecycleHook": {
    "prefix": "srAwsAutoscalingLifecycleHook",
    "body": [
      "resource \"aws_autoscaling_lifecycle_hook\" \"${1:name}\" {",
      "\tname\t\t\t\t = \"${1}\"",
      "\tautoscaling_group_name = \"${aws_autoscaling_group.${2:foo}.name}\"",
      "\tlifecycle_transition   = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAutoscalingLifecycleHook"
  },
  "frAwsAutoscalingLifecycleHook": {
    "prefix": "frAwsAutoscalingLifecycleHook",
    "body": [
      "resource \"aws_autoscaling_lifecycle_hook\" \"${1:name}\" {",
      "\tname\t\t\t\t\t= \"${1}\"",
      "\tautoscaling_group_name  = \"${aws_autoscaling_group.${2:foo}.name}\"",
      "\tlifecycle_transition\t= \"\"",
      "\tdefault_result\t\t= \"\"",
      "\theartbeat_timeout\t = 1",
      "\tnotification_metadata   = \"\"",
      "\tnotification_target_arn = \"arn:aws:sqs:region:XXX:queue1*\"",
      "\trole_arn\t\t\t\t= \"${aws_iam_role.${2:foo}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAutoscalingLifecycleHook"
  },
  "srAwsAutoscalingNotification": {
    "prefix": "srAwsAutoscalingNotification",
    "body": [
      "resource \"aws_autoscaling_notification\" \"${1:name}\" {",
      "\ttopic_arn\t = \"${aws_sns_topic.${2:foo}.arn}\"",
      "\tgroup_names   = [\"${aws_autoscaling_group.${3:bar}.name}\"]",
      "\tnotifications = [\"autoscaling:EC2_INSTANCE_\"]",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAutoscalingNotification"
  },
  "frAwsAutoscalingNotification": {
    "prefix": "frAwsAutoscalingNotification",
    "body": [
      "resource \"aws_autoscaling_notification\" \"${1:name}\" {",
      "\ttopic_arn\t = \"${aws_sns_topic.${2:foo}.arn}\"",
      "\tgroup_names   = [\"${aws_autoscaling_group.${3:bar}.name}\"]",
      "\tnotifications = [\"autoscaling:EC2_INSTANCE_\"]",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAutoscalingNotification"
  },
  "srAwsAutoscalingPolicy": {
    "prefix": "srAwsAutoscalingPolicy",
    "body": [
      "resource \"aws_autoscaling_policy\" \"${1:name}\" {",
      "\tname\t\t\t\t = \"${1:name}\"",
      "\tadjustment_type\t\t= \"\"",
      "\tautoscaling_group_name = \"${aws_autoscaling_group.${2:foo}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAutoscalingPolicy"
  },
  "frAwsAutoscalingPolicy": {
    "prefix": "frAwsAutoscalingPolicy",
    "body": [
      "resource \"aws_autoscaling_policy\" \"${1:name}\" {",
      "\tname\t\t\t\t\t= \"${1}\"",
      "\tadjustment_type\t\t = \"\"",
      "\tautoscaling_group_name\t= \"${aws_autoscaling_group.${2:foo}.name}\"",
      "\tpolicy_type\t\t\t = \"SimpleScaling\"|\"StepScaling\"",
      "\tcooldown\t\t\t\t= 300 # SimpleScaling Only",
      "\tscaling_adjustment\t\t= 1   # SimpleScaling Only",
      "\tmetric_aggregation_type   = \"\"  # StepScaling Only",
      "\testimated_instance_warmup = 200 # StepScaling Only",
      "\tstep_adjustment {\t\t\t# StepScaling Only",
      "\t\tmetric_interval_lower_bound  = 2.0",
      "\t\tmetric_interval_upper_bound  = 3.0",
      "\t\tscaling_adjustment\t\t = 1",
      "\t}",
      "\t#min_adjustment_step\t = 1 # Use min_adjustment_magnitude instead",
      "\tmin_adjustment_magnitude = 1",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAutoscalingPolicy"
  },
  "srAwsAutoscalingSchedule": {
    "prefix": "srAwsAutoscalingSchedule",
    "body": [
      "resource \"aws_autoscaling_schedule\" \"${1:name}\" {",
      "\tscheduled_action_name  = \"${1}\"",
      "\tautoscaling_group_name = \"${aws_autoscaling_group.${2:foo}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsAutoscalingSchedule"
  },
  "frAwsAutoscalingSchedule": {
    "prefix": "frAwsAutoscalingSchedule",
    "body": [
      "resource \"aws_autoscaling_schedule\" \"${1:name}\" {",
      "\tscheduled_action_name  = \"${1}\"",
      "\tautoscaling_group_name = \"${aws_autoscaling_group.${2:foo}.name}\"",
      "\tstart_time\t\t\t = \"\"",
      "\tend_time\t\t\t = \"\"",
      "\trecurrence\t\t\t = \"0 * * * *\"",
      "\tmin_size\t\t\t = 1",
      "\tmax_size\t\t\t = 1",
      "\tdesired_capacity\t = 1",
      "}",
      ""
    ],
    "description": "Snippet for frAwsAutoscalingSchedule"
  },
  "srAwsCloudFormationStack": {
    "prefix": "srAwsCloudFormationStack",
    "body": [
      "resource \"aws_cloud_formation_stack\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudFormationStack"
  },
  "frAwsCloudFormationStack": {
    "prefix": "frAwsCloudFormationStack",
    "body": [
      "resource \"aws_cloud_formation_stack\" \"${1:name}\" {",
      "\tname\t\t\t = \"${1}\"",
      "\ttemplate_body\t= \"\"",
      "\ttemplate_url\t = \"\"",
      "\tcapabilities\t = [\"\"]",
      "\tdisable_rollback   = true|false",
      "\tnotification_arns  = [\"${aws_sns_topic.${2:foo}.arn}\"]",
      "\ton_failure\t\t = \"\"",
      "\tparameters {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "\tpolicy_body\t\t= \"\"",
      "\tpolicy_url\t\t = \"\" # Conflicts with policy_body",
      "\ttimeout_in_minutes = 1",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t",
      "\tiam_role_arn\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudFormationStack"
  },
  "srAwsCloudFrontDistribution": {
    "prefix": "srAwsCloudFrontDistribution",
    "body": [
      "resource \"aws_cloud_front_distribution\" \"${1:name}\" {",
      "\tdefault_cache_behavior {",
      "\t\tallowed_methods\t\t= [\"\"]",
      "\t\tcached_methods\t\t = [\"\"]",
      "\t\tcompress\t\t\t = true|false",
      "\t\tdefault_ttl\t\t\t= 1",
      "\t\tforwarded_values {",
      "\t\tcookies {",
      "\t\t\tforward\t\t = \"\"",
      "\t\t\twhitelisted_names = [\"\"]",
      "\t\t}",
      "\t\theaders\t\t\t\t = [\"\"]",
      "\t\tquery_string\t\t\t= true|false",
      "\t\tquery_string_cache_keys = [\"\"]",
      "\t}",
      "\t\tlambda_function_association {",
      "\t\tevent_type = \"\"",
      "\t\tlambda_arn = \"\"",
      "\t}",
      "\t\tmax_ttl\t\t\t\t= 1",
      "\t\tmin_ttl\t\t\t\t= 1",
      "\t\tsmooth_streaming\t = true|false",
      "\t\ttarget_origin_id\t = \"\"",
      "\t\ttrusted_signers\t\t= [\"\"]",
      "\t\tviewer_protocol_policy = \"\"",
      "\t}",
      "\tenabled\t\t\t\t= true|false",
      "\torigin {",
      "\t\tcustom_origin_config {",
      "\t\thttp_port\t\t\t= 1",
      "\t\thttps_port\t\t\t = 1",
      "\t\torigin_protocol_policy = \"\"",
      "\t\torigin_ssl_protocols   = [\"\"]",
      "\t}",
      "\t\tdomain_name\t\t = \"${aws_s3_bucket.${2:foo}.bucket_domain_name}\"",
      "\t\tcustom_header {",
      "\t\tname  = \"\"",
      "\t\tvalue = \"\"",
      "\t}",
      "\t\torigin_id\t\t\t = \"\"",
      "\t\torigin_path\t\t = \"\"",
      "\t\ts3_origin_config {",
      "\t\torigin_access_identity = \"\"",
      "\t}",
      "\t}",
      "\trestrictions {",
      "\t\tgeo_restriction {",
      "\t\tlocations\t\t= [\"\"]",
      "\t\trestriction_type = \"\"",
      "\t}",
      "\t}",
      "\tviewer_certificate {",
      "\t\tacm_certificate_arn\t\t\t= \"\"",
      "\t\tcloudfront_default_certificate = true|false",
      "\t\tiam_certificate_id\t\t\t = \"\"",
      "\t\tminimum_protocol_version\t = \"\"",
      "\t\tssl_support_method\t\t\t = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudFrontDistribution"
  },
  "frAwsCloudFrontDistribution": {
    "prefix": "frAwsCloudFrontDistribution",
    "body": [
      "resource \"aws_cloud_front_distribution\" \"${1:name}\" {",
      "\tdefault_cache_behavior {",
      "\t\tallowed_methods\t\t\t= [\"\"]",
      "\t\tcached_methods\t\t\t = [\"\"]",
      "\t\tcompress\t\t\t\t\t = true|false",
      "\t\tdefault_ttl\t\t\t\t= 1",
      "\t\tforwarded_values {",
      "\t\tcookies {",
      "\t\t\tforward\t\t = \"\"",
      "\t\t\twhitelisted_names = [\"\"]",
      "\t\t}",
      "\t\theaders\t\t\t\t = [\"\"]",
      "\t\tquery_string\t\t\t= true|false",
      "\t\tquery_string_cache_keys = [\"\"]",
      "\t}",
      "\t\tlambda_function_association {",
      "\t\tevent_type = \"\"",
      "\t\tlambda_arn = \"\"",
      "\t}",
      "\t\tmax_ttl\t\t\t\t= 1",
      "\t\tmin_ttl\t\t\t\t= 1",
      "\t\tsmooth_streaming\t = true|false",
      "\t\ttarget_origin_id\t = \"\"",
      "\t\ttrusted_signers\t\t= [\"\"]",
      "\t\tviewer_protocol_policy = \"\"",
      "\t}",
      "\tenabled\t\t\t\t\t\t= true|false",
      "\torigin {",
      "\t\tcustom_origin_config {",
      "\t\thttp_port\t\t\t= 1",
      "\t\thttps_port\t\t\t = 1",
      "\t\torigin_protocol_policy = \"\"",
      "\t\torigin_ssl_protocols   = [\"\"]",
      "\t}",
      "\t\tdomain_name\t\t = \"${aws_s3_bucket.${2:foo}.bucket_domain_name}\"",
      "\t\tcustom_header {",
      "\t\tname  = \"\"",
      "\t\tvalue = \"\"",
      "\t}",
      "\t\torigin_id\t\t\t = \"\"",
      "\t\torigin_path\t\t = \"\"",
      "\t\ts3_origin_config {",
      "\t\torigin_access_identity = \"\"",
      "\t}",
      "\t}",
      "\trestrictions {",
      "\t\tgeo_restriction {",
      "\t\tlocations\t\t= [\"\"]",
      "\t\trestriction_type = \"\"",
      "\t}",
      "\t}",
      "\tviewer_certificate {",
      "\t\tacm_certificate_arn\t\t\t= \"\"",
      "\t\tcloudfront_default_certificate = true|false",
      "\t\tiam_certificate_id\t\t\t = \"\"",
      "\t\tminimum_protocol_version\t = \"\"",
      "\t\tssl_support_method\t\t\t = \"\"",
      "\t}",
      "\taliases\t\t\t\t\t\t= [\"\"]",
      "\tcache_behavior {",
      "\t\tallowed_methods\t\t\t= [\"\"]",
      "\t\tcached_methods\t\t\t = [\"\"]",
      "\t\tcompress\t\t\t\t\t = true|false",
      "\t\tdefault_ttl\t\t\t\t= 1",
      "\t\tforwarded_values {",
      "\t\tcookies {",
      "\t\t\tforward\t\t = \"\"",
      "\t\t\twhitelisted_names = [\"\"]",
      "\t\t}",
      "\t\theaders\t\t\t\t = [\"\"]",
      "\t\tquery_string\t\t\t= true|false",
      "\t\tquery_string_cache_keys = [\"\"]",
      "\t}",
      "\t\tlambda_function_association {",
      "\t\tevent_type = \"\"",
      "\t\tlambda_arn = \"\"",
      "\t}",
      "\t\tmax_ttl\t\t\t\t\t= 1",
      "\t\tmin_ttl\t\t\t\t\t= 1",
      "\t\tpath_pattern\t\t\t\t = \"\"",
      "\t\tsmooth_streaming\t\t\t = true|false",
      "\t\ttarget_origin_id\t\t\t = \"\"",
      "\t\ttrusted_signers\t\t\t= [\"\"]",
      "\t\tviewer_protocol_policy\t = \"\"",
      "\t}",
      "\tcomment\t\t\t\t\t\t= \"\"",
      "\tcustom_error_response {",
      "\t\terror_caching_min_ttl = 1",
      "\t\terror_code\t\t\t= 1",
      "\t\tresponse_code\t\t = 1",
      "\t\tresponse_page_path\t= \"\"",
      "\t}",
      "\tdefault_root_object\t\t\t= \"\"",
      "\thttp_version\t\t\t\t = \"\"",
      "\tlogging_config {",
      "\t\tbucket\t\t= \"\"",
      "\t\tinclude_cookies = true|false",
      "\t\tprefix\t\t= \"\"",
      "\t}",
      "\tprice_class\t\t\t\t\t= \"\"",
      "\tweb_acl_id\t\t\t\t\t = \"\"",
      "\tretain_on_delete\t\t\t = true|false",
      "\tis_ipv6_enabled\t\t\t\t= true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudFrontDistribution"
  },
  "srAwsCloudFrontOriginAccessIdentity": {
    "prefix": "srAwsCloudFrontOriginAccessIdentity",
    "body": [
      "resource \"aws_cloud_front_origin_access_identity\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudFrontOriginAccessIdentity"
  },
  "frAwsCloudFrontOriginAccessIdentity": {
    "prefix": "frAwsCloudFrontOriginAccessIdentity",
    "body": [
      "resource \"aws_cloud_front_origin_access_identity\" \"${1:name}\" {",
      "\tcomment = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudFrontOriginAccessIdentity"
  },
  "srAwsCloudTrail": {
    "prefix": "srAwsCloudTrail",
    "body": [
      "resource \"aws_cloud_trail\" \"${1:name}\" {",
      "\tname\t\t = \"${1}\"",
      "\ts3_bucket_name = \"${aws_s3_bucket.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudTrail"
  },
  "frAwsCloudTrail": {
    "prefix": "frAwsCloudTrail",
    "body": [
      "resource \"aws_cloud_trail\" \"${1:name}\" {",
      "\tname\t\t\t\t\t\t= \"${1}\"",
      "\ts3_bucket_name\t\t\t\t= \"${aws_s3_bucket.${2:foo}.id}\"",
      "\tenable_logging\t\t\t\t= true|false",
      "\ts3_key_prefix\t\t\t\t = \"\"",
      "\tcloud_watch_logs_role_arn\t = \"\"",
      "\tcloud_watch_logs_group_arn\t= \"\"",
      "\tinclude_global_service_events = true|false",
      "\tis_multi_region_trail\t\t = true|false",
      "\tsns_topic_name\t\t\t\t= \"\"",
      "\tenable_log_file_validation\t= true|false",
      "\tkms_key_id\t\t\t\t\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudTrail"
  },
  "srAwsCloudWatchEventRule": {
    "prefix": "srAwsCloudWatchEventRule",
    "body": [
      "resource \"aws_cloud_watch_event_rule\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudWatchEventRule"
  },
  "frAwsCloudWatchEventRule": {
    "prefix": "frAwsCloudWatchEventRule",
    "body": [
      "resource \"aws_cloud_watch_event_rule\" \"${1:name}\" {",
      "\tname\t\t\t\t= \"${1}\"",
      "\tschedule_expression = \"rate(5 minutes)\"",
      "\tevent_pattern\t = \"\"",
      "\tdescription\t\t = \"\"",
      "\trole_arn\t\t\t= \"${aws_iam_role.${2:foo}.arn}\"",
      "\tis_enabled\t\t= true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudWatchEventRule"
  },
  "srAwsCloudWatchEventTarget": {
    "prefix": "srAwsCloudWatchEventTarget",
    "body": [
      "resource \"aws_cloud_watch_event_target\" \"${1:name}\" {",
      "\trule = \"${aws_cloudwatch_event_rule.${2:foo}.name}\"",
      "\tarn  = \"${aws_sns_topic.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudWatchEventTarget"
  },
  "frAwsCloudWatchEventTarget": {
    "prefix": "frAwsCloudWatchEventTarget",
    "body": [
      "resource \"aws_cloud_watch_event_target\" \"${1:name}\" {",
      "\ttarget_id  = \"${1}\"",
      "\trule\t = \"${aws_cloudwatch_event_rule.${2:foo}.name}\"",
      "\tarn\t\t= \"${aws_sns_topic.${3:bar}.arn}\"",
      "\tinput\t= \"\" # Conflicts with input_path",
      "\tinput_path = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudWatchEventTarget"
  },
  "srAwsCloudWatchLogDestination": {
    "prefix": "srAwsCloudWatchLogDestination",
    "body": [
      "resource \"aws_cloud_watch_log_destination\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\trole_arn   = \"${aws_iam_role.${2:foo}.arn}\"",
      "\ttarget_arn = \"${aws_kinesis_stream.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudWatchLogDestination"
  },
  "frAwsCloudWatchLogDestination": {
    "prefix": "frAwsCloudWatchLogDestination",
    "body": [
      "resource \"aws_cloud_watch_log_destination\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\trole_arn   = \"${aws_iam_role.${2:foo}.arn}\"",
      "\ttarget_arn = \"${aws_kinesis_stream.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudWatchLogDestination"
  },
  "srAwsCloudWatchLogDestinationPolicy": {
    "prefix": "srAwsCloudWatchLogDestinationPolicy",
    "body": [
      "resource \"aws_cloud_watch_log_destination_policy\" \"${1:name}\" {",
      "\tdestination_name = \"${aws_cloudwatch_log_destination.${2:foo}.name}\"",
      "\taccess_policy\t= \"${data.aws_iam_policy_document.${3:bar}.json}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudWatchLogDestinationPolicy"
  },
  "frAwsCloudWatchLogDestinationPolicy": {
    "prefix": "frAwsCloudWatchLogDestinationPolicy",
    "body": [
      "resource \"aws_cloud_watch_log_destination_policy\" \"${1:name}\" {",
      "\tdestination_name = \"${aws_cloudwatch_log_destination.${2:foo}.name}\"",
      "\taccess_policy\t= \"${data.aws_iam_policy_document.${3:bar}.json}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudWatchLogDestinationPolicy"
  },
  "srAwsCloudWatchLogGroup": {
    "prefix": "srAwsCloudWatchLogGroup",
    "body": [
      "resource \"aws_cloud_watch_log_group\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudWatchLogGroup"
  },
  "frAwsCloudWatchLogGroup": {
    "prefix": "frAwsCloudWatchLogGroup",
    "body": [
      "resource \"aws_cloud_watch_log_group\" \"${1:name}\" {",
      "\tname\t\t\t= \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix\t = \"\"",
      "\tretention_in_days = 1",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudWatchLogGroup"
  },
  "srAwsCloudWatchLogMetricFilter": {
    "prefix": "srAwsCloudWatchLogMetricFilter",
    "body": [
      "resource \"aws_cloud_watch_log_metric_filter\" \"${1:name}\" {",
      "\tname\t\t\t\t= \"${1}\"",
      "\tpattern\t\t\t = \"\"",
      "\tlog_group_name\t\t= \"${aws_cloudwatch_log_group.${2:foo}.name}\"",
      "\tmetric_transformation {",
      "\t\tname\t= \"\"",
      "\t\tnamespace = \"\"",
      "\t\tvalue\t = 1",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudWatchLogMetricFilter"
  },
  "frAwsCloudWatchLogMetricFilter": {
    "prefix": "frAwsCloudWatchLogMetricFilter",
    "body": [
      "resource \"aws_cloud_watch_log_metric_filter\" \"${1:name}\" {",
      "\tname\t\t\t\t= \"${1}\"",
      "\tpattern\t\t\t = \"\"",
      "\tlog_group_name\t\t= \"${aws_cloudwatch_log_group.${2:foo}.name}\"",
      "\tmetric_transformation {",
      "\t\tname\t= \"\"",
      "\t\tnamespace = \"\"",
      "\t\tvalue\t = 1",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudWatchLogMetricFilter"
  },
  "srAwsCloudWatchLogStream": {
    "prefix": "srAwsCloudWatchLogStream",
    "body": [
      "resource \"aws_cloud_watch_log_stream\" \"${1:name}\" {",
      "\tname\t\t = \"${1}\"",
      "\tlog_group_name = \"${aws_cloudwatch_log_group.${2:foo}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudWatchLogStream"
  },
  "frAwsCloudWatchLogStream": {
    "prefix": "frAwsCloudWatchLogStream",
    "body": [
      "resource \"aws_cloud_watch_log_stream\" \"${1:name}\" {",
      "\tname\t\t = \"${1}\"",
      "\tlog_group_name = \"${aws_cloudwatch_log_group.${2:foo}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudWatchLogStream"
  },
  "srAwsCloudWatchLogSubscriptionFilter": {
    "prefix": "srAwsCloudWatchLogSubscriptionFilter",
    "body": [
      "resource \"aws_cloud_watch_log_subscription_filter\" \"${1:name}\" {",
      "\tname\t\t\t= \"${1}\"",
      "\tdestination_arn = \"${aws_kinesis_stream.${3:bar}.arn}\"",
      "\tfilter_pattern  = \"\"",
      "\tlog_group_name  = \"${aws_cloudwatch_log_group.${2:foo}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudWatchLogSubscriptionFilter"
  },
  "frAwsCloudWatchLogSubscriptionFilter": {
    "prefix": "frAwsCloudWatchLogSubscriptionFilter",
    "body": [
      "resource \"aws_cloud_watch_log_subscription_filter\" \"${1:name}\" {",
      "\tname\t\t\t= \"${1}\"",
      "\tdestination_arn = \"${aws_kinesis_stream.${3:bar}.arn}\"",
      "\tfilter_pattern  = \"\"",
      "\tlog_group_name  = \"${aws_cloudwatch_log_group.${2:foo}.name}\"",
      "\trole_arn\t\t= \"${aws_iam_role.${2:foo}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudWatchLogSubscriptionFilter"
  },
  "srAwsCloudWatchMetricAlarm": {
    "prefix": "srAwsCloudWatchMetricAlarm",
    "body": [
      "resource \"aws_cloud_watch_metric_alarm\" \"${1:name}\" {",
      "\talarm_name\t\t= \"${1}\"",
      "\tcomparison_operator = \"\"",
      "\tevaluation_periods  = 1",
      "\tmetric_name\t\t = \"\"",
      "\tnamespace\t\t = \"\"",
      "\tperiod\t\t\t= 1",
      "\tthreshold\t\t = 1.0",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCloudWatchMetricAlarm"
  },
  "frAwsCloudWatchMetricAlarm": {
    "prefix": "frAwsCloudWatchMetricAlarm",
    "body": [
      "resource \"aws_cloud_watch_metric_alarm\" \"${1:name}\" {",
      "\talarm_name\t\t\t\t\t\t\t= \"${1}\"",
      "\tcomparison_operator\t\t\t\t = \"\"",
      "\tevaluation_periods\t\t\t\t\t= 1",
      "\tmetric_name\t\t\t\t\t\t = \"\"",
      "\tnamespace\t\t\t\t\t\t\t = \"\"",
      "\tperiod\t\t\t\t\t\t\t\t= 1",
      "\tthreshold\t\t\t\t\t\t\t = 1.0",
      "\tstatistic\t\t\t\t\t\t\t = \"\" # Conflicts with extended_statistic",
      "\tactions_enabled\t\t\t\t\t = true|false",
      "\talarm_actions\t\t\t\t\t\t = [\"\"]",
      "\talarm_description\t\t\t\t\t = \"\"",
      "\tdimensions {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "\tinsufficient_data_actions\t\t\t = [\"\"]",
      "\tok_actions\t\t\t\t\t\t\t= [\"\"]",
      "\tunit\t\t\t\t\t\t\t\t= \"\"",
      "\textended_statistic\t\t\t\t\t= \"\"",
      "\ttreat_missing_data\t\t\t\t\t= \"\"",
      "\tevaluate_low_sample_count_percentiles = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCloudWatchMetricAlarm"
  },
  "srAwsCodeBuildProject": {
    "prefix": "srAwsCodeBuildProject",
    "body": [
      "resource \"aws_code_build_project\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tartifacts {",
      "\t\tname\t\t = \"\"",
      "\t\tlocation\t = \"\"",
      "\t\tnamespace_type = \"\"",
      "\t\tpackaging\t= \"\"",
      "\t\tpath\t\t = \"\"",
      "\t\ttype\t\t = \"\"",
      "\t}",
      "\tenvironment {",
      "\t\tcompute_type = \"\"",
      "\t\tenvironment_variable {",
      "\t\tname  = \"\"",
      "\t\tvalue = \"\"",
      "\t}",
      "\t\timage\t\t= \"\"",
      "\t\ttype\t\t = \"\"",
      "\t}",
      "\tsource {",
      "\t\tauth {",
      "\tresource = \"\"",
      "\t\ttype\t = \"\"",
      "\t}",
      "\t\tbuildspec = \"\"",
      "\t\tlocation  = \"\"",
      "\t\ttype\t= \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCodeBuildProject"
  },
  "frAwsCodeBuildProject": {
    "prefix": "frAwsCodeBuildProject",
    "body": [
      "resource \"aws_code_build_project\" \"${1:name}\" {",
      "\tname\t\t = \"${1}\"",
      "\tartifacts {",
      "\t\tname\t\t = \"\"",
      "\t\tlocation\t = \"\"",
      "\t\tnamespace_type = \"\"",
      "\t\tpackaging\t= \"\"",
      "\t\tpath\t\t = \"\"",
      "\t\ttype\t\t = \"\"",
      "\t}",
      "\tenvironment {",
      "\t\tcompute_type = \"\"",
      "\t\tenvironment_variable {",
      "\t\tname  = \"\"",
      "\t\tvalue = \"\"",
      "\t}",
      "\t\timage\t\t= \"\"",
      "\t\ttype\t\t = \"\"",
      "\t}",
      "\tsource {",
      "\t\tauth {",
      "\tresource = \"\"",
      "\t\ttype\t = \"\"",
      "\t}",
      "\t\tbuildspec  = \"\"",
      "\t\tlocation   = \"\"",
      "\t\ttype\t = \"\"",
      "\t}",
      "\tdescription\t= \"\"",
      "\tencryption_key = \"\"",
      "\tservice_role   = \"\"",
      "\tbuild_timeout  = 60",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCodeBuildProject"
  },
  "srAwsCodeCommitRepository": {
    "prefix": "srAwsCodeCommitRepository",
    "body": [
      "resource \"aws_code_commit_repository\" \"${1:name}\" {",
      "\trepository_name = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCodeCommitRepository"
  },
  "frAwsCodeCommitRepository": {
    "prefix": "frAwsCodeCommitRepository",
    "body": [
      "resource \"aws_code_commit_repository\" \"${1:name}\" {",
      "\trepository_name = \"${1}\"",
      "\tdescription\t = \"\"",
      "\tdefault_branch  = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCodeCommitRepository"
  },
  "srAwsCodeCommitTrigger": {
    "prefix": "srAwsCodeCommitTrigger",
    "body": [
      "resource \"aws_code_commit_trigger\" \"${1:name}\" {",
      "\tname\t\t\t= \"${1}\"",
      "\trepository_name = \"\"",
      "\ttrigger {",
      "\t\tname\t\t\t= \"\"",
      "\t\tdestination_arn = \"${aws_sns_topic.${2:foo}.arn}\"",
      "\t\tcustom_data\t = \"\"",
      "\t\tbranches\t\t= [\"\"]",
      "\t\tevents\t\t= [\"\"]",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCodeCommitTrigger"
  },
  "frAwsCodeCommitTrigger": {
    "prefix": "frAwsCodeCommitTrigger",
    "body": [
      "resource \"aws_code_commit_trigger\" \"${1:name}\" {",
      "\tname\t\t\t= \"${1}\"",
      "\trepository_name = \"${1}\"",
      "\ttrigger {",
      "\t\tname\t\t\t= \"\"",
      "\t\tdestination_arn = \"${aws_sns_topic.${2:foo}.arn}\"",
      "\t\tcustom_data\t = \"\"",
      "\t\tbranches\t\t= [\"\"]",
      "\t\tevents\t\t= [\"\"]",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCodeCommitTrigger"
  },
  "srAwsCodeDeployApp": {
    "prefix": "srAwsCodeDeployApp",
    "body": [
      "resource \"aws_code_deploy_app\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCodeDeployApp"
  },
  "frAwsCodeDeployApp": {
    "prefix": "frAwsCodeDeployApp",
    "body": [
      "resource \"aws_code_deploy_app\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tunique_id = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCodeDeployApp"
  },
  "srAwsCodeDeployDeploymentConfig": {
    "prefix": "srAwsCodeDeployDeploymentConfig",
    "body": [
      "resource \"aws_code_deploy_deployment_config\" \"${1:name}\" {",
      "\tdeployment_config_name = \"\"",
      "\tminimum_healthy_hosts {",
      "\t\ttype  = \"\"",
      "\t\tvalue = 1",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCodeDeployDeploymentConfig"
  },
  "frAwsCodeDeployDeploymentConfig": {
    "prefix": "frAwsCodeDeployDeploymentConfig",
    "body": [
      "resource \"aws_code_deploy_deployment_config\" \"${1:name}\" {",
      "\tdeployment_config_name = \"\"",
      "\tminimum_healthy_hosts {",
      "\t\ttype  = \"\"",
      "\t\tvalue = 1",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCodeDeployDeploymentConfig"
  },
  "srAwsCodeDeployDeploymentGroup": {
    "prefix": "srAwsCodeDeployDeploymentGroup",
    "body": [
      "resource \"aws_code_deploy_deployment_group\" \"${1:name}\" {",
      "\tapp_name\t\t\t= \"${aws_codedeploy_app.${2:foo}.name}\"",
      "\tdeployment_group_name = \"${1}\"",
      "\tservice_role_arn\t= \"${aws_iam_role.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCodeDeployDeploymentGroup"
  },
  "frAwsCodeDeployDeploymentGroup": {
    "prefix": "frAwsCodeDeployDeploymentGroup",
    "body": [
      "resource \"aws_code_deploy_deployment_group\" \"${1:name}\" {",
      "\tapp_name\t\t\t\t\t\t= \"${aws_codedeploy_app.${2:foo}.name}\"",
      "\tdeployment_group_name\t\t = \"${1}\"",
      "\tservice_role_arn\t\t\t\t= \"${aws_iam_role.${3:bar}.arn}\"",
      "\talarm_configuration {",
      "\t\talarms\t\t\t\t\t= [\"\"]",
      "\t\tenabled\t\t\t\t = true|false",
      "\t\tignore_poll_alarm_failure = true|false",
      "\t}",
      "\tauto_rollback_configuration {",
      "\t\tenabled = true|false",
      "\t\tevents  = [\"\"]",
      "\t}",
      "\tautoscaling_groups\t\t\t= [\"\"]",
      "\tdeployment_config_name\t\t= \"\"",
      "\tec2_tag_filter {",
      "\t\tkey   = \"\"",
      "\t\ttype  = \"\"",
      "\t\tvalue = \"\"",
      "\t}",
      "\ton_premises_instance_tag_filter {",
      "\t\tkey   = \"\"",
      "\t\ttype  = \"\"",
      "\t\tvalue = \"\"",
      "\t}",
      "\ttrigger_configuration {",
      "\t\ttrigger_events\t = [\"\"]",
      "\t\ttrigger_name\t = \"\"",
      "\t\ttrigger_target_arn = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCodeDeployDeploymentGroup"
  },
  "srAwsCodePipeline": {
    "prefix": "srAwsCodePipeline",
    "body": [
      "resource \"aws_code_pipeline\" \"${1:name}\" {",
      "\tname\t\t = \"${1}\"",
      "\trole_arn\t = \"${aws_iam_role.${2:foo}.arn}\"",
      "\tartifact_store {",
      "\t\tlocation = \"\"",
      "\t\ttype\t = \"\"",
      "\t\tencryption_key {",
      "\t\tid   = \"\"",
      "\t\ttype = \"\"",
      "\t}",
      "\t}",
      "\tstage {",
      "\t\tname\t= \"\"",
      "\t\taction {",
      "\t\tconfiguration {",
      "\t\t\tkey = \"${var.SOMEVAL}\"",
      "\t\t}",
      "\t\tname\t\t\t = \"\"",
      "\t\tcategory\t\t = \"\"",
      "\t\towner\t\t\t= \"\"",
      "\t\tprovider\t\t = \"\"",
      "\t\tversion\t\t= \"\"",
      "\t\tinput_artifacts  = [\"\"]",
      "\t\toutput_artifacts = [\"\"]",
      "\t\trole_arn\t\t = \"\"",
      "\t\trun_order\t\t= 1",
      "\t}",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCodePipeline"
  },
  "frAwsCodePipeline": {
    "prefix": "frAwsCodePipeline",
    "body": [
      "resource \"aws_code_pipeline\" \"${1:name}\" {",
      "\tname\t\t = \"${1}\"",
      "\trole_arn\t = \"${aws_iam_role.${2:foo}.arn}\"",
      "\tartifact_store {",
      "\t\tlocation = \"\"",
      "\t\ttype\t = \"\"",
      "\t\tencryption_key {",
      "\t\tid   = \"\"",
      "\t\ttype = \"\"",
      "\t}",
      "\t}",
      "\tstage {",
      "\t\tname\t= \"\"",
      "\t\taction {",
      "\t\tconfiguration {",
      "\t\t\tkey = \"${var.SOMEVAL}\"",
      "\t\t}",
      "\t\tname\t\t\t = \"\"",
      "\t\tcategory\t\t = \"\"",
      "\t\towner\t\t\t= \"\"",
      "\t\tprovider\t\t = \"\"",
      "\t\tversion\t\t= \"\"",
      "\t\tinput_artifacts  = [\"\"]",
      "\t\toutput_artifacts = [\"\"]",
      "\t\trole_arn\t\t = \"\"",
      "\t\trun_order\t\t= 1",
      "\t}",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCodePipeline"
  },
  "srAwsConfigConfigRule": {
    "prefix": "srAwsConfigConfigRule",
    "body": [
      "resource \"aws_config_config_rule\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\tdepends_on = [\"aws_config_configuration_recorder.${2:foo}\"]",
      "\tsource {",
      "\t\towner\t\t\t = \"\"",
      "\t\tsource_detail {",
      "\t\tevent_source\t\t\t\t= \"\"",
      "\t\tmaximum_execution_frequency = \"\"",
      "\t\tmessage_type\t\t\t\t= \"\"",
      "\t}",
      "\t\tsource_identifier = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsConfigConfigRule"
  },
  "frAwsConfigConfigRule": {
    "prefix": "frAwsConfigConfigRule",
    "body": [
      "resource \"aws_config_config_rule\" \"${1:name}\" {",
      "\tname\t\t\t\t\t\t= \"${1}\"",
      "\tdepends_on\t\t\t\t= [\"aws_config_configuration_recorder.${2:foo}\"]",
      "\tsource {",
      "\t\towner\t\t\t= \"\"",
      "\t\tsource_detail {",
      "\t\tevent_source\t\t\t\t= \"\"",
      "\t\tmaximum_execution_frequency = \"\"",
      "\t\tmessage_type\t\t\t\t= \"\"",
      "\t}",
      "\t\tsource_identifier  = \"\"",
      "\t}",
      "\tdescription\t\t\t\t = \"\"",
      "\tinput_parameters\t\t\t= \"\"",
      "\tmaximum_execution_frequency = \"\"",
      "\tscope {",
      "\t\tcompliance_resource_id\t= \"\"",
      "\t\tcompliance_resource_types = [\"\"]",
      "\t\ttag_key\t\t\t\t = \"\"",
      "\t\ttag_value\t\t\t\t = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsConfigConfigRule"
  },
  "srAwsConfigConfigurationRecorder": {
    "prefix": "srAwsConfigConfigurationRecorder",
    "body": [
      "resource \"aws_config_configuration_recorder\" \"${1:name}\" {",
      "\trole_arn = \"${aws_iam_role.${2:foo}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsConfigConfigurationRecorder"
  },
  "frAwsConfigConfigurationRecorder": {
    "prefix": "frAwsConfigConfigurationRecorder",
    "body": [
      "resource \"aws_config_configuration_recorder\" \"${1:name}\" {",
      "\trole_arn\t\t= \"${aws_iam_role.${2:foo}.arn}\"",
      "\tname\t\t\t= \"${1}\"",
      "\trecording_group {",
      "\t\tall_supported\t\t\t\t = true|false",
      "\t\tinclude_global_resource_types = true|false",
      "\tresource_types\t\t\t\t= [\"\"]",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsConfigConfigurationRecorder"
  },
  "srAwsConfigConfigurationRecorderStatus": {
    "prefix": "srAwsConfigConfigurationRecorderStatus",
    "body": [
      "resource \"aws_config_configuration_recorder_status\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\tdepends_on = [\"aws_config_delivery_channel.${2:foo}\"]",
      "\tis_enabled = true|false",
      "}",
      ""
    ],
    "description": "Snippet for srAwsConfigConfigurationRecorderStatus"
  },
  "frAwsConfigConfigurationRecorderStatus": {
    "prefix": "frAwsConfigConfigurationRecorderStatus",
    "body": [
      "resource \"aws_config_configuration_recorder_status\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\tdepends_on = [\"aws_config_delivery_channel.${2:foo}\"]",
      "\tis_enabled = true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsConfigConfigurationRecorderStatus"
  },
  "srAwsConfigDeliveryChannel": {
    "prefix": "srAwsConfigDeliveryChannel",
    "body": [
      "resource \"aws_config_delivery_channel\" \"${1:name}\" {",
      "\ts3_bucket_name = \"${aws_s3_bucket.${2:foo}.bucket}\"",
      "\tdepends_on\t = [\"aws_config_configuration_recorder.${3:bar}\"]",
      "}",
      ""
    ],
    "description": "Snippet for srAwsConfigDeliveryChannel"
  },
  "frAwsConfigDeliveryChannel": {
    "prefix": "frAwsConfigDeliveryChannel",
    "body": [
      "resource \"aws_config_delivery_channel\" \"${1:name}\" {",
      "\ts3_bucket_name = \"${aws_s3_bucket.${2:foo}.bucket}\"",
      "\tdepends_on\t = [\"aws_config_configuration_recorder.${3:bar}\"]",
      "\tname\t\t = \"${1}\"",
      "\ts3_key_prefix  = \"\"",
      "\tsns_topic_arn  = \"${aws_sns_topic.${4:baz}.arn}\"",
      "\tsnapshot_delivery_properties {",
      "\t\tdelivery_frequency = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsConfigDeliveryChannel"
  },
  "srAwsCustomerGateway": {
    "prefix": "srAwsCustomerGateway",
    "body": [
      "resource \"aws_customer_gateway\" \"${1:name}\" {",
      "\tbgp_asn\t= 1",
      "\tip_address = \"\"",
      "\ttype\t = \"ipsec.1\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsCustomerGateway"
  },
  "frAwsCustomerGateway": {
    "prefix": "frAwsCustomerGateway",
    "body": [
      "resource \"aws_customer_gateway\" \"${1:name}\" {",
      "\tbgp_asn\t= 1",
      "\tip_address = \"\"",
      "\ttype\t = \"ipsec.1\"",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsCustomerGateway"
  },
  "srAwsDbEventSubscription": {
    "prefix": "srAwsDbEventSubscription",
    "body": [
      "resource \"aws_db_event_subscription\" \"${1:name}\" {",
      "\tname\t= \"${1:name}\"",
      "\tsns_topic = \"${aws_sns_topic.${2:foo}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDbEventSubscription"
  },
  "frAwsDbEventSubscription": {
    "prefix": "frAwsDbEventSubscription",
    "body": [
      "resource \"aws_db_event_subscription\" \"${1:name}\" {",
      "\tname\t\t\t = \"${1:name}\"",
      "\tsns_topic\t\t= \"${aws_sns_topic.${2:foo}.arn}\"",
      "\tevent_categories = [\"\"]",
      "\tsource_ids\t = [\"${aws_db_instance.${3:bar}.id}\"]",
      "\tsource_type\t= \"\"",
      "\tenabled\t\t= true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDbEventSubscription"
  },
  "srAwsDbInstance": {
    "prefix": "srAwsDbInstance",
    "body": [
      "resource \"aws_db_instance\" \"${1:name}\" {",
      "\tinstance_class = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDbInstance"
  },
  "frAwsDbInstance": {
    "prefix": "frAwsDbInstance",
    "body": [
      "resource \"aws_db_instance\" \"${1:name}\" {",
      "\tinstance_class\t\t\t= \"\"",
      "\tname\t\t\t\t\t\t= \"${2:foo}\"",
      "\tusername\t\t\t\t\t= \"\"",
      "\tpassword\t\t\t\t\t= \"\"",
      "\tengine\t\t\t\t\t= \"\"",
      "\tengine_version\t\t\t= \"\"",
      "\tcharacter_set_name\t\t= \"\"",
      "\tstorage_encrypted\t\t = true|false",
      "\tallocated_storage\t\t = 1",
      "\tstorage_type\t\t\t\t= \"\"",
      "\tidentifier\t\t\t\t= \"\"",
      "\tidentifier_prefix\t\t = \"\" # Conflicts with identifier",
      "\tavailability_zone\t\t = \"\"",
      "\tbackup_retention_period\t = 1",
      "\tbackup_window\t\t\t = \"\"",
      "\tiops\t\t\t\t\t\t= 1",
      "\tlicense_model\t\t\t = \"\"",
      "\tmaintenance_window\t\t= \"\"",
      "\tmulti_az\t\t\t\t\t= true|false",
      "\tport\t\t\t\t\t\t= 1",
      "\tpublicly_accessible\t\t = true|false",
      "\tvpc_security_group_ids\t= [\"\"]",
      "\tsecurity_group_names\t\t= [\"\"]",
      "\tfinal_snapshot_identifier   = \"\"",
      "\tskip_final_snapshot\t\t = true|false",
      "\tcopy_tags_to_snapshot\t = true|false",
      "\tdb_subnet_group_name\t\t= \"\"",
      "\tparameter_group_name\t\t= \"\"",
      "\tapply_immediately\t\t = true|false",
      "\treplicate_source_db\t\t = \"\"",
      "\tsnapshot_identifier\t\t = \"\"",
      "\tauto_minor_version_upgrade  = true|false",
      "\tallow_major_version_upgrade = true|false",
      "\tmonitoring_role_arn\t\t = \"\"",
      "\tmonitoring_interval\t\t = 1",
      "\toption_group_name\t\t = \"\"",
      "\tkms_key_id\t\t\t\t= \"\"",
      "\ttimezone\t\t\t\t\t= \"\"",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDbInstance"
  },
  "srAwsDbOptionGroup": {
    "prefix": "srAwsDbOptionGroup",
    "body": [
      "resource \"aws_db_option_group\" \"${1:name}\" {",
      "\tengine_name\t\t= \"\"",
      "\tmajor_engine_version = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDbOptionGroup"
  },
  "frAwsDbOptionGroup": {
    "prefix": "frAwsDbOptionGroup",
    "body": [
      "resource \"aws_db_option_group\" \"${1:name}\" {",
      "\tengine_name\t\t\t= \"\"",
      "\tmajor_engine_version\t = \"\"",
      "\tname\t\t\t\t\t = \"${1:name}\" # Conflicts with name_prefix",
      "\tname_prefix\t\t\t= \"\"",
      "\toption_group_description = \"\"",
      "\toption {",
      "\t\toption_name\t\t\t\t\t= \"\"",
      "\t\toption_settings {",
      "\t\tname  = \"\"",
      "\t\tvalue = \"\"",
      "\t}",
      "\t\tport\t\t\t\t\t\t = 1",
      "\t\tdb_security_group_memberships  = [\"\"]",
      "\t\tvpc_security_group_memberships = [\"\"]",
      "\t}",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDbOptionGroup"
  },
  "srAwsDbParameterGroup": {
    "prefix": "srAwsDbParameterGroup",
    "body": [
      "resource \"aws_db_parameter_group\" \"${1:name}\" {",
      "\tfamily = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDbParameterGroup"
  },
  "frAwsDbParameterGroup": {
    "prefix": "frAwsDbParameterGroup",
    "body": [
      "resource \"aws_db_parameter_group\" \"${1:name}\" {",
      "\tfamily\t= \"\"",
      "\tname\t\t= \"${1:name}\" # Conflicts with name_prefix",
      "\tname_prefix = \"\"",
      "\tdescription = \"\"",
      "\tparameter {",
      "\t\tname\t\t = \"\"",
      "\t\tvalue\t\t= \"\"",
      "\t\tapply_method = \"\"",
      "\t}",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDbParameterGroup"
  },
  "srAwsDbSecurityGroup": {
    "prefix": "srAwsDbSecurityGroup",
    "body": [
      "\t# Note: For instances inside a VPC, use aws_db_instance.vpc_security_group_ids",
      "resource \"aws_db_security_group\" \"${1:name}\" {",
      "\tname = \"${1:name}\"",
      "\tingress {",
      "\t\tcidr\t\t\t\t\t= \"\"",
      "\t\tsecurity_group_name\t = \"\"",
      "\t\tsecurity_group_id\t = \"\"",
      "\t\tsecurity_group_owner_id = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDbSecurityGroup"
  },
  "frAwsDbSecurityGroup": {
    "prefix": "frAwsDbSecurityGroup",
    "body": [
      "\t# Note: For instances inside a VPC, use aws_db_instance.vpc_security_group_ids",
      "resource \"aws_db_security_group\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tingress {",
      "\t\tcidr\t\t\t\t\t= \"\"",
      "\t\tsecurity_group_name\t = \"\"",
      "\t\tsecurity_group_id\t = \"\"",
      "\t\tsecurity_group_owner_id = \"\"",
      "\t}",
      "\tdescription = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDbSecurityGroup"
  },
  "srAwsDbSubnetGroup": {
    "prefix": "srAwsDbSubnetGroup",
    "body": [
      "resource \"aws_db_subnet_group\" \"${1:name}\" {",
      "\tsubnet_ids = [\"${aws_subnet.${2:foo}.id}\"]",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDbSubnetGroup"
  },
  "frAwsDbSubnetGroup": {
    "prefix": "frAwsDbSubnetGroup",
    "body": [
      "resource \"aws_db_subnet_group\" \"${1:name}\" {",
      "\tname\t\t= \"${1:name}\" # Conflicts with name_prefix",
      "\tsubnet_ids  = [\"${aws_subnet.${2:foo}.id}\"]",
      "\tname_prefix = \"\"",
      "\tdescription = \"\"",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDbSubnetGroup"
  },
  "srAwsDefaultNetworkAcl": {
    "prefix": "srAwsDefaultNetworkAcl",
    "body": [
      "\t// XXX: Advanced resource, please read the docs.",
      "resource \"aws_default_network_acl\" \"${1:name}\" {",
      "\tdefault_network_acl_id = \"${aws_vpc.${2:foo}.default_network_acl_id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDefaultNetworkAcl"
  },
  "frAwsDefaultNetworkAcl": {
    "prefix": "frAwsDefaultNetworkAcl",
    "body": [
      "\t// XXX: Advanced resource, please read the docs.",
      "resource \"aws_default_network_acl\" \"${1:name}\" {",
      "\tdefault_network_acl_id = \"${aws_vpc.${2:foo}.default_network_acl_id}\"",
      "\tsubnet_ids\t\t\t = [\"\"]",
      "\tingress {",
      "\t\tfrom_port  = 0",
      "\t\tto_port\t= 0",
      "\t\trule_no\t= 100",
      "\t\taction\t = \"allow\"",
      "\t\tprotocol   = -1",
      "\t\tcidr_block = \"\"",
      "\t\ticmp_type  = 0",
      "\t\ticmp_code  = 0",
      "\t}",
      "\tegress {",
      "\t\tfrom_port  = 0",
      "\t\tto_port\t= 0",
      "\t\trule_no\t= 100",
      "\t\taction\t = \"allow\"",
      "\t\tprotocol   = -1",
      "\t\tcidr_block = \"0.0.0.0/0\"",
      "\t\ticmp_type  = 0",
      "\t\ticmp_code  = 0",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDefaultNetworkAcl"
  },
  "srAwsDefaultRouteTable": {
    "prefix": "srAwsDefaultRouteTable",
    "body": [
      "\t// XXX: Advanced resource, please read the docs.",
      "\t// XXX: Recommended not to use with aws_main_route_table_association",
      "resource \"aws_default_route_table\" \"${1:name}\" {",
      "\tdefault_route_table_id = \"${aws_vpc.${2:foo}.default_route_table_id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDefaultRouteTable"
  },
  "frAwsDefaultRouteTable": {
    "prefix": "frAwsDefaultRouteTable",
    "body": [
      "\t// XXX: Advanced resource, please read the docs.",
      "\t// XXX: Recommended not to use with aws_main_route_table_association",
      "resource \"aws_default_route_table\" \"${1:name}\" {",
      "\tdefault_route_table_id = \"${aws_vpc.${2:foo}.default_route_table_id}\"",
      "\tpropagating_vgws\t = [\"\"]",
      "\troute {",
      "\t\tcidr_block\t\t\t\t= \"\"",
      "\t\tipv6_cidr_block\t\t = \"\"",
      "\t\tegress_only_gateway_id\t= \"\"",
      "\t\tgateway_id\t\t\t\t= \"\"",
      "\t\tinstance_id\t\t\t = \"\"",
      "\t\tnat_gateway_id\t\t\t= \"\"",
      "\t\tvpc_peering_connection_id = \"\"",
      "\t\tnetwork_interface_id\t= \"\"",
      "\t}",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDefaultRouteTable"
  },
  "srAwsDefaultSecurityGroup": {
    "prefix": "srAwsDefaultSecurityGroup",
    "body": [
      "\t// XXX: Advanced resource, please read the docs.",
      "resource \"aws_default_security_group\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDefaultSecurityGroup"
  },
  "frAwsDefaultSecurityGroup": {
    "prefix": "frAwsDefaultSecurityGroup",
    "body": [
      "\t// XXX: Advanced resource, please read the docs.",
      "resource \"aws_default_security_group\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tvpc_id\t= \"${aws_vpc.${2:foo}.vpc}\"",
      "\tingress {",
      "\t\tfrom_port\t\t= 1",
      "\t\tto_port\t\t= 1",
      "\t\tprotocol\t\t = \"\"",
      "\t\tcidr_blocks\t= [\"\"]",
      "\t\tipv6_cidr_blocks = [\"\"]",
      "\t\tsecurity_groups  = [\"\"]",
      "\t\tself\t\t\t = true|false",
      "\t}",
      "\tegress {",
      "\t\tfrom_port\t\t= 1",
      "\t\tto_port\t\t= 1",
      "\t\tprotocol\t\t = \"\"",
      "\t\tcidr_blocks\t= [\"\"]",
      "\t\tipv6_cidr_blocks = [\"\"]",
      "\t\tprefix_list_ids  = [\"\"]",
      "\t\tsecurity_groups  = [\"\"]",
      "\t\tself\t\t\t = true|false",
      "\t}",
      "}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDefaultSecurityGroup"
  },
  "srAwsDirectoryServiceDirectory": {
    "prefix": "srAwsDirectoryServiceDirectory",
    "body": [
      "resource \"aws_directory_service_directory\" \"${1:name}\" {",
      "\tname\t = \"${2:fqdn}\"",
      "\tpassword = \"${3:foo}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDirectoryServiceDirectory"
  },
  "frAwsDirectoryServiceDirectory": {
    "prefix": "frAwsDirectoryServiceDirectory",
    "body": [
      "resource \"aws_directory_service_directory\" \"${1:name}\" {",
      "\tname\t\t\t = \"${2:fqdn}\"",
      "\tpassword\t\t = \"${3:foo}\"",
      "\tsize\t\t\t = \"\"",
      "\talias\t\t\t= \"\"",
      "\tdescription\t= \"\"",
      "\tshort_name\t = \"\"",
      "\tvpc_settings {",
      "\t\tvpc_id\t = \"${aws_vpc.${4:bar}.id}\"",
      "\t\tsubnet_ids = [\"${aws_subnet.${5:baz}.id}\"]",
      "\t}",
      "\tconnect_settings {",
      "\t\tvpc_id\t\t\t= \"${aws_vpc.${4:bar}.id}\"",
      "\t\tsubnet_ids\t\t= [\"${aws_subnet.${5}.id}\"]",
      "\t\tcustomer_username = \"\"",
      "\t\tcustomer_dns_ips  = [\"\"]",
      "\t}",
      "\tenable_sso\t = true|false",
      "\ttype\t\t\t = \"SimpleAD\"|\"MicrosoftAD\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDirectoryServiceDirectory"
  },
  "srAwsDmsCertificate": {
    "prefix": "srAwsDmsCertificate",
    "body": [
      "resource \"aws_dms_certificate\" \"${1:name}\" {",
      "\tcertificate_id = \"${2:foo}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDmsCertificate"
  },
  "frAwsDmsCertificate": {
    "prefix": "frAwsDmsCertificate",
    "body": [
      "resource \"aws_dms_certificate\" \"${1:name}\" {",
      "\tcertificate_id\t = \"${2:foo}\"",
      "\tcertificate_pem\t= \"\"",
      "\tcertificate_wallet = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDmsCertificate"
  },
  "srAwsDmsEndpoint": {
    "prefix": "srAwsDmsEndpoint",
    "body": [
      "resource \"aws_dms_endpoint\" \"${1:name}\" {",
      "\tendpoint_id   = \"${1}\"",
      "\tendpoint_type = \"source\"|\"target\"",
      "\tengine_name   = \"${2:foo}\"",
      "\tpassword\t= \"${3:bar}\"",
      "\tport\t\t= 1",
      "\tserver_name   = \"${4:baz}\"",
      "\tusername\t= \"${5:qux}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDmsEndpoint"
  },
  "frAwsDmsEndpoint": {
    "prefix": "frAwsDmsEndpoint",
    "body": [
      "resource \"aws_dms_endpoint\" \"${1:name}\" {",
      "\tendpoint_id   = \"${1}\"",
      "\tendpoint_type = \"source\"|\"target\"",
      "\tengine_name\t\t\t\t = \"${2:foo}\"",
      "\tpassword\t\t\t\t\t= \"${3:bar}\"",
      "\tport\t\t\t\t\t\t= 1",
      "\tserver_name\t\t\t\t = \"${4:baz}\"",
      "\tusername\t\t\t\t\t= \"${5:qux}\"",
      "\tcertificate_arn\t\t\t = \"\"",
      "\tdatabase_name\t\t\t = \"\"",
      "\textra_connection_attributes = \"\"",
      "\tkms_key_arn\t\t\t\t = \"\"",
      "\tssl_mode\t\t\t\t\t= \"\"",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDmsEndpoint"
  },
  "srAwsDmsReplicationInstance": {
    "prefix": "srAwsDmsReplicationInstance",
    "body": [
      "resource \"aws_dms_replication_instance\" \"${1:name}\" {",
      "\treplication_instance_class = \"\"",
      "\treplication_instance_id = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDmsReplicationInstance"
  },
  "frAwsDmsReplicationInstance": {
    "prefix": "frAwsDmsReplicationInstance",
    "body": [
      "resource \"aws_dms_replication_instance\" \"${1:name}\" {",
      "\treplication_instance_class   = \"\"",
      "\treplication_instance_id\t= \"${1}\"",
      "\tallocated_storage\t\t\t= 50",
      "\tapply_immediately\t\t\t= true|false",
      "\tauto_minor_version_upgrade   = true|false",
      "\tavailability_zone\t\t\t= \"\"",
      "\tengine_version\t\t\t = \"\"",
      "\tkms_key_arn\t\t\t\t= \"\"",
      "\tmulti_az\t\t\t\t\t = true|false",
      "\tpreferred_maintenance_window = \"sun:10:30-sun:14:30\"",
      "\tpublicly_accessible\t\t= true|false",
      "\treplication_subnet_group_id  = \"${aws_dms_replication_subnet_group.${2:foo}}\"",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "\tvpc_security_group_ids\t = [\"${aws_vpc.${3:bar}.id}\"]",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDmsReplicationInstance"
  },
  "srAwsDmsReplicationSubnetGroup": {
    "prefix": "srAwsDmsReplicationSubnetGroup",
    "body": [
      "resource \"aws_dms_replication_subnet_group\" \"${1:name}\" {",
      "\treplication_subnet_group_description = \"${2:foo}\"",
      "\treplication_subnet_group_id\t\t= \"${1}\"",
      "\tsubnet_ids\t\t\t\t\t\t = [\"${aws_subnet.${3:bar}.id}\"]",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDmsReplicationSubnetGroup"
  },
  "frAwsDmsReplicationSubnetGroup": {
    "prefix": "frAwsDmsReplicationSubnetGroup",
    "body": [
      "resource \"aws_dms_replication_subnet_group\" \"${1:name}\" {",
      "\treplication_subnet_group_description = \"${2:foo}\"",
      "\treplication_subnet_group_id\t\t= \"${1}\"",
      "\tsubnet_ids\t\t\t\t\t\t = [\"${aws_subnet.${3:bar}.id}\"]",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDmsReplicationSubnetGroup"
  },
  "srAwsDmsReplicationTask": {
    "prefix": "srAwsDmsReplicationTask",
    "body": [
      "resource \"aws_dms_replication_task\" \"${1:name}\" {",
      "\tmigration_type\t\t = \"\"",
      "\treplication_instance_arn  = \"${aws_dms_replication_instance.${2:foo}.replication_instance_arn}\"",
      "\treplication_task_id\t = \"${1}\"",
      "\tsource_endpoint_arn\t = \"${aws_dms_endpoint.${3:bar}.endpoint_arn}\"",
      "\ttable_mappings\t\t = \"\"",
      "\ttarget_endpoint_arn\t = \"${aws_dms_endpoint.${4:baz}.endpoint_arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDmsReplicationTask"
  },
  "frAwsDmsReplicationTask": {
    "prefix": "frAwsDmsReplicationTask",
    "body": [
      "resource \"aws_dms_replication_task\" \"${1:name}\" {",
      "\tmigration_type\t\t\t= \"\"",
      "\treplication_instance_arn  = \"${aws_dms_replication_instance.${2:foo}.replication_instance_arn}\"",
      "\treplication_task_id\t = \"${1}\"",
      "\tsource_endpoint_arn\t = \"${aws_dms_endpoint.${3:bar}.endpoint_arn}\"",
      "\ttable_mappings\t\t\t= \"\"",
      "\ttarget_endpoint_arn\t = \"${aws_dms_endpoint.${4:baz}.endpoint_arn}\"",
      "\tcdc_start_time\t\t\t= \"\"",
      "\treplication_task_settings = \"\"",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDmsReplicationTask"
  },
  "srAwsDynamoDbTable": {
    "prefix": "srAwsDynamoDbTable",
    "body": [
      "resource \"aws_dynamo_db_table\" \"${1:name}\" {",
      "\tname\t\t = \"${1}\"",
      "\thash_key\t = \"\"",
      "\twrite_capacity = 1",
      "\tread_capacity  = 1",
      "\tattribute {",
      "\t\tname = \"\"",
      "\t\ttype = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsDynamoDbTable"
  },
  "frAwsDynamoDbTable": {
    "prefix": "frAwsDynamoDbTable",
    "body": [
      "resource \"aws_dynamo_db_table\" \"${1:name}\" {",
      "\tname\t\t\t\t = \"${1}\"",
      "\thash_key\t\t\t = \"\"",
      "\twrite_capacity\t\t = 1",
      "\tread_capacity\t\t= 1",
      "\tattribute {",
      "\t\tname = \"\"",
      "\t\ttype = \"\"",
      "\t}",
      "\trange_key\t\t\t= \"\"",
      "\tlocal_secondary_index {",
      "\t\tname\t\t\t = \"\"",
      "\t\trange_key\t\t= \"\"",
      "\t\tprojection_type\t= \"\"",
      "\t\tnon_key_attributes = [\"\"]",
      "\t}",
      "\tglobal_secondary_index {",
      "\t\tname\t\t\t = \"\"",
      "\t\twrite_capacity\t = 1",
      "\t\tread_capacity\t= 1",
      "\t\thash_key\t\t = \"\"",
      "\t\trange_key\t\t= \"\"",
      "\t\tprojection_type\t= \"\"",
      "\t\tnon_key_attributes = [\"\"]",
      "\t}",
      "\tstream_enabled\t\t = true|false",
      "\tstream_view_type\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsDynamoDbTable"
  },
  "srAwsEMRCluster": {
    "prefix": "srAwsEMRCluster",
    "body": [
      "resource \"aws_emr_cluster\" \"${1:name}\" {",
      "\tname\t\t\t\t = \"{1}\"",
      "\trelease_label\t\t= \"\"",
      "\tmaster_instance_type = \"\"",
      "\tservice_role\t\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEMRCluster"
  },
  "frAwsEMRCluster": {
    "prefix": "frAwsEMRCluster",
    "body": [
      "resource \"aws_emr_cluster\" \"${1:name}\" {",
      "\tname\t\t\t\t\t\t\t= \"{1}\"",
      "\trelease_label\t\t\t\t\t = \"\"",
      "\tmaster_instance_type\t\t\t= \"\"",
      "\tservice_role\t\t\t\t\t= \"\"",
      "\tcore_instance_type\t\t\t\t= \"\"",
      "\tcore_instance_count\t\t\t = 1",
      "\tlog_uri\t\t\t\t\t\t = \"\"",
      "\tapplications\t\t\t\t\t= [\"\"]",
      "\ttermination_protection\t\t\t= true|false",
      "\tkeep_job_flow_alive_when_no_steps = true|false",
      "\tec2_attributes {",
      "\t\tkey_name\t\t\t\t\t\t= \"\"",
      "\t\tsubnet_id\t\t\t\t\t\t = \"${aws_subnet.${:2foo}.id}\"",
      "\t\tadditional_master_security_groups = \"\"",
      "\t\tadditional_slave_security_groups  = \"\"",
      "\t\temr_managed_master_security_group = \"${aws_security_group.${3:bar}.id}\"",
      "\t\temr_managed_slave_security_group  = \"${aws_security_group.${4:baz}.id}\"",
      "\t\tinstance_profile\t\t\t\t= \"${aws_iam_instance_profile.${5:qux}.arn}\"",
      "\t\tservice_access_security_group\t = \"\"",
      "\t}",
      "\tbootstrap_action {",
      "\t\tname = \"\"",
      "\t\tpath = \"\"",
      "\t\targs = [\"\"]",
      "\t}",
      "\tconfigurations\t\t\t\t\t= \"\"",
      "\tautoscaling_role\t\t\t\t= \"\"",
      "\tvisible_to_all_users\t\t\t= true|false",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEMRCluster"
  },
  "srAwsEMRInstanceGroup": {
    "prefix": "srAwsEMRInstanceGroup",
    "body": [
      "resource \"aws_emr_instance_group\" \"${1:name}\" {",
      "\tcluster_id\t= \"${aws_emr_cluster.${2:foo}.id}\"",
      "\tinstance_type = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEMRInstanceGroup"
  },
  "frAwsEMRInstanceGroup": {
    "prefix": "frAwsEMRInstanceGroup",
    "body": [
      "resource \"aws_emr_instance_group\" \"${1:name}\" {",
      "\tcluster_id\t\t\t = \"${aws_emr_cluster.${2:foo}.id}\"",
      "\tinstance_type\t\t= \"\"",
      "\tinstance_count\t\t = 1",
      "\tname\t\t\t\t = \"\"",
      "\tebs_optimized\t\t= true|false",
      "\tebs_config {",
      "\t\tiops\t\t\t\t = 1",
      "\t\tsize\t\t\t\t = 1",
      "\t\ttype\t\t\t\t = \"\"",
      "\t\tvolumes_per_instance = 1",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEMRInstanceGroup"
  },
  "srAwsEbsSnapshot": {
    "prefix": "srAwsEbsSnapshot",
    "body": [
      "resource \"aws_ebs_snapshot\" \"${1:name}\" {",
      "\tvolume_id = \"${aws_ebs_volume.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEbsSnapshot"
  },
  "frAwsEbsSnapshot": {
    "prefix": "frAwsEbsSnapshot",
    "body": [
      "resource \"aws_ebs_snapshot\" \"${1:name}\" {",
      "\tvolume_id   = \"${aws_ebs_volume.${2:foo}.id}\"",
      "\tdescription = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEbsSnapshot"
  },
  "srAwsEbsVolume": {
    "prefix": "srAwsEbsVolume",
    "body": [
      "resource \"aws_ebs_volume\" \"${1:name}\" {",
      "\tavailability_zone = \"${2:foo}\"",
      "\tsize\t\t\t= 40 # Either this or snapshot_id required",
      "\tsnapshot_id\t = \"\" # Either this or size is required",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEbsVolume"
  },
  "frAwsEbsVolume": {
    "prefix": "frAwsEbsVolume",
    "body": [
      "resource \"aws_ebs_volume\" \"${1:name}\" {",
      "\tavailability_zone = \"${2:foo}\"",
      "\tencrypted\t\t = true|false",
      "\tiops\t\t\t= 1",
      "\tkms_key_id\t\t= \"\"",
      "\tsize\t\t\t= 40 # Either this or snapshot_id required",
      "\tsnapshot_id\t = \"\" # Either this or size is required",
      "\ttype\t\t\t= \"\"",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEbsVolume"
  },
  "srAwsEcrRepository": {
    "prefix": "srAwsEcrRepository",
    "body": [
      "resource \"aws_ecr_repository\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEcrRepository"
  },
  "frAwsEcrRepository": {
    "prefix": "frAwsEcrRepository",
    "body": [
      "resource \"aws_ecr_repository\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEcrRepository"
  },
  "srAwsEcrRepositoryPolicy": {
    "prefix": "srAwsEcrRepositoryPolicy",
    "body": [
      "resource \"aws_ecr_repository_policy\" \"${1:name}\" {",
      "\trepository = \"${2:foo}\"",
      "\tpolicy\t = \"${3:bar}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEcrRepositoryPolicy"
  },
  "frAwsEcrRepositoryPolicy": {
    "prefix": "frAwsEcrRepositoryPolicy",
    "body": [
      "resource \"aws_ecr_repository_policy\" \"${1:name}\" {",
      "\trepository  = \"${2:foo}\"",
      "\tpolicy\t= \"${3:bar}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEcrRepositoryPolicy"
  },
  "srAwsEcsCluster": {
    "prefix": "srAwsEcsCluster",
    "body": [
      "resource \"aws_ecs_cluster\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEcsCluster"
  },
  "frAwsEcsCluster": {
    "prefix": "frAwsEcsCluster",
    "body": [
      "resource \"aws_ecs_cluster\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEcsCluster"
  },
  "srAwsEcsService": {
    "prefix": "srAwsEcsService",
    "body": [
      "resource \"aws_ecs_service\" \"${1:name}\" {",
      "\tdepends_on\t= [\"aws_iam_role_policy.${2:foo}\"]",
      "\tname\t\t\t= \"${1}\"",
      "\ttask_definition = \"${aws_ecs_task_definition.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEcsService"
  },
  "frAwsEcsService": {
    "prefix": "frAwsEcsService",
    "body": [
      "resource \"aws_ecs_service\" \"${1:name}\" {",
      "\tdepends_on\t\t\t\t\t\t = [\"aws_iam_role_policy.${2:foo}\"]",
      "\tname\t\t\t\t\t\t\t = \"${1}\"",
      "\ttask_definition\t\t\t\t\t= \"${aws_ecs_task_definition.${3:bar}.arn}\"",
      "\tcluster\t\t\t\t\t\t\t= \"${aws_ecs_cluster.${4:baz}.id}\"",
      "\tdesired_count\t\t\t\t\t= 1",
      "\tiam_role\t\t\t\t\t\t = \"${aws_iam_role.${5:qux}.arn}\"",
      "\tdeployment_maximum_percent\t\t = 1",
      "\tdeployment_minimum_healthy_percent = 1",
      "\tload_balancer {",
      "\t\telb_name\t\t = \"${aws_elb.${6:quz}.name}\"",
      "\t\ttarget_group_arn = \"\"",
      "\t\tcontainer_name   = \"\"",
      "\t\tcontainer_port   = 1",
      "\t}",
      "\tplacement_strategy {",
      "\t\ttype  = \"\"",
      "\t\tfield = \"\"",
      "\t}",
      "\tplacement_constraints {",
      "\t\ttype\t = \"\"",
      "\t\texpression = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEcsService"
  },
  "srAwsEcsTaskDefinition": {
    "prefix": "srAwsEcsTaskDefinition",
    "body": [
      "resource \"aws_ecs_task_definition\" \"${1:name}\" {",
      "\tfamily\t\t\t\t= \"${1}\"",
      "\tcontainer_definitions = \"${file(\"task-definitions/service.json\")}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEcsTaskDefinition"
  },
  "frAwsEcsTaskDefinition": {
    "prefix": "frAwsEcsTaskDefinition",
    "body": [
      "resource \"aws_ecs_task_definition\" \"${1:name}\" {",
      "\tfamily\t\t\t\t= \"${1}\"",
      "\tcontainer_definitions = \"${file(\"task-definitions/service.json\")}\"",
      "\ttask_role_arn\t\t = \"${aws_iam_role.${2:foo}.arn}\"",
      "\tnetwork_mode\t\t= \"\"",
      "\tvolume {",
      "\t\tname\t= \"\"",
      "\t\thost_path = \"\"",
      "\t}",
      "\tplacement_constraints {",
      "\t\ttype\t = \"\"",
      "\t\texpression = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEcsTaskDefinition"
  },
  "srAwsEfsFileSystema": {
    "prefix": "srAwsEfsFileSystema",
    "body": [
      "resource \"aws_efs_file_system\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEfsFileSystema"
  },
  "frAwsEfsFileSystema": {
    "prefix": "frAwsEfsFileSystema",
    "body": [
      "resource \"aws_efs_file_system\" \"${1:name}\" {",
      "\tcreation_token   = \"${1}\"",
      "\t#reference_name   = \"\" # Deprecated.",
      "\tperformance_mode = \"generalPurpose\"",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEfsFileSystema"
  },
  "srAwsEfsMountTarget": {
    "prefix": "srAwsEfsMountTarget",
    "body": [
      "resource \"aws_efs_mount_target\" \"${1:name}\" {",
      "\tfile_system_id = \"${aws_efs_file_system.${2:foo}.id}\"",
      "\tsubnet_id\t= \"${aws_subnet.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEfsMountTarget"
  },
  "frAwsEfsMountTarget": {
    "prefix": "frAwsEfsMountTarget",
    "body": [
      "resource \"aws_efs_mount_target\" \"${1:name}\" {",
      "\tfile_system_id  = \"${aws_efs_file_system.${2:foo}.id}\"",
      "\tsubnet_id\t = \"${aws_subnet.${3:bar}.id}\"",
      "\tip_address\t= \"\"",
      "\tsecurity_groups = [\"${aws_security_group.${4:baz}.id}\"]",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEfsMountTarget"
  },
  "srAwsEgressOnlyInternetGateway": {
    "prefix": "srAwsEgressOnlyInternetGateway",
    "body": [
      "resource \"aws_egress_only_internet_gateway\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEgressOnlyInternetGateway"
  },
  "frAwsEgressOnlyInternetGateway": {
    "prefix": "frAwsEgressOnlyInternetGateway",
    "body": [
      "resource \"aws_egress_only_internet_gateway\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEgressOnlyInternetGateway"
  },
  "srAwsEip": {
    "prefix": "srAwsEip",
    "body": [
      "resource \"aws_eip\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEip"
  },
  "frAwsEip": {
    "prefix": "frAwsEip",
    "body": [
      "resource \"aws_eip\" \"${1:name}\" {",
      "\tvpc\t\t\t\t\t = true|false",
      "\tinstance\t\t\t\t= \"${aws_instance.${2:foo}.id}\"",
      "\tnetwork_interface\t\t = \"\"",
      "\tassociate_with_private_ip = \"${3:bar}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEip"
  },
  "srAwsEipAssociation": {
    "prefix": "srAwsEipAssociation",
    "body": [
      "resource \"aws_eip_association\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsEipAssociation"
  },
  "frAwsEipAssociation": {
    "prefix": "frAwsEipAssociation",
    "body": [
      "resource \"aws_eip_association\" \"${1:name}\" {",
      "\tallocation_id\t\t= \"${aws_eip.${2:foo}.id}\"",
      "\tallow_reassociation  = true|false",
      "\tinstance_id\t\t= \"${aws_instance.${3:bar}.id}\"",
      "\tnetwork_interface_id = \"\"",
      "\tprivate_ip_address   = \"\"",
      "\tpublic_ip\t\t\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsEipAssociation"
  },
  "srAwsElasticBeanstalkApplication": {
    "prefix": "srAwsElasticBeanstalkApplication",
    "body": [
      "resource \"aws_elastic_beanstalk_application\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticBeanstalkApplication"
  },
  "frAwsElasticBeanstalkApplication": {
    "prefix": "frAwsElasticBeanstalkApplication",
    "body": [
      "resource \"aws_elastic_beanstalk_application\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tdescription = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticBeanstalkApplication"
  },
  "srAwsElasticBeanstalkApplicationVersion": {
    "prefix": "srAwsElasticBeanstalkApplicationVersion",
    "body": [
      "resource \"aws_elastic_beanstalk_application_version\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tapplication = \"${2:foo}\"",
      "\tbucket\t= \"${aws_s3_bucket.${3:bar}.id}\"",
      "\tkey\t\t = \"${aws_s3_bucket_object.${4:baz}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticBeanstalkApplicationVersion"
  },
  "frAwsElasticBeanstalkApplicationVersion": {
    "prefix": "frAwsElasticBeanstalkApplicationVersion",
    "body": [
      "resource \"aws_elastic_beanstalk_application_version\" \"${1:name}\" {",
      "\tname\t\t = \"${1}\"",
      "\tapplication  = \"${2:foo}\"",
      "\tbucket\t = \"${aws_s3_bucket.${3:bar}.id}\"",
      "\tkey\t\t= \"${aws_s3_bucket_object.${4:baz}.id}\"",
      "\tdescription  = \"\"",
      "\tforce_delete = true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticBeanstalkApplicationVersion"
  },
  "srAwsElasticBeanstalkConfigurationTemplate": {
    "prefix": "srAwsElasticBeanstalkConfigurationTemplate",
    "body": [
      "resource \"aws_elastic_beanstalk_configuration_template\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tapplication = \"${aws_elastic_beanstalk_application.${2:foo}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticBeanstalkConfigurationTemplate"
  },
  "frAwsElasticBeanstalkConfigurationTemplate": {
    "prefix": "frAwsElasticBeanstalkConfigurationTemplate",
    "body": [
      "resource \"aws_elastic_beanstalk_configuration_template\" \"${1:name}\" {",
      "\tname\t\t = \"${1}\"",
      "\tapplication\t= \"${aws_elastic_beanstalk_application.${2:foo}.name}\"",
      "\tdescription\t= \"\"",
      "\tenvironment_id = \"\"",
      "\tsetting {",
      "\t\tnamespace = \"\"",
      "\t\tname\t= \"\"",
      "\t\tvalue\t = \"\"",
      "\tresource  = \"\"",
      "\t}",
      "\tsolution_stack_name = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticBeanstalkConfigurationTemplate"
  },
  "srAwsElasticBeanstalkEnvironment": {
    "prefix": "srAwsElasticBeanstalkEnvironment",
    "body": [
      "resource \"aws_elastic_beanstalk_environment\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tapplication = \"${aws_elastic_beanstalk_application.${2:foo}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticBeanstalkEnvironment"
  },
  "frAwsElasticBeanstalkEnvironment": {
    "prefix": "frAwsElasticBeanstalkEnvironment",
    "body": [
      "resource \"aws_elastic_beanstalk_environment\" \"${1:name}\" {",
      "\tname\t\t\t\t = \"${1}\"",
      "\tapplication\t\t\t= \"${aws_elastic_beanstalk_application.${2:foo}.name}\"",
      "\tdescription\t\t\t= \"\"",
      "\tversion_label\t\t= \"\"",
      "\tcname_prefix\t\t = \"\"",
      "\ttier\t\t\t\t = \"\"",
      "\tsetting {",
      "\t\tnamespace = \"\"",
      "\t\tname\t= \"\"",
      "\t\tvalue\t = \"\"",
      "\tresource  = \"\"",
      "\t}",
      "\tsolution_stack_name\t= \"\"",
      "\ttemplate_name\t\t= \"\"",
      "\twait_for_ready_timeout = \"\"",
      "\tpoll_interval\t\t= \"\"",
      "\ttags = { # Note: cannot be updated once initialized.",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticBeanstalkEnvironment"
  },
  "srAwsElasticSearchDomain": {
    "prefix": "srAwsElasticSearchDomain",
    "body": [
      "resource \"aws_elastic_search_domain\" \"${1:name}\" {",
      "\tdomain_name = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticSearchDomain"
  },
  "frAwsElasticSearchDomain": {
    "prefix": "frAwsElasticSearchDomain",
    "body": [
      "resource \"aws_elastic_search_domain\" \"${1:name}\" {",
      "\tdomain_name\t\t = \"${1}\"",
      "\taccess_policies\t = \"\"",
      "\tadvanced_options {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "\tebs_options {",
      "\t\tebs_enabled = true|false",
      "\t\tiops\t\t= 1",
      "\t\tvolume_size = 1",
      "\t\tvolume_type = \"\"",
      "\t}",
      "\tcluster_config {",
      "\t\tdedicated_master_count   = 1",
      "\t\tdedicated_master_enabled = true|false",
      "\t\tdedicated_master_type\t= \"\"",
      "\t\tinstance_count\t\t = 1",
      "\t\tinstance_type\t\t\t= \"\"",
      "\t\tzone_awareness_enabled   = true|false",
      "\t}",
      "\tsnapshot_options {",
      "\t\tautomated_snapshot_start_hour = 1",
      "\t}",
      "\telasticsearch_version = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticSearchDomain"
  },
  "srAwsElasticSearchDomainPolicy": {
    "prefix": "srAwsElasticSearchDomainPolicy",
    "body": [
      "resource \"aws_elastic_search_domain_policy\" \"${1:name}\" {",
      "\tdomain_name\t = \"${aws_elasticsearch_domain.${2:foo}.domain_name}\"",
      "\taccess_policies = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticSearchDomainPolicy"
  },
  "frAwsElasticSearchDomainPolicy": {
    "prefix": "frAwsElasticSearchDomainPolicy",
    "body": [
      "resource \"aws_elastic_search_domain_policy\" \"${1:name}\" {",
      "\tdomain_name\t = \"${aws_elasticsearch_domain.${2:foo}.domain_name}\"",
      "\taccess_policies = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticSearchDomainPolicy"
  },
  "srAwsElasticTranscoderPipeline": {
    "prefix": "srAwsElasticTranscoderPipeline",
    "body": [
      "resource \"aws_elastic_transcoder_pipeline\" \"${1:name}\" {",
      "\tinput_bucket = \"${aws_s3_bucket.${2:foo}.bucket}\"",
      "\trole\t\t = \"${aws_iam_role.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticTranscoderPipeline"
  },
  "frAwsElasticTranscoderPipeline": {
    "prefix": "frAwsElasticTranscoderPipeline",
    "body": [
      "resource \"aws_elastic_transcoder_pipeline\" \"${1:name}\" {",
      "\tinput_bucket\t\t\t\t = \"${aws_s3_bucket.${2:foo}.bucket}\"",
      "\trole\t\t\t\t\t\t = \"${aws_iam_role.${3:bar}.arn}\"",
      "\taws_kms_key_arn\t\t\t= \"\"",
      "\tcontent_config {",
      "\t\tbucket\t\t= \"${aws_s3_bucket.${4:baz}.bucket}\"",
      "\t\tstorage_class = \"\"",
      "\t}",
      "\tcontent_config_permissions {",
      "\t\taccess\t = [\"\"]",
      "\t\tgrantee\t= \"\"",
      "\t\tgrantee_type = \"\"",
      "\t}",
      "\tname\t\t\t\t\t\t = \"\"",
      "\tnotifications {",
      "\t\tcompleted   = \"\"",
      "\t\terror\t = \"\"",
      "\t\tprogressing = \"\"",
      "\t\twarning\t = \"\"",
      "\t}",
      "\toutput_bucket\t\t\t\t= \"\"",
      "\tthumbnail_config {",
      "\t\tbucket\t\t= \"${aws_s3_bucket.${5:qux}.bucket}\"",
      "\t\tstorage_class = \"\"",
      "\t}",
      "\tthumbnail_config_permissions {",
      "\t\taccess\t = [\"\"]",
      "\t\tgrantee\t= \"\"",
      "\t\tgrantee_type = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticTranscoderPipeline"
  },
  "srAwsElasticTranscoderPreset": {
    "prefix": "srAwsElasticTranscoderPreset",
    "body": [
      "resource \"aws_elastic_transcoder_preset\" \"${1:name}\" {",
      "\tcontainer = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticTranscoderPreset"
  },
  "frAwsElasticTranscoderPreset": {
    "prefix": "frAwsElasticTranscoderPreset",
    "body": [
      "resource \"aws_elastic_transcoder_preset\" \"${1:name}\" {",
      "\tcontainer\t\t = \"\"",
      "\taudio {",
      "\t\taudio_packing_mode = \"\"",
      "\t\tbit_rate\t\t = \"\"",
      "\t\tchannels\t\t = \"\"",
      "\t\tcodec\t\t\t= \"\"",
      "\t\tsample_rate\t\t= \"\"",
      "\t}",
      "\taudio_codec_options {",
      "\t\tbit_depth = \"\"",
      "\t\tbit_order = \"\"",
      "\t\tprofile   = \"\"",
      "\t\tsigned\t= \"\"",
      "\t}",
      "\tdescription\t\t = \"${1}\"",
      "\tname\t\t\t\t= \"\"",
      "\tthumbnails {",
      "\t\taspect_ratio   = \"\"",
      "\t\tformat\t\t = \"\"",
      "\t\tinterval\t = \"\"",
      "\t\tmax_height\t = \"\"",
      "\t\tmax_width\t= \"\"",
      "\t\tpadding_policy = \"\"",
      "\t\tresolution:\t= \"\"",
      "\t\tsizing_policy  = \"\"",
      "\t}",
      "\ttype\t\t\t\t= \"\"",
      "\tvideo {",
      "\t\taspect_ratio\t\t = \"\"",
      "\t\tbit_rate\t\t\t = \"\"",
      "\t\tcodec\t\t\t\t= \"\"",
      "\t\tdisplay_aspect_ratio = \"\"",
      "\t\tfixed_gop\t\t\t= \"\"",
      "\t\tframe_rate\t\t = \"\"",
      "\t\tkeyframes_max_dist   = \"\"",
      "\t\tmax_frame_rate\t = \"\"",
      "\t\tmax_height\t\t = \"\"",
      "\t\tmax_width\t\t\t= \"\"",
      "\t\tpadding_policy\t = \"\"",
      "\t\tresolution\t\t = \"\"",
      "\t\tsizing_policy\t\t= \"\"",
      "\t}",
      "\tvideo_watermarks {",
      "\t\thorizontal_align  = \"\"",
      "\t\thorizontal_offset = \"\"",
      "\t\tid\t\t\t\t= \"\"",
      "\t\tmax_height\t\t= \"\"",
      "\t\tmax_width\t\t = \"\"",
      "\t\topacity\t\t = \"\"",
      "\t\tsizing_policy\t = \"\"",
      "\t\ttarget\t\t\t= \"\"",
      "\t\tvertical_align\t= \"\"",
      "\t\tvertical_offset   = \"\"",
      "\t}",
      "\tvideo_codec_options {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticTranscoderPreset"
  },
  "srAwsElasticacheCluster": {
    "prefix": "srAwsElasticacheCluster",
    "body": [
      "resource \"aws_elasticache_cluster\" \"${1:name}\" {",
      "\tcluster_id\t\t = \"${1}\"",
      "\tengine\t\t\t = \"${2:foo}\"",
      "\tnode_type\t\t\t= \"${3:bar}\"",
      "\tnum_cache_nodes\t= 1",
      "\tport\t\t\t\t = 11211",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticacheCluster"
  },
  "frAwsElasticacheCluster": {
    "prefix": "frAwsElasticacheCluster",
    "body": [
      "resource \"aws_elasticache_cluster\" \"${1:name}\" {",
      "\tcluster_id\t\t\t = \"${1}\"",
      "\tengine\t\t\t\t = \"${2:foo}\"",
      "\tengine_version\t\t = \"\"",
      "\tnode_type\t\t\t\t= \"${3:bar}\"",
      "\tparameter_group_name\t = \"${4:baz}\"",
      "\tsubnet_group_name\t\t= \"\"",
      "\tport\t\t\t\t\t = 11211",
      "\tnum_cache_nodes\t\t= 1",
      "\taz_mode\t\t\t\t= \"\"",
      "\tavailability_zones\t = [\"\"]",
      "\tsubnet_group_name\t\t= \"\"   # VPC Only",
      "\tsecurity_group_names\t = [\"\"] # EC2 Classic Only",
      "\tsecurity_group_ids\t = [\"\"] # VPC Only (one element only).",
      "\tsnapshot_arns\t\t\t= [\"\"]",
      "\tsnapshot_window\t\t= \"05:00-09:00\"",
      "\tsnapshot_name\t\t\t= \"\"",
      "\tmaintenance_window\t = \"sun:05:00-sun:09:00\" # Minimum 60 mins range.",
      "\tnotification_topic_arn   = \"\"",
      "\tsnapshot_retention_limit = 15",
      "\tapply_immediately\t\t= true|false",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticacheCluster"
  },
  "srAwsElasticacheParameterGroup": {
    "prefix": "srAwsElasticacheParameterGroup",
    "body": [
      "resource \"aws_elasticache_parameter_group\" \"${1:name}\" {",
      "\tname   = \"${1}\"",
      "\tfamily = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticacheParameterGroup"
  },
  "frAwsElasticacheParameterGroup": {
    "prefix": "frAwsElasticacheParameterGroup",
    "body": [
      "resource \"aws_elasticache_parameter_group\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tfamily\t= \"\"",
      "\tdescription = \"\"",
      "\tparameter {",
      "\t\tname  = \"\"",
      "\t\tvalue = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticacheParameterGroup"
  },
  "srAwsElasticacheReplicationGroup": {
    "prefix": "srAwsElasticacheReplicationGroup",
    "body": [
      "resource \"aws_elasticache_replication_group\" \"${1:name}\" {",
      "\treplication_group_id\t\t= \"${2:foo}\"",
      "\treplication_group_description = \"${3:bar}\"",
      "\tnode_type\t\t\t\t\t = \"\"",
      "\tnumber_cache_clusters\t\t = 1",
      "\tport\t\t\t\t = 11211",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticacheReplicationGroup"
  },
  "frAwsElasticacheReplicationGroup": {
    "prefix": "frAwsElasticacheReplicationGroup",
    "body": [
      "resource \"aws_elasticache_replication_group\" \"${1:name}\" {",
      "\treplication_group_id\t\t= \"${2:foo}\"",
      "\treplication_group_description = \"${3:bar}\"",
      "\tnode_type\t\t\t\t\t = \"\"",
      "\tnumber_cache_clusters\t\t = 1",
      "\tavailability_zones\t\t\t= [\"\"]",
      "\tengine\t\t\t\t\t\t= \"\"",
      "\tengine_version\t\t\t\t= \"\"",
      "\tparameter_group_name\t\t= \"\"",
      "\tsubnet_group_name\t\t\t = \"\"",
      "\tsecurity_group_names\t\t= [\"\"] # EC2 Classic Only",
      "\tsecurity_group_ids\t\t\t= [\"\"] # VPC Only",
      "\tsnapshot_arns\t\t\t\t = [\"\"] # One element only.",
      "\tsnapshot_name\t\t\t\t = \"\"",
      "\tsnapshot_window\t\t\t = \"05:00-09:00\"",
      "\tmaintenance_window\t\t\t= \"sun:05:00-sun:09:00\" # Minimum 60 mins range.",
      "\tport\t\t\t\t\t\t= 11211",
      "\tnotification_topic_arn\t\t= \"\"",
      "\tsnapshot_retention_limit\t= 15",
      "\tapply_immediately\t\t\t = true|false",
      "\tautomatic_failover_enabled\t= true|false",
      "\tauto_minor_version_upgrade\t= true|false",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticacheReplicationGroup"
  },
  "srAwsElasticacheSecurityGroup": {
    "prefix": "srAwsElasticacheSecurityGroup",
    "body": [
      "resource \"aws_elasticache_security_group\" \"${1:name}\" {",
      "\tname\t\t\t\t = \"${1}\"",
      "\tsecurity_group_names = [\"${aws_security_group.${2:foo}.name}\"]",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticacheSecurityGroup"
  },
  "frAwsElasticacheSecurityGroup": {
    "prefix": "frAwsElasticacheSecurityGroup",
    "body": [
      "resource \"aws_elasticache_security_group\" \"${1:name}\" {",
      "\tname\t\t\t\t = \"${1}\"",
      "\tsecurity_group_names = [\"${aws_security_group.${2:foo}.name}\"]",
      "\tdescription\t\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticacheSecurityGroup"
  },
  "srAwsElasticacheSubnetGroup": {
    "prefix": "srAwsElasticacheSubnetGroup",
    "body": [
      "resource \"aws_elasticache_subnet_group\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\tsubnet_ids = [\"${aws_subnet.${2:foo}.id}\"]",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElasticacheSubnetGroup"
  },
  "frAwsElasticacheSubnetGroup": {
    "prefix": "frAwsElasticacheSubnetGroup",
    "body": [
      "resource \"aws_elasticache_subnet_group\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tsubnet_ids = [\"${aws_subnet.${2:foo}.id}\"]",
      "\tdescription = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElasticacheSubnetGroup"
  },
  "srAwsElb": {
    "prefix": "srAwsElb",
    "body": [
      "resource \"aws_elb\" \"${1:name}\" {",
      "\tlistener {",
      "\t\tinstance_port\t= 1",
      "\t\tinstance_protocol  = \"\"",
      "\t\tlb_port\t\t\t= 1",
      "\t\tlb_protocol\t\t= \"\"",
      "\t\tssl_certificate_id = \"\"",
      "\t}",
      "\tsubnets = [\"\"] # Required for VPC ELB",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElb"
  },
  "frAwsElb": {
    "prefix": "frAwsElb",
    "body": [
      "resource \"aws_elb\" \"${1:name}\" {",
      "\tlistener {",
      "\t\tinstance_port\t= 1",
      "\t\tinstance_protocol  = \"\"",
      "\t\tlb_port\t\t\t= 1",
      "\t\tlb_protocol\t\t= \"\"",
      "\t\tssl_certificate_id = \"arn:aws:iam::123456789012:server-certificate/certName\"",
      "\t}",
      "\tname\t\t\t\t\t\t= \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix\t\t\t\t = \"\"",
      "\tinternal\t\t\t\t\t= true|false",
      "\tcross_zone_load_balancing   = true|false",
      "\tavailability_zones\t\t= [\"\"]",
      "\t#instances\t\t\t\t = [\"${aws_instance.nono.id}\"] # Provided as attachment below",
      "\tsecurity_groups\t\t\t = [\"\"] # VPC Only",
      "\tsource_security_group\t = \"\"",
      "\tsubnets\t\t\t\t\t = [\"\"] # Required for VPC ELB",
      "\tidle_timeout\t\t\t\t= 60",
      "\tconnection_draining\t\t = true|false",
      "\tconnection_draining_timeout = 300",
      "\taccess_logs {",
      "\t\tinterval\t= 60",
      "\t\tbucket\t\t= \"${aws_s3_bucket.${2:foo}.bucket}\"",
      "\t\tbucket_prefix = \"\"",
      "\t\tenabled\t = true|false",
      "\t}",
      "\thealth_check {",
      "\t\thealthy_threshold   = 1",
      "\t\tunhealthy_threshold = 1",
      "\t\ttarget\t\t\t= \"\"",
      "\t\tinterval\t\t\t= 1",
      "\t\ttimeout\t\t\t = 1",
      "\t}",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      "resource \"aws_elb_attachment\" \"${1}\" {",
      "\telb\t= \"${aws_elb.${1}.name}\"",
      "\tinstance = \"${aws_instance.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElb"
  },
  "srAwsElbAttachment": {
    "prefix": "srAwsElbAttachment",
    "body": [
      "resource \"aws_elb_attachment\" \"${1:name}\" {",
      "\telb\t= \"${aws_elb.${2:foo}.name}\"",
      "\tinstance = \"${aws_instance.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsElbAttachment"
  },
  "frAwsElbAttachment": {
    "prefix": "frAwsElbAttachment",
    "body": [
      "resource \"aws_elb_attachment\" \"${1:name}\" {",
      "\telb\t= \"${aws_elb.${2:foo}.name}\"",
      "\tinstance = \"${aws_instance.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsElbAttachment"
  },
  "srAwsFlowLog": {
    "prefix": "srAwsFlowLog",
    "body": [
      "resource \"aws_flow_log\" \"${1:name}\" {",
      "\tiam_role_arn   = \"${aws_iam_role.${2:foo}.arn}\"",
      "\tlog_group_name = \"${aws_cloudwatch_log_group.${3:bar}.name}\"",
      "\ttraffic_type   = \"ACCEPT\"|\"REJECT\"|\"ALL\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsFlowLog"
  },
  "frAwsFlowLog": {
    "prefix": "frAwsFlowLog",
    "body": [
      "resource \"aws_flow_log\" \"${1:name}\" {",
      "\tiam_role_arn   = \"${aws_iam_role.${2:foo}.arn}\"",
      "\tlog_group_name = \"${aws_cloudwatch_log_group.${3:bar}.name}\"",
      "\ttraffic_type   = \"ACCEPT\"|\"REJECT\"|\"ALL\"",
      "\tvpc_id\t\t = \"${aws_vpc.${4:baz}.id}\"",
      "\tsubnet_id\t= \"\"",
      "\teni_id\t\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsFlowLog"
  },
  "srAwsGlacierVault": {
    "prefix": "srAwsGlacierVault",
    "body": [
      "resource \"aws_glacier_vault\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsGlacierVault"
  },
  "frAwsGlacierVault": {
    "prefix": "frAwsGlacierVault",
    "body": [
      "resource \"aws_glacier_vault\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\taccess_policy = \"\"",
      "\tnotification {",
      "\t\tevents\t= [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]",
      "\t\tsns_topic = \"${aws_sns_topic.${{2:foo}.arn}\"",
      "\t}",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsGlacierVault"
  },
  "srAwsIAMServerCertificate": {
    "prefix": "srAwsIAMServerCertificate",
    "body": [
      "resource \"aws_iam_server_certificate\" \"${1:name}\" {",
      "\tcertificate_body = \"${file(\"self-ca-cert.pem\")}\" # UNIX line breaks, only one cert.",
      "\tprivate_key\t= \"${file(\"test-key.pem\")}\"\t # UNIX line breaks",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIAMServerCertificate"
  },
  "frAwsIAMServerCertificate": {
    "prefix": "frAwsIAMServerCertificate",
    "body": [
      "resource \"aws_iam_server_certificate\" \"${1:name}\" {",
      "\tcertificate_body  = \"${file(\"self-ca-cert.pem\")}\" # UNIX line breaks, only one cert.",
      "\tprivate_key\t = \"${file(\"test-key.pem\")}\"\t # UNIX line breaks",
      "\tcertificate_chain = \"\"",
      "\tpath\t\t\t= \"\"",
      "\tname\t\t\t= \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix\t = \"\"",
      "\tarn\t\t\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIAMServerCertificate"
  },
  "srAwsIamAccessKey": {
    "prefix": "srAwsIamAccessKey",
    "body": [
      "resource \"aws_iam_access_key\" \"${1:name}\" {",
      "\tuser = \"${aws_iam_user.${2:foo}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamAccessKey"
  },
  "frAwsIamAccessKey": {
    "prefix": "frAwsIamAccessKey",
    "body": [
      "resource \"aws_iam_access_key\" \"${1:name}\" {",
      "\tuser\t= \"${aws_iam_user.${2:foo}.name}\"",
      "\tpgp_key = \"keybase:${2:foo}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamAccessKey"
  },
  "srAwsIamAccountAlias": {
    "prefix": "srAwsIamAccountAlias",
    "body": [
      "resource \"aws_iam_account_alias\" \"${1:name}\" {",
      "\taccount_alias = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamAccountAlias"
  },
  "frAwsIamAccountAlias": {
    "prefix": "frAwsIamAccountAlias",
    "body": [
      "resource \"aws_iam_account_alias\" \"${1:name}\" {",
      "\taccount_alias = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamAccountAlias"
  },
  "srAwsIamAccountPasswordPolicy": {
    "prefix": "srAwsIamAccountPasswordPolicy",
    "body": [
      "resource \"aws_iam_account_password_policy\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamAccountPasswordPolicy"
  },
  "frAwsIamAccountPasswordPolicy": {
    "prefix": "frAwsIamAccountPasswordPolicy",
    "body": [
      "resource \"aws_iam_account_password_policy\" \"${1:name}\" {",
      "\tallow_users_to_change_password = true|false",
      "\thard_expiry\t\t\t\t\t= true|false",
      "\tmax_password_age\t\t\t = 1",
      "\tminimum_password_length\t\t= 1",
      "\tpassword_reuse_prevention\t= 1",
      "\trequire_lowercase_characters   = true|false",
      "\trequire_numbers\t\t\t\t= true|false",
      "\trequire_symbols\t\t\t\t= true|false",
      "\trequire_uppercase_characters   = true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamAccountPasswordPolicy"
  },
  "srAwsIamGroup": {
    "prefix": "srAwsIamGroup",
    "body": [
      "resource \"aws_iam_group\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamGroup"
  },
  "frAwsIamGroup": {
    "prefix": "frAwsIamGroup",
    "body": [
      "resource \"aws_iam_group\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tpath = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamGroup"
  },
  "srAwsIamGroupMembership": {
    "prefix": "srAwsIamGroupMembership",
    "body": [
      "resource \"aws_iam_group_membership\" \"${1:name}\" {",
      "\tname  = \"${1}\"",
      "\tusers = [\"${aws_iam_user.${2:foo}.name}\"]",
      "\tgroup = \"${aws_iam_group.${3:bar}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamGroupMembership"
  },
  "frAwsIamGroupMembership": {
    "prefix": "frAwsIamGroupMembership",
    "body": [
      "resource \"aws_iam_group_membership\" \"${1:name}\" {",
      "\tname  = \"${1}\"",
      "\tusers = [\"${aws_iam_user.${2:foo}.name}\"]",
      "\tgroup = \"${aws_iam_group.${3:bar}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamGroupMembership"
  },
  "srAwsIamGroupPolicy": {
    "prefix": "srAwsIamGroupPolicy",
    "body": [
      "resource \"aws_iam_group_policy\" \"${1:name}\" {",
      "\tpolicy = \"\"",
      "\tgroup  = \"${aws_iam_group.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamGroupPolicy"
  },
  "frAwsIamGroupPolicy": {
    "prefix": "frAwsIamGroupPolicy",
    "body": [
      "resource \"aws_iam_group_policy\" \"${1:name}\" {",
      "\tpolicy\t= \"\"",
      "\tgroup\t = \"${aws_iam_group.${2:foo}.id}\"",
      "\tname\t\t= \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamGroupPolicy"
  },
  "srAwsIamGroupPolicyAttachment": {
    "prefix": "srAwsIamGroupPolicyAttachment",
    "body": [
      "resource \"aws_iam_group_policy_attachment\" \"${1:name}\" {",
      "\tgroup\t= \"${aws_iam_group.${2:foo}.id}\"",
      "\tpolicy_arn = \"${aws_iam_policy.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamGroupPolicyAttachment"
  },
  "frAwsIamGroupPolicyAttachment": {
    "prefix": "frAwsIamGroupPolicyAttachment",
    "body": [
      "resource \"aws_iam_group_policy_attachment\" \"${1:name}\" {",
      "\tgroup\t= \"${aws_iam_group.${2:foo}.id}\"",
      "\tpolicy_arn = \"${aws_iam_policy.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamGroupPolicyAttachment"
  },
  "srAwsIamInstanceProfile": {
    "prefix": "srAwsIamInstanceProfile",
    "body": [
      "resource \"aws_iam_instance_profile\" \"${1:name}\" {",
      "\trole = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamInstanceProfile"
  },
  "frAwsIamInstanceProfile": {
    "prefix": "frAwsIamInstanceProfile",
    "body": [
      "resource \"aws_iam_instance_profile\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix = \"\"",
      "\tpath\t\t= \"/\"",
      "\troles\t = [\"\"] # Deprecated",
      "\trole\t\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamInstanceProfile"
  },
  "srAwsIamPolicy": {
    "prefix": "srAwsIamPolicy",
    "body": [
      "resource \"aws_iam_policy\" \"${1:name}\" {",
      "\tpolicy = \"${file(\"policy.json\")}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamPolicy"
  },
  "frAwsIamPolicy": {
    "prefix": "frAwsIamPolicy",
    "body": [
      "resource \"aws_iam_policy\" \"${1:name}\" {",
      "\tpolicy\t= \"${file(\"policy.json\")}\"",
      "\tdescription = \"\"",
      "\tpath\t\t= \"/\"",
      "\tname\t\t= \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamPolicy"
  },
  "srAwsIamPolicyAttachment": {
    "prefix": "srAwsIamPolicyAttachment",
    "body": [
      "resource \"aws_iam_policy_attachment\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\tpolicy_arn = \"${aws_iam_policy.${2:foo}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamPolicyAttachment"
  },
  "frAwsIamPolicyAttachment": {
    "prefix": "frAwsIamPolicyAttachment",
    "body": [
      "resource \"aws_iam_policy_attachment\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\tpolicy_arn = \"${aws_iam_policy.${2:foo}.arn}\"",
      "\tusers\t= [\"${aws_iam_user.${3:user}.name}\"]",
      "\troles\t= [\"${aws_iam_role.${4:role}.name}\"]",
      "\tgroups\t = [\"${aws_iam_group.${5:group}.name}\"]",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamPolicyAttachment"
  },
  "srAwsIamRole": {
    "prefix": "srAwsIamRole",
    "body": [
      "resource \"aws_iam_role\" \"${1:name}\" {",
      "\tassume_role_policy = \"${data.aws_iam_policy_document.${2:foo}.json}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamRole"
  },
  "frAwsIamRole": {
    "prefix": "frAwsIamRole",
    "body": [
      "resource \"aws_iam_role\" \"${1:name}\" {",
      "\tassume_role_policy = \"${data.aws_iam_policy_document.${2:foo}.json}\"",
      "\tname\t\t\t = \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix\t\t= \"\"",
      "\tpath\t\t\t = \"/\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamRole"
  },
  "srAwsIamRolePolicy": {
    "prefix": "srAwsIamRolePolicy",
    "body": [
      "resource \"aws_iam_role_policy\" \"${1:name}\" {",
      "\tpolicy = \"${file(\"policy.json\")}\"",
      "\trole   = \"${aws_iam_role.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamRolePolicy"
  },
  "frAwsIamRolePolicy": {
    "prefix": "frAwsIamRolePolicy",
    "body": [
      "resource \"aws_iam_role_policy\" \"${1:name}\" {",
      "\tpolicy\t= \"${file(\"policy.json\")}\"",
      "\trole\t\t= \"${aws_iam_role.${2:foo}.id}\"",
      "\tname\t\t= \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamRolePolicy"
  },
  "srAwsIamRolePolicyAttachment": {
    "prefix": "srAwsIamRolePolicyAttachment",
    "body": [
      "resource \"aws_iam_role_policy_attachment\" \"${1:name}\" {",
      "\trole\t = \"${aws_iam_role.${2:foo}.name}\"",
      "\tpolicy_arn = \"${aws_iam_policy.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamRolePolicyAttachment"
  },
  "frAwsIamRolePolicyAttachment": {
    "prefix": "frAwsIamRolePolicyAttachment",
    "body": [
      "resource \"aws_iam_role_policy_attachment\" \"${1:name}\" {",
      "\trole\t = \"${aws_iam_role.${2:foo}.name}\"",
      "\tpolicy_arn = \"${aws_iam_policy.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamRolePolicyAttachment"
  },
  "srAwsIamSamlProvider": {
    "prefix": "srAwsIamSamlProvider",
    "body": [
      "resource \"aws_iam_saml_provider\" \"${1:name}\" {",
      "\tname\t\t\t\t = \"${1}\"",
      "\tsaml_metadata_document = \"${file(\"saml-metadata.xml\")}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamSamlProvider"
  },
  "frAwsIamSamlProvider": {
    "prefix": "frAwsIamSamlProvider",
    "body": [
      "resource \"aws_iam_saml_provider\" \"${1:name}\" {",
      "\tname\t\t\t\t = \"${1}\"",
      "\tsaml_metadata_document = \"${file(\"saml-metadata.xml\")}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamSamlProvider"
  },
  "srAwsIamUser": {
    "prefix": "srAwsIamUser",
    "body": [
      "resource \"aws_iam_user\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamUser"
  },
  "frAwsIamUser": {
    "prefix": "frAwsIamUser",
    "body": [
      "resource \"aws_iam_user\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tpath\t\t= \"/\"",
      "\tforce_destroy = true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamUser"
  },
  "srAwsIamUserLoginProfile": {
    "prefix": "srAwsIamUserLoginProfile",
    "body": [
      "resource \"aws_iam_user_login_profile\" \"${1:name}\" {",
      "\tuser\t= \"${1}\"",
      "\tpgp_key = \"keybase:${2:foo}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamUserLoginProfile"
  },
  "frAwsIamUserLoginProfile": {
    "prefix": "frAwsIamUserLoginProfile",
    "body": [
      "resource \"aws_iam_user_login_profile\" \"${1:name}\" {",
      "\tuser\t\t\t\t\t= \"${1}\"",
      "\tpgp_key\t\t\t\t = \"keybase:${2:foo}\"",
      "\tpassword_reset_required = true|false",
      "\tpassword_length\t\t = 1",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamUserLoginProfile"
  },
  "srAwsIamUserPolicy": {
    "prefix": "srAwsIamUserPolicy",
    "body": [
      "resource \"aws_iam_user_policy\" \"${1:name}\" {",
      "\tpolicy = \"${file(\"policy.json\")}\"",
      "\tuser   = \"${aws_iam_user.${3:bar}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamUserPolicy"
  },
  "frAwsIamUserPolicy": {
    "prefix": "frAwsIamUserPolicy",
    "body": [
      "resource \"aws_iam_user_policy\" \"${1:name}\" {",
      "\tpolicy\t= \"${file(\"policy.json\")}\"",
      "\tuser\t\t= \"${aws_iam_user.${3:bar}.name}\"",
      "\tname\t\t= \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamUserPolicy"
  },
  "srAwsIamUserPolicyAttachment": {
    "prefix": "srAwsIamUserPolicyAttachment",
    "body": [
      "resource \"aws_iam_user_policy_attachment\" \"${1:name}\" {",
      "\tuser\t = \"${aws_iam_user.${2:foo}.name}\"",
      "\tpolicy_arn = \"${aws_iam_policy.policy.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamUserPolicyAttachment"
  },
  "frAwsIamUserPolicyAttachment": {
    "prefix": "frAwsIamUserPolicyAttachment",
    "body": [
      "resource \"aws_iam_user_policy_attachment\" \"${1:name}\" {",
      "\tuser\t = \"${aws_iam_user.${2:foo}.name}\"",
      "\tpolicy_arn = \"${aws_iam_policy.policy.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamUserPolicyAttachment"
  },
  "srAwsIamUserSshKey": {
    "prefix": "srAwsIamUserSshKey",
    "body": [
      "resource \"aws_iam_user_ssh_key\" \"${1:name}\" {",
      "\tusername   = \"${aws_iam_user.${2:foo}.name}\"",
      "\tpublic_key = \"ssh-rsa ... user@host\"",
      "\tencoding   = \"SSH\"|\"PEM\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsIamUserSshKey"
  },
  "frAwsIamUserSshKey": {
    "prefix": "frAwsIamUserSshKey",
    "body": [
      "resource \"aws_iam_user_ssh_key\" \"${1:name}\" {",
      "\tusername   = \"${aws_iam_user.${2:foo}.name}\"",
      "\tpublic_key = \"ssh-rsa ... user@host\"",
      "\tencoding   = \"SSH\"|\"PEM\"",
      "\tstatus\t = \"ACTIVE\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsIamUserSshKey"
  },
  "srAwsInstance": {
    "prefix": "srAwsInstance",
    "body": [
      "resource \"aws_instance\" \"${1:name}\" {",
      "\tami\t\t = \"${data.aws_ami.${2:foo}.id}\"",
      "\tinstance_type = \"${3:bar}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsInstance"
  },
  "frAwsInstance": {
    "prefix": "frAwsInstance",
    "body": [
      "resource \"aws_instance\" \"${1:name}\" {",
      "\tami\t\t\t\t\t\t\t\t= \"${data.aws_ami.${2:foo}.id}\"",
      "\tinstance_type\t\t\t\t\t\t= \"${3:bar}\"",
      "\tassociate_public_ip_address\t\t= true|false",
      "\tavailability_zone\t\t\t\t\t= \"\"",
      "\tplacement_group\t\t\t\t\t= \"\"",
      "\tkey_name\t\t\t\t\t\t\t = \"\"",
      "\tsubnet_id\t\t\t\t\t\t\t= \"\"",
      "\tprivate_ip\t\t\t\t\t\t = \"\"",
      "\tsource_dest_check\t\t\t\t\t= true|false",
      "\tuser_data\t\t\t\t\t\t\t= \"\"",
      "\tsecurity_groups\t\t\t\t\t= [\"\"]",
      "\tvpc_security_group_ids\t\t\t = [\"\"] # VPC Only",
      "\tebs_optimized\t\t\t\t\t\t= true|false",
      "\tdisable_api_termination\t\t\t= true|false",
      "\tinstance_initiated_shutdown_behavior = \"\"",
      "\tmonitoring\t\t\t\t\t\t = true|false",
      "\tiam_instance_profile\t\t\t\t = \"\"",
      "\tipv6_address_count\t\t\t\t = 0",
      "\tipv6_addresses\t\t\t\t\t = [\"\"]",
      "\ttenancy\t\t\t\t\t\t\t= \"\"",
      "\tebs_block_device {",
      "\t\tdelete_on_termination = true|false",
      "\t\tdevice_name\t\t = \"\"",
      "\t\tencrypted\t\t\t = true|false",
      "\t\tiops\t\t\t\t= 1",
      "\t\tsnapshot_id\t\t = \"\"",
      "\t\tvolume_size\t\t = 1",
      "\t\tvolume_type\t\t = \"\"",
      "\t}",
      "\tephemeral_block_device {",
      "\t\tdevice_name  = \"\"",
      "\t\tvirtual_name = \"\"",
      "\t\tno_device\t= true|false",
      "\t}",
      "\troot_block_device {",
      "\t\tdelete_on_termination = true|false",
      "\t\tiops\t\t\t\t= 1",
      "\t\tvolume_size\t\t = 1",
      "\t\tvolume_type\t\t = \"\"",
      "\t}",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsInstance"
  },
  "srAwsInternetGateway": {
    "prefix": "srAwsInternetGateway",
    "body": [
      "resource \"aws_internet_gateway\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsInternetGateway"
  },
  "frAwsInternetGateway": {
    "prefix": "frAwsInternetGateway",
    "body": [
      "resource \"aws_internet_gateway\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsInternetGateway"
  },
  "srAwsKeyPair": {
    "prefix": "srAwsKeyPair",
    "body": [
      "resource \"aws_key_pair\" \"${1:name}\" {",
      "\tpublic_key = \"ssh-rsa ... user@host\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsKeyPair"
  },
  "frAwsKeyPair": {
    "prefix": "frAwsKeyPair",
    "body": [
      "resource \"aws_key_pair\" \"${1:name}\" {",
      "\tpublic_key\t= \"ssh-rsa ... user@host\"",
      "\tkey_name\t\t= \"${1}\" # Conflicts with key_name_prefix",
      "\tkey_name_prefix = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsKeyPair"
  },
  "srAwsKinesisFirehoseDeliveryStream": {
    "prefix": "srAwsKinesisFirehoseDeliveryStream",
    "body": [
      "resource \"aws_kinesis_firehose_delivery_stream\" \"${1:name}\" {",
      "\tname\t\t\t = \"${1}\"",
      "\tdestination\t= \"s3\"|\"redshift\"|\"elasticsearch\"",
      "\ts3_configuration {",
      "\t\tbucket_arn\t\t\t\t= \"${aws_s3_bucket.${2:foo}.arn}\"",
      "\t\tbuffer_size\t\t\t\t = 1",
      "\t\tbuffer_interval\t\t\t = 1",
      "\t\tcompression_format\t\t= \"\"",
      "\t\tkms_key_arn\t\t\t\t = \"\"",
      "\t\trole_arn\t\t\t\t\t= \"${aws_iam_role.${3:bar}.arn}\"",
      "\t\tprefix\t\t\t\t\t= \"\"",
      "\t\tcloudwatch_logging_options {",
      "\t\tenabled\t\t = true|false",
      "\t\tlog_group_name  = \"\"",
      "\t\tlog_stream_name = \"\"",
      "\t}",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsKinesisFirehoseDeliveryStream"
  },
  "frAwsKinesisFirehoseDeliveryStream": {
    "prefix": "frAwsKinesisFirehoseDeliveryStream",
    "body": [
      "resource \"aws_kinesis_firehose_delivery_stream\" \"${1:name}\" {",
      "\tname\t\t\t\t\t\t= \"${1}\"",
      "\tdestination\t\t\t\t = \"s3\"|\"redshift\"|\"elasticsearch\"",
      "\ts3_configuration {",
      "\t\tbucket_arn\t\t = \"${aws_s3_bucket.${2:foo}.arn}\"",
      "\t\tbuffer_size\t\t= 1",
      "\t\tbuffer_interval\t= 1",
      "\t\tcompression_format = \"\"",
      "\t\tkms_key_arn\t\t= \"\"",
      "\t\trole_arn\t\t = \"${aws_iam_role.${3:bar}.arn}\"",
      "\t\tprefix\t\t\t = \"\"",
      "\t\tcloudwatch_logging_options {",
      "\t\tenabled\t\t = true|false",
      "\t\tlog_group_name  = \"\"",
      "\t\tlog_stream_name = \"\"",
      "\t}",
      "\t}",
      "\tredshift_configuration {",
      "\t\tcluster_jdbcurl\t= \"jdbc:redshift://${aws_redshift_cluster.${4:baz}.endpoint}/${aws_redshift_cluster.${5:qux}.database_name}\"",
      "\t\tusername\t\t = \"\"",
      "\t\tpassword\t\t = \"\"",
      "\t\trole_arn\t\t = \"${aws_iam_role.${3}.arn}\"",
      "\t\tretry_duration\t = 1",
      "\t\tcopy_options\t = \"delimiter '|'\"",
      "\t\tdata_table_columns = \"\"",
      "\t\tdata_table_name\t= \"\"",
      "\t\tcloudwatch_logging_options {",
      "\t\tenabled\t\t = true|false",
      "\t\tlog_group_name  = \"\"",
      "\t\tlog_stream_name = \"\"",
      "\t}",
      "\t}",
      "\telasticsearch_configuration {",
      "\t\tbuffering_interval\t= 300",
      "\t\tbuffering_size\t\t= 1",
      "\t\tdomain_arn\t\t\t= \"${aws_elasticsearch_domain.${6:quz}.arn}\"",
      "\t\tindex_name\t\t\t= \"${7:quuz}\"",
      "\t\tindex_rotation_period = \"\"",
      "\t\tretry_duration\t\t= 1",
      "\t\trole_arn\t\t\t= \"${aws_iam_role.${3}.arn}\"",
      "\t\ts3_backup_mode\t\t= \"\"",
      "\t\ttype_name\t\t\t = \"\"",
      "\t\tcloudwatch_logging_options {",
      "\t\tenabled\t\t = true|false",
      "\t\tlog_group_name  = \"\"",
      "\t\tlog_stream_name = \"\"",
      "\t}",
      "\t}",
      "\tarn\t\t\t\t\t\t = \"\"",
      "\tversion_id\t\t\t\t= \"\"",
      "\tdestination_id\t\t\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsKinesisFirehoseDeliveryStream"
  },
  "srAwsKinesisStream": {
    "prefix": "srAwsKinesisStream",
    "body": [
      "resource \"aws_kinesis_stream\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tshard_count = 1",
      "}",
      ""
    ],
    "description": "Snippet for srAwsKinesisStream"
  },
  "frAwsKinesisStream": {
    "prefix": "frAwsKinesisStream",
    "body": [
      "resource \"aws_kinesis_stream\" \"${1:name}\" {",
      "\tname\t\t\t\t= \"${1}\"",
      "\tshard_count\t\t = 1",
      "\tretention_period\t= 24",
      "\tshard_level_metrics = [\"\"]",
      "\tarn\t\t\t\t = \"\"",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsKinesisStream"
  },
  "srAwsKmsAlias": {
    "prefix": "srAwsKmsAlias",
    "body": [
      "resource \"aws_kms_alias\" \"${1:name}\" {",
      "\ttarget_key_id = \"${aws_kms_key.${2:foo}.key_id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsKmsAlias"
  },
  "frAwsKmsAlias": {
    "prefix": "frAwsKmsAlias",
    "body": [
      "resource \"aws_kms_alias\" \"${1:name}\" {",
      "\ttarget_key_id = \"${aws_kms_key.${2:foo}.key_id}\"",
      "\tname\t\t= \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix   = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsKmsAlias"
  },
  "srAwsKmsKey": {
    "prefix": "srAwsKmsKey",
    "body": [
      "resource \"aws_kms_key\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsKmsKey"
  },
  "frAwsKmsKey": {
    "prefix": "frAwsKmsKey",
    "body": [
      "resource \"aws_kms_key\" \"${1:name}\" {",
      "\tdescription\t\t\t = \"\"",
      "\tkey_usage\t\t\t = \"\"",
      "\tpolicy\t\t\t\t= \"\"",
      "\tis_enabled\t\t\t= true|false",
      "\tenable_key_rotation\t = true|false",
      "\tdeletion_window_in_days = 301",
      "}",
      ""
    ],
    "description": "Snippet for frAwsKmsKey"
  },
  "srAwsLBCookieStickinessPolicy": {
    "prefix": "srAwsLBCookieStickinessPolicy",
    "body": [
      "resource \"aws_lb_cookie_stickiness_policy\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tload_balancer = \"${aws_elb.${2:foo}.id}\"",
      "\tlb_port\t = 1",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLBCookieStickinessPolicy"
  },
  "frAwsLBCookieStickinessPolicy": {
    "prefix": "frAwsLBCookieStickinessPolicy",
    "body": [
      "resource \"aws_lb_cookie_stickiness_policy\" \"${1:name}\" {",
      "\tname\t\t\t\t\t = \"${1}\"",
      "\tload_balancer\t\t\t= \"${aws_elb.${2:foo}.id}\"",
      "\tlb_port\t\t\t\t= 1",
      "\tcookie_expiration_period = 1",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLBCookieStickinessPolicy"
  },
  "srAwsLBSSLNegotiationPolicy": {
    "prefix": "srAwsLBSSLNegotiationPolicy",
    "body": [
      "resource \"aws_lb_ssl_negotiation_policy\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tload_balancer = \"${aws_elb.${2:foo}.id}\"",
      "\tlb_port\t = 1",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLBSSLNegotiationPolicy"
  },
  "frAwsLBSSLNegotiationPolicy": {
    "prefix": "frAwsLBSSLNegotiationPolicy",
    "body": [
      "resource \"aws_lb_ssl_negotiation_policy\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tload_balancer = \"${aws_elb.${2:foo}.id}\"",
      "\tlb_port\t = 1",
      "\tattribute {",
      "\t\tname  = \"\"",
      "\t\tvalue = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLBSSLNegotiationPolicy"
  },
  "srAwsLambdaAlias": {
    "prefix": "srAwsLambdaAlias",
    "body": [
      "resource \"aws_lambda_alias\" \"${1:name}\" {",
      "\tfunction_name\t= \"${aws_lambda_function.${2:foo}.arn}\"",
      "\tfunction_version = \"$LATEST\"",
      "\tname\t\t\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLambdaAlias"
  },
  "frAwsLambdaAlias": {
    "prefix": "frAwsLambdaAlias",
    "body": [
      "resource \"aws_lambda_alias\" \"${1:name}\" {",
      "\tfunction_name\t= \"${aws_lambda_function.${2:foo}.arn}\"",
      "\tfunction_version = \"$LATEST\"",
      "\tname\t\t\t = \"${1}\"",
      "\tdescription\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLambdaAlias"
  },
  "srAwsLambdaEventSourceMapping": {
    "prefix": "srAwsLambdaEventSourceMapping",
    "body": [
      "resource \"aws_lambda_event_source_mapping\" \"${1:name}\" {",
      "\tevent_source_arn  = \"arn:aws:kinesis:REGION:123456789012:stream/stream_name\"",
      "\tfunction_name\t = \"arn:aws:lambda:REGION:123456789012:function:function_name\"",
      "\tstarting_position = \"TRIM_HORIZON\"|\"LATEST\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLambdaEventSourceMapping"
  },
  "frAwsLambdaEventSourceMapping": {
    "prefix": "frAwsLambdaEventSourceMapping",
    "body": [
      "resource \"aws_lambda_event_source_mapping\" \"${1:name}\" {",
      "\tevent_source_arn\t\t= \"arn:aws:kinesis:REGION:123456789012:stream/stream_name\"",
      "\tfunction_name\t\t = \"arn:aws:lambda:REGION:123456789012:function:function_name\"",
      "\tstarting_position\t = \"TRIM_HORIZON\"|\"LATEST\"",
      "\tbatch_size\t\t\t= 1",
      "\tenabled\t\t\t\t = true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLambdaEventSourceMapping"
  },
  "srAwsLambdaFunction": {
    "prefix": "srAwsLambdaFunction",
    "body": [
      "resource \"aws_lambda_function\" \"${1:name}\" {",
      "\tfunction_name = \"${1}\"",
      "\thandler\t = \"${2:foo}\"",
      "\trole\t\t= \"${aws_iam_role.${3:bar}.arn}\"",
      "\truntime\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLambdaFunction"
  },
  "frAwsLambdaFunction": {
    "prefix": "frAwsLambdaFunction",
    "body": [
      "resource \"aws_lambda_function\" \"${1:name}\" {",
      "\tfunction_name\t= \"${1}\"",
      "\thandler\t\t\t= \"${2:foo}\"",
      "\trole\t\t\t = \"${aws_iam_role.${3:bar}.arn}\"",
      "\truntime\t\t\t= \"\"",
      "\tfilename\t\t = \"file.zip\" # Conflicts with s3_bucket and s3_key",
      "\ts3_bucket\t\t= \"\"",
      "\ts3_key\t\t\t = \"\"",
      "\ts3_object_version  = \"\"",
      "\tdescription\t\t= \"\"",
      "\tdead_letter_config {",
      "\t\ttarget_arn = \"\"",
      "\t}",
      "\tmemory_size\t\t= 128",
      "\ttimeout\t\t\t= 3",
      "\tpublish\t\t\t= true|false",
      "\tvpc_config {",
      "\t\tsubnet_ids\t\t = [\"\"]",
      "\t\tsecurity_group_ids = [\"\"]",
      "\t\tvpc_id\t\t\t = \"\"",
      "\t}",
      "\tsource_code_hash   = \"${base64sha256(file(\"file.zip\"))}\"",
      "\tenvironment {",
      "\tvariables {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "\t}",
      "\tkms_key_arn\t\t= \"\"",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLambdaFunction"
  },
  "srAwsLambdaPermission": {
    "prefix": "srAwsLambdaPermission",
    "body": [
      "resource \"aws_lambda_permission\" \"${1:name}\" {",
      "\taction\t\t= \"\"",
      "\tfunction_name = \"${aws_lambda_function.${2:foo}.function_name}\"",
      "\tprincipal\t = \"\"",
      "\tstatement_id  = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLambdaPermission"
  },
  "frAwsLambdaPermission": {
    "prefix": "frAwsLambdaPermission",
    "body": [
      "resource \"aws_lambda_permission\" \"${1:name}\" {",
      "\taction\t\t = \"\"",
      "\tfunction_name  = \"${aws_lambda_function.${2:foo}.function_name}\"",
      "\tprincipal\t= \"\"",
      "\tstatement_id   = \"\"",
      "\tqualifier\t= \"${aws_lambda_alias.${3:bar}.name}\"",
      "\tsource_account = \"\"",
      "\tsource_arn\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLambdaPermission"
  },
  "srAwsLaunchConfiguration": {
    "prefix": "srAwsLaunchConfiguration",
    "body": [
      "resource \"aws_launch_configuration\" \"${1:name}\" {",
      "\timage_id\t= \"${data.aws_ami.${2:foo}.id}\"",
      "\tinstance_type = \"\"",
      "\tlifecycle { # Recommended",
      "\t\tcreate_before_destroy = true",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLaunchConfiguration"
  },
  "frAwsLaunchConfiguration": {
    "prefix": "frAwsLaunchConfiguration",
    "body": [
      "resource \"aws_launch_configuration\" \"${1:name}\" {",
      "\timage_id\t\t\t\t\t\t = \"${data.aws_ami.${2:foo}.id}\"",
      "\tinstance_type\t\t\t\t\t= \"\"",
      "\tname\t\t\t\t\t\t\t = \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix\t\t\t\t\t= \"\"",
      "\tiam_instance_profile\t\t\t = \"\"",
      "\tkey_name\t\t\t\t\t\t = \"\"",
      "\tuser_data\t\t\t\t\t\t= \"\"",
      "\tsecurity_groups\t\t\t\t= [\"\"]",
      "\tvpc_classic_link_id\t\t\t= \"\"",
      "\tvpc_classic_link_security_groups = [\"\"]",
      "\tassociate_public_ip_address\t= true|false",
      "\tspot_price\t\t\t\t\t = \"\"",
      "\tebs_optimized\t\t\t\t\t= true|false",
      "\tplacement_tenancy\t\t\t\t= \"\"",
      "\tenable_monitoring\t\t\t\t= true|false",
      "\tebs_block_device {",
      "\t\tdelete_on_termination = true|false",
      "\t\tdevice_name\t\t = \"\"",
      "\t\tiops\t\t\t\t= 1",
      "\t\tsnapshot_id\t\t = \"\"",
      "\t\tvolume_size\t\t = 1",
      "\t\tvolume_type\t\t = \"\"",
      "\t\tencrypted\t\t\t = true|false",
      "\t}",
      "\tephemeral_block_device {",
      "\t\tdevice_name  = \"\"",
      "\t\tvirtual_name = \"\"",
      "\t}",
      "\troot_block_device {",
      "\t\tdelete_on_termination = true|false",
      "\t\tiops\t\t\t\t= 1",
      "\t\tvolume_size\t\t = 1",
      "\t\tvolume_type\t\t = \"\"",
      "\t}",
      "\tlifecycle { # Recommended",
      "\t\tcreate_before_destroy = true",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLaunchConfiguration"
  },
  "srAwsLightsailDomain": {
    "prefix": "srAwsLightsailDomain",
    "body": [
      "resource \"aws_lightsail_domain\" \"${1:name}\" {",
      "\tdomain_name = \"${2:foo}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLightsailDomain"
  },
  "frAwsLightsailDomain": {
    "prefix": "frAwsLightsailDomain",
    "body": [
      "resource \"aws_lightsail_domain\" \"${1:name}\" {",
      "\tdomain_name = \"${2:foo}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLightsailDomain"
  },
  "srAwsLightsailInstance": {
    "prefix": "srAwsLightsailInstance",
    "body": [
      "resource \"aws_lightsail_instance\" \"${1:name}\" {",
      "\tname\t\t\t= \"${1}\"",
      "\tavailability_zone = \"us-east-1b\" # Must be in us-east-1",
      "\tblueprint_id\t= \"${2:foo}\"",
      "\tbundle_id\t\t = \"${3:bar}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLightsailInstance"
  },
  "frAwsLightsailInstance": {
    "prefix": "frAwsLightsailInstance",
    "body": [
      "resource \"aws_lightsail_instance\" \"${1:name}\" {",
      "\tname\t\t\t = \"${1}\"",
      "\tavailability_zone  = \"us-east-1b # Must be in us-east-1\"",
      "\tblueprint_id\t = \"${2:foo}\"",
      "\tbundle_id\t\t= \"${3:bar}\"",
      "\tkey_pair_name\t= \"\"",
      "\tuser_data\t\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLightsailInstance"
  },
  "srAwsLightsailKeyPair": {
    "prefix": "srAwsLightsailKeyPair",
    "body": [
      "resource \"aws_lightsail_key_pair\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLightsailKeyPair"
  },
  "frAwsLightsailKeyPair": {
    "prefix": "frAwsLightsailKeyPair",
    "body": [
      "resource \"aws_lightsail_key_pair\" \"${1:name}\" {",
      "\tname\t\t\t\t= \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix\t\t = \"\"",
      "\tpgp_key\t\t\t = \"\"",
      "\tpublic_key\t\t\t= \"${file(\"~/.ssh/id_rsa.pub\")}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLightsailKeyPair"
  },
  "srAwsLightsailStaticIp": {
    "prefix": "srAwsLightsailStaticIp",
    "body": [
      "resource \"aws_lightsail_static_ip\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLightsailStaticIp"
  },
  "frAwsLightsailStaticIp": {
    "prefix": "frAwsLightsailStaticIp",
    "body": [
      "resource \"aws_lightsail_static_ip\" \"${1:name}\" {",
      "\tname\t\t = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLightsailStaticIp"
  },
  "srAwsLightsailStaticIpAttachment": {
    "prefix": "srAwsLightsailStaticIpAttachment",
    "body": [
      "resource \"aws_lightsail_static_ip_attachment\" \"${1:name}\" {",
      "\tstatic_ip_name = \"${aws_lightsail_static_ip.${2:foo}.name}\"",
      "\tinstance_name  = \"${aws_lightsail_instance.${3:bar}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLightsailStaticIpAttachment"
  },
  "frAwsLightsailStaticIpAttachment": {
    "prefix": "frAwsLightsailStaticIpAttachment",
    "body": [
      "resource \"aws_lightsail_static_ip_attachment\" \"${1:name}\" {",
      "\tstatic_ip_name = \"${aws_lightsail_static_ip.${2:foo}.name}\"",
      "\tinstance_name  = \"${aws_lightsail_instance.${3:bar}.name}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLightsailStaticIpAttachment"
  },
  "srAwsLoadBalancerBackendServerPolicies": {
    "prefix": "srAwsLoadBalancerBackendServerPolicies",
    "body": [
      "resource \"aws_load_balancer_backend_server_policies\" \"${1:name}\" {",
      "\tload_balancer_name = \"${aws_elb.${2:foo}.name}\"",
      "\tinstance_port\t= 1",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLoadBalancerBackendServerPolicies"
  },
  "frAwsLoadBalancerBackendServerPolicies": {
    "prefix": "frAwsLoadBalancerBackendServerPolicies",
    "body": [
      "resource \"aws_load_balancer_backend_server_policies\" \"${1:name}\" {",
      "\tload_balancer_name = \"${aws_elb.${2:foo}.name}\"",
      "\tinstance_port\t= 1",
      "\tpolicy_names\t = [\"${aws_load_balancer_policy.${3:bar}.policy_name}\"]",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLoadBalancerBackendServerPolicies"
  },
  "srAwsLoadBalancerListenerPolicies": {
    "prefix": "srAwsLoadBalancerListenerPolicies",
    "body": [
      "resource \"aws_load_balancer_listener_policies\" \"${1:name}\" {",
      "\tload_balancer_name = \"${aws_elb.${2:foo}.name}\"",
      "\tload_balancer_port = 1",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLoadBalancerListenerPolicies"
  },
  "frAwsLoadBalancerListenerPolicies": {
    "prefix": "frAwsLoadBalancerListenerPolicies",
    "body": [
      "resource \"aws_load_balancer_listener_policies\" \"${1:name}\" {",
      "\tload_balancer_name = \"${aws_elb.${2:foo}.name}\"",
      "\tload_balancer_port = 1",
      "\tpolicy_names\t = [\"${aws_load_balancer_policy.${3:bar}.policy_name}\"]",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLoadBalancerListenerPolicies"
  },
  "srAwsLoadBalancerPolicy": {
    "prefix": "srAwsLoadBalancerPolicy",
    "body": [
      "resource \"aws_load_balancer_policy\" \"${1:name}\" {",
      "\tload_balancer_name = \"${aws_elb.${2:foo}.name}\"",
      "\tpolicy_name\t\t= \"${1}\"",
      "\tpolicy_type_name   = \"${3:bar}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsLoadBalancerPolicy"
  },
  "frAwsLoadBalancerPolicy": {
    "prefix": "frAwsLoadBalancerPolicy",
    "body": [
      "resource \"aws_load_balancer_policy\" \"${1:name}\" {",
      "\tload_balancer_name = \"${aws_elb.${2:foo}.name}\"",
      "\tpolicy_name\t\t= \"${1}\"",
      "\tpolicy_type_name   = \"${3:bar}\"",
      "\tpolicy_attribute {",
      "\t\tname  = \"\"",
      "\t\tvalue = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsLoadBalancerPolicy"
  },
  "srAwsMainRouteTableAssociation": {
    "prefix": "srAwsMainRouteTableAssociation",
    "body": [
      "resource \"aws_main_route_table_association\" \"${1:name}\" {",
      "\tvpc_id\t\t = \"${aws_vpc.${2:foo}.id}\"",
      "\troute_table_id = \"${aws_route_table.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsMainRouteTableAssociation"
  },
  "frAwsMainRouteTableAssociation": {
    "prefix": "frAwsMainRouteTableAssociation",
    "body": [
      "resource \"aws_main_route_table_association\" \"${1:name}\" {",
      "\tvpc_id\t\t = \"${aws_vpc.${2:foo}.id}\"",
      "\troute_table_id = \"${aws_route_table.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsMainRouteTableAssociation"
  },
  "srAwsNatGateway": {
    "prefix": "srAwsNatGateway",
    "body": [
      "resource \"aws_nat_gateway\" \"${1:name}\" {",
      "\tdepends_on\t= [\"aws_internet_gateway.${2:foo}\"]",
      "\tallocation_id = \"${aws_eip.${3:bar}.id}\"",
      "\tsubnet_id\t = \"${aws_subnet.${4:baz}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsNatGateway"
  },
  "frAwsNatGateway": {
    "prefix": "frAwsNatGateway",
    "body": [
      "resource \"aws_nat_gateway\" \"${1:name}\" {",
      "\tdepends_on\t\t = [\"aws_internet_gateway.${2:foo}\"]",
      "\tallocation_id\t\t= \"${aws_eip.${3:bar}.id}\"",
      "\tsubnet_id\t\t\t= \"${aws_subnet.${4:baz}.id}\"",
      "\tnetwork_interface_id = \"\"",
      "\tprivate_ip\t\t = \"\"",
      "\tpublic_ip\t\t\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsNatGateway"
  },
  "srAwsNetworkAcl": {
    "prefix": "srAwsNetworkAcl",
    "body": [
      "resource \"aws_network_acl\" \"${1:name}\" {",
      "\tvpc_id  = \"${aws_vpc.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsNetworkAcl"
  },
  "frAwsNetworkAcl": {
    "prefix": "frAwsNetworkAcl",
    "body": [
      "resource \"aws_network_acl\" \"${1:name}\" {",
      "\tvpc_id\t = \"${aws_vpc.${2:foo}.id}\"",
      "\t#subnet_id  = \"DEPRECATED\"",
      "\tsubnet_ids = [\"${aws_subnet.${3:bar}.id}\"]",
      "\tingress {",
      "\t\tfrom_port\t = 1",
      "\t\tto_port\t\t = 1",
      "\t\trule_no\t\t = 1",
      "\t\taction\t\t= \"\"",
      "\t\tprotocol\t\t= \"\"",
      "\t\tcidr_block\t= \"\"",
      "\t\tipv6_cidr_block = \"\"",
      "\t\ticmp_type\t = 0",
      "\t\ticmp_code\t = 0",
      "\t}",
      "\tegress {",
      "\t\tfrom_port\t = 1",
      "\t\tto_port\t\t = 1",
      "\t\trule_no\t\t = 1",
      "\t\taction\t\t= \"\"",
      "\t\tprotocol\t\t= \"\"",
      "\t\tcidr_block\t= \"\"",
      "\t\tipv6_cidr_block = \"\"",
      "\t\ticmp_type\t = 0",
      "\t\ticmp_code\t = 0",
      "\t}",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsNetworkAcl"
  },
  "srAwsNetworkAclRule": {
    "prefix": "srAwsNetworkAclRule",
    "body": [
      "resource \"aws_network_acl_rule\" \"${1:name}\" {",
      "\tnetwork_acl_id = \"${aws_network_acl.${2:foo}.id}\"",
      "\trule_number\t= 1",
      "\tprotocol\t = \"\"",
      "\trule_action\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsNetworkAclRule"
  },
  "frAwsNetworkAclRule": {
    "prefix": "frAwsNetworkAclRule",
    "body": [
      "resource \"aws_network_acl_rule\" \"${1:name}\" {",
      "\tnetwork_acl_id  = \"${aws_network_acl.${2:foo}.id}\"",
      "\trule_number\t = 1",
      "\tprotocol\t\t= \"\"",
      "\trule_action\t = \"\"",
      "\tegress\t\t= true|false",
      "\tcidr_block\t= \"\"",
      "\tipv6_cidr_block = \"\"",
      "\tfrom_port\t = 1",
      "\tto_port\t\t = 1",
      "\ticmp_type\t = \"\"",
      "\ticmp_code\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsNetworkAclRule"
  },
  "srAwsNetworkInterface": {
    "prefix": "srAwsNetworkInterface",
    "body": [
      "resource \"aws_network_interface\" \"${1:name}\" {",
      "\tsubnet_id = \"${aws_subnet.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsNetworkInterface"
  },
  "frAwsNetworkInterface": {
    "prefix": "frAwsNetworkInterface",
    "body": [
      "resource \"aws_network_interface\" \"${1:name}\" {",
      "\tsubnet_id\t\t = \"${aws_subnet.${2:foo}.id}\"",
      "\tprivate_ips\t = [\"\"]",
      "\tsecurity_groups   = [\"${aws_security_group.${3:bar}.id}\"]",
      "\tsource_dest_check = true|false",
      "\tdescription\t = \"\"",
      "\tattachment {",
      "\t\tinstance\t= \"${aws_instance.${4:baz}.id}\"",
      "\t\tdevice_index  = 1",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsNetworkInterface"
  },
  "srAwsOpsworksApplication": {
    "prefix": "srAwsOpsworksApplication",
    "body": [
      "resource \"aws_opsworks_application\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\ttype\t = \"${2:foo}\"",
      "\tstack_id = \"${aws_opsworks_stack.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksApplication"
  },
  "frAwsOpsworksApplication": {
    "prefix": "frAwsOpsworksApplication",
    "body": [
      "resource \"aws_opsworks_application\" \"${1:name}\" {",
      "\tname\t\t\t\t\t= \"${1}\"",
      "\ttype\t\t\t\t\t= \"${2:foo}\"",
      "\tstack_id\t\t\t\t= \"${aws_opsworks_stack.${3:bar}.id}\"",
      "\tshort_name\t\t\t\t= \"\"",
      "\tdocument_root\t\t\t = \"\"",
      "\trails_env\t\t\t\t = \"\"",
      "\tauto_bundle_on_deploy\t = \"\"",
      "\taws_flow_ruby_settings\t= \"\"",
      "\tapp_source {",
      "\t\ttype\t = \"git\"",
      "\t\turl\t= \"https://github.com/example.git\"",
      "\t\tusername = \"\"",
      "\t\tpassword = \"\"",
      "\t\trevision = \"master\"",
      "\t\tssh_key  = \"\"",
      "\t}",
      "\tdata_source_type\t\t= \"\"",
      "\tdata_source_database_name = \"\"",
      "\tdata_source_arn\t\t = \"\"",
      "\tdescription\t\t\t = \"\"",
      "\tdomains\t\t\t\t = [\"\"]",
      "\tenvironment {",
      "\t\tkey\t= \"\"",
      "\t\tvalue  = \"\"",
      "\t\tsecure = true|false",
      "\t}",
      "\tenable_ssl\t\t\t\t= true|false",
      "\tssl_configuration {",
      "\t\tcertificate = \"${file(\"./foobar.crt\")}\"",
      "\t\tprivate_key = \"${file(\"./foobar.key\")}\"",
      "\t\tchain\t = \"${file(\"./foobar.ca\")}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksApplication"
  },
  "srAwsOpsworksGangliaLayer": {
    "prefix": "srAwsOpsworksGangliaLayer",
    "body": [
      "resource \"aws_opsworks_ganglia_layer\" \"${1:name}\" {",
      "\tpassword = \"${2:foo}\"",
      "\tstack_id = \"${aws_opsworks_stack.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksGangliaLayer"
  },
  "frAwsOpsworksGangliaLayer": {
    "prefix": "frAwsOpsworksGangliaLayer",
    "body": [
      "resource \"aws_opsworks_ganglia_layer\" \"${1:name}\" {",
      "\tpassword\t\t\t\t\t= \"${2:foo}\"",
      "\tstack_id\t\t\t\t\t= \"${aws_opsworks_stack.${3:bar}.id}\"",
      "\tname\t\t\t\t\t\t= \"${1}\"",
      "\turl\t\t\t\t\t\t = \"\"",
      "\tusername\t\t\t\t\t= \"\"",
      "\tauto_assign_elastic_ips\t = true|false",
      "\tauto_assign_public_ips\t= true|false",
      "\tcustom_instance_profile_arn = \"\"",
      "\telastic_load_balancer\t = \"\"",
      "\tcustom_setup_recipes\t\t= [\"\"]",
      "\tcustom_configure_recipes\t= [\"\"]",
      "\tcustom_deploy_recipes\t = [\"\"]",
      "\tcustom_undeploy_recipes\t = [\"\"]",
      "\tcustom_shutdown_recipes\t = [\"\"]",
      "\tcustom_security_group_ids   = [\"\"]",
      "\tcustom_json\t\t\t\t = \"\"",
      "\tauto_healing\t\t\t\t= true|false",
      "\tinstall_updates_on_boot\t = true|false",
      "\tinstance_shutdown_timeout   = 120",
      "\tdrain_elb_on_shutdown\t = true|false",
      "\tsystem_packages\t\t\t = [\"\"]",
      "\tuse_ebs_optimized_instances = true|false",
      "\tebs_volume {",
      "\t\tiops\t\t\t= 0",
      "\t\tmount_point\t = \"\"",
      "\t\tnumber_of_disks = 1",
      "\t\traid_level\t= \"\"",
      "\t\tsize\t\t\t= 1",
      "\t\ttype\t\t\t= \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksGangliaLayer"
  },
  "srAwsOpsworksHaproxyLayer": {
    "prefix": "srAwsOpsworksHaproxyLayer",
    "body": [
      "resource \"aws_opsworks_haproxy_layer\" \"${1:name}\" {",
      "\tstats_password = \"${2:foo}\"",
      "\tstack_id\t = \"${aws_opsworks_stack.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksHaproxyLayer"
  },
  "frAwsOpsworksHaproxyLayer": {
    "prefix": "frAwsOpsworksHaproxyLayer",
    "body": [
      "resource \"aws_opsworks_haproxy_layer\" \"${1:name}\" {",
      "\tstats_password\t\t\t= \"${2:foo}\"",
      "\tstack_id\t\t\t\t\t= \"${aws_opsworks_stack.${3:bar}.id}\"",
      "\tstats_enabled\t\t\t = true|false",
      "\tstats_url\t\t\t\t = \"/haproxy?stats\"",
      "\tstats_user\t\t\t\t= \"opsworks\"",
      "\thealthcheck_url\t\t\t = \"/\"",
      "\thealthcheck_method\t\t= \"OPTIONS\"",
      "\tname\t\t\t\t\t\t= \"${1}\"",
      "\tauto_assign_elastic_ips\t = true|false",
      "\tauto_assign_public_ips\t= true|false",
      "\tcustom_instance_profile_arn = \"\"",
      "\telastic_load_balancer\t = \"\"",
      "\tcustom_setup_recipes\t\t= [\"\"]",
      "\tcustom_configure_recipes\t= [\"\"]",
      "\tcustom_deploy_recipes\t = [\"\"]",
      "\tcustom_undeploy_recipes\t = [\"\"]",
      "\tcustom_shutdown_recipes\t = [\"\"]",
      "\tcustom_security_group_ids   = [\"\"]",
      "\tcustom_json\t\t\t\t = \"\"",
      "\tauto_healing\t\t\t\t= true|false",
      "\tinstall_updates_on_boot\t = true|false",
      "\tinstance_shutdown_timeout   = 120",
      "\tdrain_elb_on_shutdown\t = true|false",
      "\tsystem_packages\t\t\t = [\"\"]",
      "\tuse_ebs_optimized_instances = true|false",
      "\tebs_volume {",
      "\t\tiops\t\t\t= 0",
      "\t\tmount_point\t = \"\"",
      "\t\tnumber_of_disks = 1",
      "\t\traid_level\t= \"\"",
      "\t\tsize\t\t\t= 1",
      "\t\ttype\t\t\t= \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksHaproxyLayer"
  },
  "srAwsOpsworksInstance": {
    "prefix": "srAwsOpsworksInstance",
    "body": [
      "resource \"aws_opsworks_instance\" \"${1:name}\" {",
      "\tlayer_ids\t = [\"${aws_opsworks_custom_layer.${2:foo}.id}\"]",
      "\tstack_id\t= \"${aws_opsworks_stack.${3:bar}.id}\"",
      "\tinstance_type = \"${4:baz}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksInstance"
  },
  "frAwsOpsworksInstance": {
    "prefix": "frAwsOpsworksInstance",
    "body": [
      "resource \"aws_opsworks_instance\" \"${1:name}\" {",
      "\tlayer_ids\t\t\t\t\t= [\"${aws_opsworks_custom_layer.${2:foo}.id}\"]",
      "\tstack_id\t\t\t\t\t = \"${aws_opsworks_stack.${3:bar}.id}\"",
      "\tinstance_type\t\t\t\t= \"${4:baz}\"",
      "\tagent_version\t\t\t\t= \"\"",
      "\tami_id\t\t\t\t\t = \"${data.aws_ami.${5:foo}.id}\"",
      "\tarchitecture\t\t\t\t = \"x86_64\"",
      "\tauto_scaling_type\t\t\t= \"\"",
      "\tavailability_zone\t\t\t= \"\"",
      "\tcreated_at\t\t\t\t = \"\"",
      "\tdelete_ebs\t\t\t\t = true|false",
      "\tdelete_eip\t\t\t\t = true|false",
      "\tebs_optimized\t\t\t\t= true|false",
      "\tec2_instance_id\t\t\t= \"\"",
      "\tecs_cluster_arn\t\t\t= \"\"",
      "\telastic_ip\t\t\t\t = \"\"",
      "\thostname\t\t\t\t\t = \"\"",
      "\tinfrastructure_class\t\t = \"\"",
      "\tinstall_updates_on_boot\t= true|false",
      "\tinstance_profile_arn\t\t = \"\"",
      "\tinstance_type\t\t\t\t= \"\"",
      "\tlast_service_error_id\t\t= \"\"",
      "\tos\t\t\t\t\t\t = \"\"",
      "\tplatform\t\t\t\t\t = \"\"",
      "\tprivate_dns\t\t\t\t= \"\"",
      "\tprivate_ip\t\t\t\t = \"\"",
      "\tpublic_dns\t\t\t\t = \"\"",
      "\tpublic_ip\t\t\t\t\t= \"\"",
      "\tregistered_by\t\t\t\t= \"\"",
      "\treported_agent_version\t = \"\"",
      "\treported_os_family\t\t = \"\"",
      "\treported_os_name\t\t\t = \"\"",
      "\treported_os_version\t\t= \"\"",
      "\troot_device_type\t\t\t = \"\"",
      "\troot_device_volume_id\t\t= \"\"",
      "\tsecurity_group_ids\t\t = [\"\"]",
      "\tssh_host_dsa_key_fingerprint = \"\"",
      "\tssh_host_rsa_key_fingerprint = \"\"",
      "\tssh_key_name\t\t\t\t = \"\"",
      "\tstate\t\t\t\t\t\t= \"running\"|\"stopped\"",
      "\tstatus\t\t\t\t\t = \"\"",
      "\tsubnet_id\t\t\t\t\t= \"\"",
      "\ttenancy\t\t\t\t\t= \"\"",
      "\tvirtualization_type\t\t= \"\"",
      "\tebs_block_device {",
      "\t\tdelete_on_termination = true|false",
      "\t\tdevice_name\t\t = \"\"",
      "\t\tiops\t\t\t\t= 1",
      "\t\tsnapshot_id\t\t = \"\"",
      "\t\tvolume_size\t\t = 1",
      "\t\tvolume_type\t\t = \"\"",
      "\t}",
      "\tephemeral_block_device {",
      "\t\tdevice_name  = \"\"",
      "\t\tvirtual_name = \"\"",
      "\t}",
      "\troot_block_device {",
      "\t\tdelete_on_termination = true|false",
      "\t\tiops\t\t\t\t= 1",
      "\t\tvolume_size\t\t = 1",
      "\t\tvolume_type\t\t = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksInstance"
  },
  "srAwsOpsworksJavaAppLayer": {
    "prefix": "srAwsOpsworksJavaAppLayer",
    "body": [
      "resource \"aws_opsworks_java_app_layer\" \"${1:name}\" {",
      "\tstack_id = \"${aws_opsworks_stack.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksJavaAppLayer"
  },
  "frAwsOpsworksJavaAppLayer": {
    "prefix": "frAwsOpsworksJavaAppLayer",
    "body": [
      "resource \"aws_opsworks_java_app_layer\" \"${1:name}\" {",
      "\tstack_id\t\t\t\t\t= \"${aws_opsworks_stack.${2:foo}.id}\"",
      "\tjvm_type\t\t\t\t\t= \"\"",
      "\tjvm_version\t\t\t\t = \"\"",
      "\tjvm_options\t\t\t\t = \"\"",
      "\tapp_server\t\t\t\t= \"\"",
      "\tapp_server_version\t\t= \"\"",
      "\tname\t\t\t\t\t\t= \"${1}\"",
      "\tauto_assign_elastic_ips\t = true|false",
      "\tauto_assign_public_ips\t= true|false",
      "\tcustom_instance_profile_arn = \"\"",
      "\telastic_load_balancer\t = \"\"",
      "\tcustom_setup_recipes\t\t= [\"\"]",
      "\tcustom_configure_recipes\t= [\"\"]",
      "\tcustom_deploy_recipes\t = [\"\"]",
      "\tcustom_undeploy_recipes\t = [\"\"]",
      "\tcustom_shutdown_recipes\t = [\"\"]",
      "\tcustom_security_group_ids   = [\"\"]",
      "\tcustom_json\t\t\t\t = \"\"",
      "\tauto_healing\t\t\t\t= true|false",
      "\tinstall_updates_on_boot\t = true|false",
      "\tinstance_shutdown_timeout   = 120",
      "\tdrain_elb_on_shutdown\t = true|false",
      "\tsystem_packages\t\t\t = [\"\"]",
      "\tuse_ebs_optimized_instances = true|false",
      "\tebs_volume {",
      "\t\tiops\t\t\t= 0",
      "\t\tmount_point\t = \"\"",
      "\t\tnumber_of_disks = 1",
      "\t\traid_level\t= \"\"",
      "\t\tsize\t\t\t= 1",
      "\t\ttype\t\t\t= \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksJavaAppLayer"
  },
  "srAwsOpsworksMemcachedLayer": {
    "prefix": "srAwsOpsworksMemcachedLayer",
    "body": [
      "resource \"aws_opsworks_memcached_layer\" \"${1:name}\" {",
      "\tstack_id = \"${aws_opsworks_stack.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksMemcachedLayer"
  },
  "frAwsOpsworksMemcachedLayer": {
    "prefix": "frAwsOpsworksMemcachedLayer",
    "body": [
      "resource \"aws_opsworks_memcached_layer\" \"${1:name}\" {",
      "\tstack_id\t\t\t\t\t= \"${aws_opsworks_stack.${2:foo}.id}\"",
      "\tallocated_memory\t\t\t= 1",
      "\tname\t\t\t\t\t\t= \"${1}\"",
      "\tauto_assign_elastic_ips\t = true|false",
      "\tauto_assign_public_ips\t= true|false",
      "\tcustom_instance_profile_arn = \"\"",
      "\telastic_load_balancer\t = \"\"",
      "\tcustom_setup_recipes\t\t= [\"\"]",
      "\tcustom_configure_recipes\t= [\"\"]",
      "\tcustom_deploy_recipes\t = [\"\"]",
      "\tcustom_undeploy_recipes\t = [\"\"]",
      "\tcustom_shutdown_recipes\t = [\"\"]",
      "\tcustom_security_group_ids   = [\"\"]",
      "\tcustom_json\t\t\t\t = \"\"",
      "\tauto_healing\t\t\t\t= true|false",
      "\tinstall_updates_on_boot\t = true|false",
      "\tinstance_shutdown_timeout   = 120",
      "\tdrain_elb_on_shutdown\t = true|false",
      "\tsystem_packages\t\t\t = [\"\"]",
      "\tuse_ebs_optimized_instances = true|false",
      "\tebs_volume {",
      "\t\tiops\t\t\t= 0",
      "\t\tmount_point\t = \"\"",
      "\t\tnumber_of_disks = 1",
      "\t\traid_level\t= \"\"",
      "\t\tsize\t\t\t= 1",
      "\t\ttype\t\t\t= \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksMemcachedLayer"
  },
  "srAwsOpsworksMysqlLayer": {
    "prefix": "srAwsOpsworksMysqlLayer",
    "body": [
      "resource \"aws_opsworks_mysql_layer\" \"${1:name}\" {",
      "\tstack_id = \"${aws_opsworks_stack.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksMysqlLayer"
  },
  "frAwsOpsworksMysqlLayer": {
    "prefix": "frAwsOpsworksMysqlLayer",
    "body": [
      "resource \"aws_opsworks_mysql_layer\" \"${1:name}\" {",
      "\tstack_id\t\t\t\t\t = \"${aws_opsworks_stack.${2:foo}.id}\"",
      "\troot_password\t\t\t\t= \"\"",
      "\troot_password_on_all_instances = true|false",
      "\tname\t\t\t\t\t\t = \"${1}\"",
      "\tauto_assign_elastic_ips\t\t= true|false",
      "\tauto_assign_public_ips\t\t = true|false",
      "\tcustom_instance_profile_arn\t= \"\"",
      "\telastic_load_balancer\t\t= \"\"",
      "\tcustom_setup_recipes\t\t = [\"\"]",
      "\tcustom_configure_recipes\t = [\"\"]",
      "\tcustom_deploy_recipes\t\t= [\"\"]",
      "\tcustom_undeploy_recipes\t\t= [\"\"]",
      "\tcustom_shutdown_recipes\t\t= [\"\"]",
      "\tcustom_security_group_ids\t= [\"\"]",
      "\tcustom_json\t\t\t\t\t= \"\"",
      "\tauto_healing\t\t\t\t = true|false",
      "\tinstall_updates_on_boot\t\t= true|false",
      "\tinstance_shutdown_timeout\t= 120",
      "\tdrain_elb_on_shutdown\t\t= true|false",
      "\tsystem_packages\t\t\t\t= [\"\"]",
      "\tuse_ebs_optimized_instances\t= true|false",
      "\tebs_volume {",
      "\t\tiops\t\t\t= 0",
      "\t\tmount_point\t = \"\"",
      "\t\tnumber_of_disks = 1",
      "\t\traid_level\t= \"\"",
      "\t\tsize\t\t\t= 1",
      "\t\ttype\t\t\t= \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksMysqlLayer"
  },
  "srAwsOpsworksNodejsAppLayer": {
    "prefix": "srAwsOpsworksNodejsAppLayer",
    "body": [
      "resource \"aws_opsworks_nodejs_app_layer\" \"${1:name}\" {",
      "\tstack_id = \"${aws_opsworks_stack.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksNodejsAppLayer"
  },
  "frAwsOpsworksNodejsAppLayer": {
    "prefix": "frAwsOpsworksNodejsAppLayer",
    "body": [
      "resource \"aws_opsworks_nodejs_app_layer\" \"${1:name}\" {",
      "\tstack_id\t\t\t\t\t= \"${aws_opsworks_stack.${2:foo}.id}\"",
      "\tnodejs_version\t\t\t= \"\"",
      "\tname\t\t\t\t\t\t= \"${1}\"",
      "\tauto_assign_elastic_ips\t = true|false",
      "\tauto_assign_public_ips\t= true|false",
      "\tcustom_instance_profile_arn = \"\"",
      "\telastic_load_balancer\t = \"\"",
      "\tcustom_setup_recipes\t\t= [\"\"]",
      "\tcustom_configure_recipes\t= [\"\"]",
      "\tcustom_deploy_recipes\t = [\"\"]",
      "\tcustom_undeploy_recipes\t = [\"\"]",
      "\tcustom_shutdown_recipes\t = [\"\"]",
      "\tcustom_security_group_ids   = [\"\"]",
      "\tcustom_json\t\t\t\t = \"\"",
      "\tauto_healing\t\t\t\t= true|false",
      "\tinstall_updates_on_boot\t = true|false",
      "\tinstance_shutdown_timeout   = 120",
      "\tdrain_elb_on_shutdown\t = true|false",
      "\tsystem_packages\t\t\t = [\"\"]",
      "\tuse_ebs_optimized_instances = true|false",
      "\tebs_volume {",
      "\t\tiops\t\t\t= 0",
      "\t\tmount_point\t = \"\"",
      "\t\tnumber_of_disks = 1",
      "\t\traid_level\t= \"\"",
      "\t\tsize\t\t\t= 1",
      "\t\ttype\t\t\t= \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksNodejsAppLayer"
  },
  "srAwsOpsworksPermission": {
    "prefix": "srAwsOpsworksPermission",
    "body": [
      "resource \"aws_opsworks_permission\" \"${1:name}\" {",
      "\tstack_id = \"${aws_opsworks_stack.${2:foo}.id}\"",
      "\tuser_arn = \"${aws_iam_user.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksPermission"
  },
  "frAwsOpsworksPermission": {
    "prefix": "frAwsOpsworksPermission",
    "body": [
      "resource \"aws_opsworks_permission\" \"${1:name}\" {",
      "\tstack_id   = \"${aws_opsworks_stack.${2:foo}.id}\"",
      "\tuser_arn   = \"${aws_iam_user.${3:bar}.arn}\"",
      "\tallow_ssh  = true|false",
      "\tallow_sudo = true|false",
      "\tlevel\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksPermission"
  },
  "srAwsOpsworksRailsAppLayer": {
    "prefix": "srAwsOpsworksRailsAppLayer",
    "body": [
      "resource \"aws_opsworks_rails_app_layer\" \"${1:name}\" {",
      "\tstack_id = \"${aws_opsworks_stack.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksRailsAppLayer"
  },
  "frAwsOpsworksRailsAppLayer": {
    "prefix": "frAwsOpsworksRailsAppLayer",
    "body": [
      "resource \"aws_opsworks_rails_app_layer\" \"${1:name}\" {",
      "\tstack_id\t\t\t\t\t= \"${aws_opsworks_stack.${2:foo}.id}\"",
      "\truby_version\t\t\t\t= \"\"",
      "\tapp_server\t\t\t\t= \"\"",
      "\tpassenger_version\t\t = \"\"",
      "\trubygems_version\t\t\t= \"\"",
      "\tmanage_bundler\t\t\t= true|false",
      "\tbundler_version\t\t\t = \"\"",
      "\tname\t\t\t\t\t\t= \"${1}\"",
      "\tauto_assign_elastic_ips\t = true|false",
      "\tauto_assign_public_ips\t= true|false",
      "\tcustom_instance_profile_arn = \"\"",
      "\telastic_load_balancer\t = \"\"",
      "\tcustom_setup_recipes\t\t= [\"\"]",
      "\tcustom_configure_recipes\t= [\"\"]",
      "\tcustom_deploy_recipes\t = [\"\"]",
      "\tcustom_undeploy_recipes\t = [\"\"]",
      "\tcustom_shutdown_recipes\t = [\"\"]",
      "\tcustom_security_group_ids   = [\"\"]",
      "\tcustom_json\t\t\t\t = \"\"",
      "\tauto_healing\t\t\t\t= true|false",
      "\tinstall_updates_on_boot\t = true|false",
      "\tinstance_shutdown_timeout   = 120",
      "\tdrain_elb_on_shutdown\t = true|false",
      "\tsystem_packages\t\t\t = [\"\"]",
      "\tuse_ebs_optimized_instances = true|false",
      "\tebs_volume {",
      "\t\tiops\t\t\t= 0",
      "\t\tmount_point\t = \"\"",
      "\t\tnumber_of_disks = 1",
      "\t\traid_level\t= \"\"",
      "\t\tsize\t\t\t= 1",
      "\t\ttype\t\t\t= \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksRailsAppLayer"
  },
  "srAwsOpsworksRdsDbInstance": {
    "prefix": "srAwsOpsworksRdsDbInstance",
    "body": [
      "resource \"aws_opsworks_rds_db_instance\" \"${1:name}\" {",
      "\tstack_id\t\t\t= \"${aws_opsworks_stack.${2:foo}.id}\"",
      "\trds_db_instance_arn = \"${aws_db_instance.${3:bar}.arn}\"",
      "\tdb_user\t\t\t = \"${4:baz}\"",
      "\tdb_password\t\t = \"${5:qux}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksRdsDbInstance"
  },
  "frAwsOpsworksRdsDbInstance": {
    "prefix": "frAwsOpsworksRdsDbInstance",
    "body": [
      "resource \"aws_opsworks_rds_db_instance\" \"${1:name}\" {",
      "\tstack_id\t\t\t= \"${aws_opsworks_stack.${2:foo}.id}\"",
      "\trds_db_instance_arn = \"${aws_db_instance.${3:bar}.arn}\"",
      "\tdb_user\t\t\t = \"${4:baz}\"",
      "\tdb_password\t\t = \"${5:qux}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksRdsDbInstance"
  },
  "srAwsOpsworksStack": {
    "prefix": "srAwsOpsworksStack",
    "body": [
      "resource \"aws_opsworks_stack\" \"${1:name}\" {",
      "\tname\t\t\t\t\t\t = \"${1}\"",
      "\tregion\t\t\t\t\t = \"\"",
      "\tservice_role_arn\t\t\t = \"${aws_iam_role.${2:foo}.arn}\"",
      "\tdefault_instance_profile_arn = \"${aws_iam_instance_profile.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksStack"
  },
  "frAwsOpsworksStack": {
    "prefix": "frAwsOpsworksStack",
    "body": [
      "resource \"aws_opsworks_stack\" \"${1:name}\" {",
      "\tname\t\t\t\t\t\t= \"${1}\"",
      "\tregion\t\t\t\t\t\t= \"\"",
      "\tservice_role_arn\t\t\t= \"${aws_iam_role.${2:foo}.arn}\"",
      "\tdefault_instance_profile_arn  = \"${aws_iam_instance_profile.${3:bar}.arn}\"",
      "\tagent_version\t\t\t\t = \"\"",
      "\tcolor\t\t\t\t\t\t = \"\"",
      "\tconfiguration_manager_name\t= \"\"",
      "\tconfiguration_manager_version = \"\"",
      "\tmanage_berkshelf\t\t\t= true|false",
      "\tberkshelf_version\t\t\t = \"\"",
      "\tcustom_cookbooks_source {",
      "\t\ttype\t = \"\"",
      "\t\turl\t= \"\"",
      "\t\tusername = \"\"",
      "\t\tpassword = \"\"",
      "\t\trevision = \"\"",
      "\t\tssh_key  = \"\"",
      "\t}",
      "\tcustom_json\t\t\t\t = \"\"",
      "\tdefault_availability_zone\t = \"\"",
      "\tdefault_os\t\t\t\t\t= \"\"",
      "\tdefault_root_device_type\t= \"\"",
      "\tdefault_ssh_key_name\t\t= \"\"",
      "\tdefault_subnet_id\t\t\t = \"\"",
      "\thostname_theme\t\t\t\t= \"\"",
      "\tuse_custom_cookbooks\t\t= true|false",
      "\tuse_opsworks_security_groups  = true|false",
      "\tvpc_id\t\t\t\t\t\t= \"${aws_vpc.${4:baz}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksStack"
  },
  "srAwsOpsworksUserProfile": {
    "prefix": "srAwsOpsworksUserProfile",
    "body": [
      "resource \"aws_opsworks_user_profile\" \"${1:name}\" {",
      "\tuser_arn\t = \"${aws_iam_user.${2:foo}.arn}\"",
      "\tssh_username = \"${3:bar}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsOpsworksUserProfile"
  },
  "frAwsOpsworksUserProfile": {
    "prefix": "frAwsOpsworksUserProfile",
    "body": [
      "resource \"aws_opsworks_user_profile\" \"${1:name}\" {",
      "\tuser_arn\t\t\t= \"${aws_iam_user.${2:foo}.arn}\"",
      "\tssh_username\t\t= \"${3:bar}\"",
      "\tallow_self_management = true|false",
      "\tssh_public_key\t\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsOpsworksUserProfile"
  },
  "srAwsPlacementGroup": {
    "prefix": "srAwsPlacementGroup",
    "body": [
      "resource \"aws_placement_group\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\tstrategy = \"${2:bar}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsPlacementGroup"
  },
  "frAwsPlacementGroup": {
    "prefix": "frAwsPlacementGroup",
    "body": [
      "resource \"aws_placement_group\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\tstrategy = \"${2:bar}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsPlacementGroup"
  },
  "srAwsProxyProtocolPolicy": {
    "prefix": "srAwsProxyProtocolPolicy",
    "body": [
      "resource \"aws_proxy_protocol_policy\" \"${1:name}\" {",
      "\tload_balancer  = \"${aws_elb.${2:foo}.name}\"",
      "\tinstance_ports = [\"${3:bar}\"]",
      "}",
      ""
    ],
    "description": "Snippet for srAwsProxyProtocolPolicy"
  },
  "frAwsProxyProtocolPolicy": {
    "prefix": "frAwsProxyProtocolPolicy",
    "body": [
      "resource \"aws_proxy_protocol_policy\" \"${1:name}\" {",
      "\tload_balancer  = \"${aws_elb.${2:foo}.name}\"",
      "\tinstance_ports = [\"${3:bar}\"]",
      "}",
      ""
    ],
    "description": "Snippet for frAwsProxyProtocolPolicy"
  },
  "srAwsRDSCluster": {
    "prefix": "srAwsRDSCluster",
    "body": [
      "resource \"aws_rds_cluster\" \"${1:name}\" {",
      "\tsnapshot_identifier = \"\"",
      "\tmaster_username\t = \"\" # Required unless snapshot_identifier set.",
      "\tmaster_password\t = \"\" # Requried unless snapshot_identifier set.",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRDSCluster"
  },
  "frAwsRDSCluster": {
    "prefix": "frAwsRDSCluster",
    "body": [
      "resource \"aws_rds_cluster\" \"${1:name}\" {",
      "\tavailability_zones\t\t\t= [\"\"]",
      "\tcluster_identifier\t\t\t= \"${1}\"",
      "\tcluster_identifier_prefix\t = \"\"",
      "\tcluster_members\t\t\t\t = [\"\"]",
      "\tdatabase_name\t\t\t\t = \"${1}\"",
      "\tdb_subnet_group_name\t\t\t= \"\"",
      "\tdb_cluster_parameter_group_name = \"\"",
      "\tstorage_encrypted\t\t\t = true|false",
      "\tfinal_snapshot_identifier\t = \"\"",
      "\tskip_final_snapshot\t\t\t = true|false",
      "\tmaster_username\t\t\t\t = \"\"",
      "\tmaster_password\t\t\t\t = \"\"",
      "\tsnapshot_identifier\t\t\t = \"\"",
      "\tport\t\t\t\t\t\t\t= 1",
      "\tapply_immediately\t\t\t = true|false",
      "\tvpc_security_group_ids\t\t= [\"\"]",
      "\tpreferred_backup_window\t\t = \"\"",
      "\tpreferred_maintenance_window\t= \"\"",
      "\tbackup_retention_period\t\t = 1",
      "\tkms_key_id\t\t\t\t\t= \"\"",
      "\treplication_source_identifier   = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRDSCluster"
  },
  "srAwsRDSClusterInstance": {
    "prefix": "srAwsRDSClusterInstance",
    "body": [
      "resource \"aws_rds_cluster_instance\" \"${1:name}\" {",
      "\tcluster_identifier = \"${aws_rds_cluster.${2:foo}.id}\"",
      "\tinstance_class\t = \"${3:bar}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRDSClusterInstance"
  },
  "frAwsRDSClusterInstance": {
    "prefix": "frAwsRDSClusterInstance",
    "body": [
      "resource \"aws_rds_cluster_instance\" \"${1:name}\" {",
      "\tcluster_identifier\t\t = \"${aws_rds_cluster.${2:foo}.id}\"",
      "\tinstance_class\t\t\t = \"${3:bar}\"",
      "\tidentifier\t\t\t\t = \"${1}\"",
      "\tidentifier_prefix\t\t\t= \"\"",
      "\tdb_subnet_group_name\t\t = \"\"",
      "\tpublicly_accessible\t\t= true|false",
      "\tdb_parameter_group_name\t= \"\"",
      "\tapply_immediately\t\t\t= true|false",
      "\tauto_minor_version_upgrade   = true|false",
      "\tmonitoring_role_arn\t\t= \"\"",
      "\tpreferred_maintenance_window = \"\"",
      "\tpreferred_backup_window\t= \"\"",
      "\tmonitoring_interval\t\t= 1",
      "\tpromotion_tier\t\t\t = 1",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRDSClusterInstance"
  },
  "srAwsRDSClusterParameterGroup": {
    "prefix": "srAwsRDSClusterParameterGroup",
    "body": [
      "resource \"aws_rds_cluster_parameter_group\" \"${1:name}\" {",
      "\tfamily = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRDSClusterParameterGroup"
  },
  "frAwsRDSClusterParameterGroup": {
    "prefix": "frAwsRDSClusterParameterGroup",
    "body": [
      "resource \"aws_rds_cluster_parameter_group\" \"${1:name}\" {",
      "\tfamily\t= \"\"",
      "\tname\t\t= \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix = \"\"",
      "\tdescription = \"\"",
      "\tparameter {",
      "\t\tname\t\t = \"\"",
      "\t\tvalue\t\t= \"\"",
      "\t\tapply_method = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRDSClusterParameterGroup"
  },
  "srAwsRedshiftCluster": {
    "prefix": "srAwsRedshiftCluster",
    "body": [
      "resource \"aws_redshift_cluster\" \"${1:name}\" {",
      "\tcluster_identifier  = \"${2:foo}\" # Must be lowercase",
      "\tnode_type\t\t = \"${3:bar}\"",
      "\tsnapshot_identifier = \"\"",
      "\tmaster_username\t = \"\" # Required unless snapshot_identifier set.",
      "\tmaster_password\t = \"\" # Required unless snapshot_identifier set.",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRedshiftCluster"
  },
  "frAwsRedshiftCluster": {
    "prefix": "frAwsRedshiftCluster",
    "body": [
      "resource \"aws_redshift_cluster\" \"${1:name}\" {",
      "\tcluster_identifier\t\t\t\t= \"${2:foo} # Must be lowercase\"",
      "\tnode_type\t\t\t\t\t\t = \"${3:bar}\"",
      "\tsnapshot_identifier\t\t\t\t = \"\"",
      "\tmaster_username\t\t\t\t\t = \"\" # Required unless snapshot_identifier set.",
      "\tmaster_password\t\t\t\t\t = \"\" # Required unless snapshot_identifier set.",
      "\tdatabase_name\t\t\t\t\t = \"dev\"",
      "\tcluster_type\t\t\t\t\t\t= \"\"",
      "\tcluster_security_groups\t\t\t = [\"\"]",
      "\tvpc_security_group_ids\t\t\t= [\"\"]",
      "\tcluster_subnet_group_name\t\t = \"\"",
      "\tavailability_zone\t\t\t\t = \"\"",
      "\tpreferred_maintenance_window\t\t= \"\"",
      "\tcluster_parameter_group_name\t\t= \"\"",
      "\tautomated_snapshot_retention_period = 1",
      "\tport\t\t\t\t\t\t\t\t= 1",
      "\tcluster_version\t\t\t\t\t = \"\"",
      "\tallow_version_upgrade\t\t\t = true|false",
      "\tnumber_of_nodes\t\t\t\t\t = 1",
      "\tpublicly_accessible\t\t\t\t = true|false",
      "\tencrypted\t\t\t\t\t\t = true|false",
      "\tenhanced_vpc_routing\t\t\t\t= true|false",
      "\tkms_key_id\t\t\t\t\t\t= \"\"",
      "\telastic_ip\t\t\t\t\t\t= \"\"",
      "\tfinal_snapshot_identifier\t\t = \"\"",
      "\tskip_final_snapshot\t\t\t\t = true|false",
      "\tcluster_public_key\t\t\t\t= \"\"",
      "\tcluster_revision_number\t\t\t = \"\"",
      "\tiam_roles\t\t\t\t\t\t = [\"\"]",
      "\tenable_logging\t\t\t\t\t= true|false",
      "\tbucket_name\t\t\t\t\t\t = \"\"",
      "\ts3_key_prefix\t\t\t\t\t = \"\"",
      "\tsnapshot_cluster_identifier\t\t = \"\"",
      "\towner_account\t\t\t\t\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRedshiftCluster"
  },
  "srAwsRedshiftParameterGroup": {
    "prefix": "srAwsRedshiftParameterGroup",
    "body": [
      "resource \"aws_redshift_parameter_group\" \"${1:name}\" {",
      "\tname   = \"${1}\"",
      "\tfamily = \"${2:foo}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRedshiftParameterGroup"
  },
  "frAwsRedshiftParameterGroup": {
    "prefix": "frAwsRedshiftParameterGroup",
    "body": [
      "resource \"aws_redshift_parameter_group\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tfamily = \"${2:foo}\"",
      "\tdescription = \"\"",
      "\tparameter {",
      "\t\tname  = \"\"",
      "\t\tvalue = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRedshiftParameterGroup"
  },
  "srAwsRedshiftSecurityGroup": {
    "prefix": "srAwsRedshiftSecurityGroup",
    "body": [
      "resource \"aws_redshift_security_group\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tingress {",
      "\t\tcidr = \"\"",
      "\t\tsecurity_group_name = \"\"",
      "\t\tsecurity_group_owner_id = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRedshiftSecurityGroup"
  },
  "frAwsRedshiftSecurityGroup": {
    "prefix": "frAwsRedshiftSecurityGroup",
    "body": [
      "resource \"aws_redshift_security_group\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tingress {",
      "\t\tcidr = \"\"",
      "\t\tsecurity_group_name = \"\"",
      "\t\tsecurity_group_owner_id = \"\"",
      "\t}",
      "\tdescription = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRedshiftSecurityGroup"
  },
  "srAwsRedshiftSubnetGroup": {
    "prefix": "srAwsRedshiftSubnetGroup",
    "body": [
      "resource \"aws_redshift_subnet_group\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tsubnet_ids = [\"${aws_subnet.${2:foo}.id}\"]",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRedshiftSubnetGroup"
  },
  "frAwsRedshiftSubnetGroup": {
    "prefix": "frAwsRedshiftSubnetGroup",
    "body": [
      "resource \"aws_redshift_subnet_group\" \"${1:name}\" {",
      "\tname\t\t= \"${1}\"",
      "\tsubnet_ids  = [\"${aws_subnet.${2:foo}.id}\"]",
      "\tdescription = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRedshiftSubnetGroup"
  },
  "srAwsRoute": {
    "prefix": "srAwsRoute",
    "body": [
      "\t# Use Route Table instead.",
      "resource \"aws_route\" \"${1:name}\" {",
      "\troute_table_id = \"rtb-XXX\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRoute"
  },
  "frAwsRoute": {
    "prefix": "frAwsRoute",
    "body": [
      "\t# Use Route Table instead.",
      "resource \"aws_route\" \"${1:name}\" {",
      "\troute_table_id = \"rtb-XXX\"",
      "\tdestination_cidr_block\t= \"\"",
      "\tdestination_ipv6_cidr_block = \"\"",
      "\tgateway_id = \"\"",
      "\tegress_only_gateway_id\t= \"\"",
      "\tnat_gateway_id = \"\"",
      "\tinstance_id = \"\"",
      "\tnetwork_interface_id\t\t= \"\"",
      "\tvpc_peering_connection_id   = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRoute"
  },
  "srAwsRoute53DelegationSet": {
    "prefix": "srAwsRoute53DelegationSet",
    "body": [
      "resource \"aws_route53_delegation_set\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRoute53DelegationSet"
  },
  "frAwsRoute53DelegationSet": {
    "prefix": "frAwsRoute53DelegationSet",
    "body": [
      "resource \"aws_route53_delegation_set\" \"${1:name}\" {",
      "\treference_name = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRoute53DelegationSet"
  },
  "srAwsRoute53HealthCheck": {
    "prefix": "srAwsRoute53HealthCheck",
    "body": [
      "resource \"aws_route53_health_check\" \"${1:name}\" {",
      "\ttype = \"${2:foo}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRoute53HealthCheck"
  },
  "frAwsRoute53HealthCheck": {
    "prefix": "frAwsRoute53HealthCheck",
    "body": [
      "resource \"aws_route53_health_check\" \"${1:name}\" {",
      "\ttype = \"${2:foo}\"",
      "\tfailure_threshold = 1",
      "\trequest_interval = 1",
      "\tip_address = \"\"",
      "\tfqdn = \"\"",
      "\tport = 1",
      "\tinvert_healthcheck = true|false",
      "resource_path = \"\"",
      "\tsearch_string = \"\"",
      "\tmeasure_latency = true|false",
      "\tchild_healthchecks = [\"\"]",
      "\tchild_health_threshold = 1",
      "\tcloudwatch_alarm_name = \"\"",
      "\tcloudwatch_alarm_region = \"\"",
      "\tinsufficient_data_health_status = \"\"",
      "\treference_name = \"\"",
      "\tenable_sni = true|false",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRoute53HealthCheck"
  },
  "srAwsRoute53Record": {
    "prefix": "srAwsRoute53Record",
    "body": [
      "resource \"aws_route53_record\" \"${1:name}\" {",
      "\tname = \"${2:foo}\"",
      "\ttype = \"${3:bar}\"",
      "\tzone_id = \"${aws_route53_zone.${4:baz}.zone_id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRoute53Record"
  },
  "frAwsRoute53Record": {
    "prefix": "frAwsRoute53Record",
    "body": [
      "resource \"aws_route53_record\" \"${1:name}\" {",
      "\tname = \"${2:foo}\"",
      "\ttype = \"${3:bar}\"",
      "\tzone_id = \"${aws_route53_zone.${4:baz}.zone_id}\"",
      "\tttl = 300 # Conflicts with Alias",
      "\tset_identifier = \"\"",
      "\talias {",
      "\t\tzone_id = \"\"",
      "\t\tname = \"\"",
      "\t\tevaluate_target_health = true|false",
      "\t}",
      "\t# Use only one policy",
      "\tfailover_routing_policy {",
      "\t\ttype = \"\"",
      "\t}",
      "\tlatency_routing_policy {",
      "\t\tregion = \"\"",
      "\t}",
      "\tgeolocation_routing_policy {",
      "\t\tcontinent   = \"\"",
      "\t\tcountry = \"\"",
      "\t\tsubdivision = \"\"",
      "\t}",
      "\tweighted_routing_policy {",
      "\t\tweight = 1",
      "\t}",
      "\thealth_check_id = \"\"",
      "\trecords = [\"\"] # Conflicts with Alias",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRoute53Record"
  },
  "srAwsRoute53Zone": {
    "prefix": "srAwsRoute53Zone",
    "body": [
      "resource \"aws_route53_zone\" \"${1:name}\" {",
      "\tname = \"${2:foo}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRoute53Zone"
  },
  "frAwsRoute53Zone": {
    "prefix": "frAwsRoute53Zone",
    "body": [
      "resource \"aws_route53_zone\" \"${1:name}\" {",
      "\tname\t\t\t= \"${2:foo}\"",
      "\tcomment\t\t = \"\"",
      "\tvpc_id\t\t\t= \"${aws_vpc.${3:bar}.id}\"",
      "\tvpc_region\t\t= \"\"",
      "\tdelegation_set_id = \"\" # conflicts with vpc_id",
      "\tforce_destroy\t = true|false",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRoute53Zone"
  },
  "srAwsRoute53ZoneAssociation": {
    "prefix": "srAwsRoute53ZoneAssociation",
    "body": [
      "resource \"aws_route53_zone_association\" \"${1:name}\" {",
      "\tzone_id = \"${aws_route53_zone.${2:foo}.zone_id}\"",
      "\tvpc_id  = \"${aws_vpc.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRoute53ZoneAssociation"
  },
  "frAwsRoute53ZoneAssociation": {
    "prefix": "frAwsRoute53ZoneAssociation",
    "body": [
      "resource \"aws_route53_zone_association\" \"${1:name}\" {",
      "\tzone_id = \"${aws_route53_zone.${2:foo}.zone_id}\"",
      "\tvpc_id = \"${aws_vpc.${3:bar}.id}\"",
      "\tvpc_region = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRoute53ZoneAssociation"
  },
  "srAwsRouteTable": {
    "prefix": "srAwsRouteTable",
    "body": [
      "\t# Warning: do not use with aws_route",
      "resource \"aws_route_table\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "\troute {",
      "\t\tcidr_block  = \"\"",
      "\t\tgateway_id  = \"\" # target",
      "\t\tinstance_id = \"\" # target",
      "\t\tnat_gateway_id = \"\" # target",
      "\t\tvpc_peering_connection_id = \"\" # target",
      "\t\tnetwork_interface_id = \"\" # target",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRouteTable"
  },
  "frAwsRouteTable": {
    "prefix": "frAwsRouteTable",
    "body": [
      "\t# Warning: do not use with aws_route",
      "resource \"aws_route_table\" \"${1:name}\" {",
      "\tvpc_id\t\t = \"${aws_vpc.${2:foo}.id}\"",
      "\tpropagating_vgws = [\"\"]",
      "\t# One of the below 'target' must be set.",
      "\troute {",
      "\t\tcidr_block      = \"\"",
      "\t\tipv6_cidr_block = \"\"",
      "\t\tegress_only_gateway_id = \"\"",
      "\t\tgateway_id      = \"\" # target",
      "\t\tinstance_id     = \"\" # target",
      "\t\tnat_gateway_id  = \"\" # target",
      "\t\tvpc_peering_connection_id = \"\" # target",
      "\t\tnetwork_interface_id      = \"\" # target",
      "\t}",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsRouteTable"
  },
  "srAwsRouteTableAssociation": {
    "prefix": "srAwsRouteTableAssociation",
    "body": [
      "resource \"aws_route_table_association\" \"${1:name}\" {",
      "\tsubnet_id\t= \"${aws_subnet.${2:foo}.id}\"",
      "\troute_table_id = \"${aws_route_table.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsRouteTableAssociation"
  },
  "srAwsS3Bucket": {
    "prefix": "srAwsS3Bucket",
    "body": [
      "resource \"aws_s3_bucket\" \"${1:name}\" {",
      "\tbucket = \"${2:foo}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsS3Bucket"
  },
  "frAwsS3Bucket": {
    "prefix": "frAwsS3Bucket",
    "body": [
      "resource \"aws_s3_bucket\" \"${1:name}\" {",
      "\tbucket\t\t\t\t\t= \"${2:foo}\"",
      "\tarn\t\t\t\t\t = \"\"",
      "\tacl\t\t\t\t\t = \"private\"",
      "\tpolicy\t\t\t\t\t= \"\"",
      "\tcors_rule {",
      "\t\tallowed_headers = [\"\"]",
      "\t\tallowed_methods = [\"\"]",
      "\t\tallowed_origins = [\"\"]",
      "\t\texpose_headers  = [\"\"]",
      "\t\tmax_age_seconds = 1",
      "\t}",
      "\twebsite {",
      "\t\tindex_document\t\t = \"\"",
      "\t\terror_document\t\t = \"\"",
      "\t\tredirect_all_requests_to = \"\"",
      "\t\trouting_rules\t\t\t= \"\"",
      "\t}",
      "\thosted_zone_id\t\t\t= \"\"",
      "\tregion\t\t\t\t\t= \"\"",
      "\twebsite_endpoint\t\t= \"\"",
      "\twebsite_domain\t\t\t= \"\"",
      "\tversioning {",
      "\t\tenabled\t= true|false",
      "\t\tmfa_delete = true|false",
      "\t}",
      "\tlogging {",
      "\t\ttarget_bucket = \"\"",
      "\t\ttarget_prefix = \"\"",
      "\t}",
      "\tlifecycle_rule {",
      "\t\tid\t\t\t\t\t\t\t\t\t = \"\"",
      "\t\tprefix\t\t\t\t\t\t\t\t = \"\"",
      "\t\tenabled\t\t\t\t\t\t\t\t= true|false",
      "\t\tabort_incomplete_multipart_upload_days = 1",
      "\t\texpiration {",
      "\t\tdate\t\t\t\t\t\t = \"\"",
      "\t\tdays\t\t\t\t\t\t = 1",
      "\t\texpired_object_delete_marker = true|false",
      "\t}",
      "\t\tnoncurrent_version_expiration {",
      "\t\tdays = 1",
      "\t}",
      "\t\ttransition {",
      "\t\tdate\t\t= \"\"",
      "\t\tdays\t\t= 1",
      "\t\tstorage_class = \"\"",
      "\t}",
      "\t\tnoncurrent_version_transition {",
      "\t\tdays\t\t= 1",
      "\t\tstorage_class = \"\"",
      "\t}",
      "\t}",
      "\tforce_destroy\t\t\t = true|false",
      "\tacceleration_status\t = \"\"",
      "\trequest_payer\t\t\t = \"\"",
      "\treplication_configuration {",
      "\t\trole = \"\"",
      "\t\trules {",
      "\t\tid\t = \"\"",
      "\t\tdestination {",
      "\t\t\tbucket\t\t= \"\"",
      "\t\t\tstorage_class = \"\"",
      "\t\t}",
      "\t\tprefix = \"\"",
      "\t\tstatus = \"\"",
      "\t}",
      "\t}",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsS3Bucket"
  },
  "srAwsS3BucketNotification": {
    "prefix": "srAwsS3BucketNotification",
    "body": [
      "resource \"aws_s3_bucket_notification\" \"${1:name}\" {",
      "\tbucket = \"${aws_s3_bucket.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsS3BucketNotification"
  },
  "frAwsS3BucketNotification": {
    "prefix": "frAwsS3BucketNotification",
    "body": [
      "resource \"aws_s3_bucket_notification\" \"${1:name}\" {",
      "\tbucket\t\t= \"${aws_s3_bucket.${2:foo}.id}\"",
      "\ttopic {",
      "\t\tid\t\t\t= \"${1}\"",
      "\t\tfilter_prefix = \"\"",
      "\t\tfilter_suffix = \".log\"",
      "\t\ttopic_arn\t = \"${aws_sns_topic.${3:bar}.arn}\"",
      "\t\tevents\t\t= [\"s3:ObjectCreated:*\"]",
      "\t}",
      "\tqueue {",
      "\t\tid\t\t\t= \"${1}\"",
      "\t\tfilter_prefix = \"\"",
      "\t\tfilter_suffix = \".log\"",
      "\t\tqueue_arn\t = \"${aws_sqs_queue.${4:baz}.arn}\"",
      "\t\tevents\t\t= [\"s3:ObjectCreated:*\"]",
      "\t}",
      "\tlambda_function {",
      "\t\tid\t\t\t\t= \"${1}\"",
      "\t\tfilter_prefix\t = \"\"",
      "\t\tfilter_suffix\t = \".log\"",
      "\t\tlambda_function_arn = \"${aws_lambda_function.${5:qux}.arn}\"",
      "\t\tevents\t\t\t= [\"s3:ObjectCreated:*\"]",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsS3BucketNotification"
  },
  "srAwsS3BucketObject": {
    "prefix": "srAwsS3BucketObject",
    "body": [
      "resource \"aws_s3_bucket_object\" \"${1:name}\" {",
      "\tbucket = \"${aws_s3_bucket.${2:foo}.bucket}\"",
      "\tkey\t= \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsS3BucketObject"
  },
  "frAwsS3BucketObject": {
    "prefix": "frAwsS3BucketObject",
    "body": [
      "resource \"aws_s3_bucket_object\" \"${1:name}\" {",
      "\tbucket\t\t\t\t = \"${aws_s3_bucket.${2:foo}.bucket}\"",
      "\tkey\t\t\t\t\t= \"${1}\"",
      "\tacl\t\t\t\t\t= \"private\"",
      "\tcache_control\t\t= \"\"",
      "\tcontent_disposition\t= \"\"",
      "\tcontent_encoding\t = \"\"",
      "\tcontent_language\t = \"\"",
      "\tcontent_type\t\t = \"\"",
      "\tsource\t\t\t\t = \"\"",
      "\tcontent\t\t\t\t= \"\"",
      "\tstorage_class\t\t= \"STANDARD\"",
      "\tserver_side_encryption = \"\"",
      "\tkms_key_id\t\t\t = \"${aws_kms_key.${3:bar}.arn}\"",
      "\tetag\t\t\t\t = \"${md5(file(\"path/to/file\"))}\"",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsS3BucketObject"
  },
  "srAwsS3BucketPolicy": {
    "prefix": "srAwsS3BucketPolicy",
    "body": [
      "resource \"aws_s3_bucket_policy\" \"${1:name}\" {",
      "\tbucket = \"${aws_s3_bucket.${2:foo}.bucket}\"",
      "\tpolicy = \"${data.aws_iam_policy_document.${3:bar}.json}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsS3BucketPolicy"
  },
  "frAwsS3BucketPolicy": {
    "prefix": "frAwsS3BucketPolicy",
    "body": [
      "resource \"aws_s3_bucket_policy\" \"${1:name}\" {",
      "\tbucket = \"${aws_s3_bucket.${2:foo}.bucket}\"",
      "\tpolicy = \"${data.aws_iam_policy_document.${3:bar}.json}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsS3BucketPolicy"
  },
  "srAwsSecurityGroup": {
    "prefix": "srAwsSecurityGroup",
    "body": [
      "resource \"aws_security_group\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSecurityGroup"
  },
  "frAwsSecurityGroup": {
    "prefix": "frAwsSecurityGroup",
    "body": [
      "resource \"aws_security_group\" \"${1:name}\" {",
      "\tname        = \"${1}\" # Conflicts with name_prefix",
      "\tname_prefix = \"\"",
      "\tdescription = \"Managed by Terraforma\" # Cannot be updated",
      "\tvpc_id      = \"${aws_vpc.${2:foo}.id}\"",
      "\tingress {",
      "\t\tfrom_port = 1",
      "\t\tto_port   = 1",
      "\t\tprotocol  = \"\"",
      "\t\tcidr_blocks      = [\"\"]",
      "\t\tipv6_cidr_blocks = [\"\"]",
      "\t\tsecurity_groups  = [\"\"]",
      "\t\tself             = true|false",
      "\t}",
      "\tegress {",
      "\t\tfrom_port = 1",
      "\t\tto_port   = 1",
      "\t\tprotocol  = \"\"",
      "\t\tcidr_blocks      = [\"\"]",
      "\t\tipv6_cidr_blocks = [\"\"]",
      "\t\tprefix_list_ids  = [\"\"]",
      "\t\tsecurity_groups  = [\"\"]",
      "\t\tself             = true|false",
      "\t}",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSecurityGroup"
  },
  "srAwsSecurityGroupRule": {
    "prefix": "srAwsSecurityGroupRule",
    "body": [
      "resource \"aws_security_group_rule\" \"${1:name}\" {",
      "\ttype      = \"ingress\"|\"egress\"",
      "\tfrom_port = 1",
      "\tto_port   = 1",
      "\tprotocol  = \"\"",
      "\tsecurity_group_id = \"sg-\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSecurityGroupRule"
  },
  "frAwsSecurityGroupRule": {
    "prefix": "frAwsSecurityGroupRule",
    "body": [
      "resource \"aws_security_group_rule\" \"${1:name}\" {",
      "\ttype      = \"\"",
      "\tfrom_port = 1",
      "\tto_port   = 1",
      "\tprotocol  = \"\"",
      "\tsecurity_group_id = \"sg-\"",
      "\tcidr_blocks       = [\"\"]",
      "\tipv6_cidr_blocks  = [\"\"]",
      "\tprefix_list_ids   = [\"${aws_vpc_endpoint.${2:foo}.prefix_list_id}\"]",
      "\tsource_security_group_id = \"\" # Cannot be used with cidr_blocks",
      "\tself = true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSecurityGroupRule"
  },
  "srAwsSesActiveReceiptRuleSet": {
    "prefix": "srAwsSesActiveReceiptRuleSet",
    "body": [
      "resource \"aws_ses_active_receipt_rule_set\" \"${1:name}\" {",
      "\trule_set_name = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSesActiveReceiptRuleSet"
  },
  "frAwsSesActiveReceiptRuleSet": {
    "prefix": "frAwsSesActiveReceiptRuleSet",
    "body": [
      "resource \"aws_ses_active_receipt_rule_set\" \"${1:name}\" {",
      "\trule_set_name = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSesActiveReceiptRuleSet"
  },
  "srAwsSesConfigurationSet": {
    "prefix": "srAwsSesConfigurationSet",
    "body": [
      "resource \"aws_ses_configuration_set\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSesConfigurationSet"
  },
  "frAwsSesConfigurationSet": {
    "prefix": "frAwsSesConfigurationSet",
    "body": [
      "resource \"aws_ses_configuration_set\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSesConfigurationSet"
  },
  "srAwsSesDomainIdentity": {
    "prefix": "srAwsSesDomainIdentity",
    "body": [
      "resource \"aws_ses_domain_identity\" \"${1:name}\" {",
      "\tdomain = \"${2:domain}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSesDomainIdentity"
  },
  "frAwsSesDomainIdentity": {
    "prefix": "frAwsSesDomainIdentity",
    "body": [
      "resource \"aws_ses_domain_identity\" \"${1:name}\" {",
      "\tdomain = \"${2:domain}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSesDomainIdentity"
  },
  "srAwsSesEventDestination": {
    "prefix": "srAwsSesEventDestination",
    "body": [
      "resource \"aws_ses_event_destination\" \"${1:name}\" {",
      "\tname = \"${2}\"",
      "\tconfiguration_set_name = \"${aws_ses_configuration_set.${2:foo}.name}\"",
      "\tmatching_types = [\"send\",\"reject\",\"bounce\",\"complaint\",\"delivery\"]",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSesEventDestination"
  },
  "frAwsSesEventDestination": {
    "prefix": "frAwsSesEventDestination",
    "body": [
      "resource \"aws_ses_event_destination\" \"${1:name}\" {",
      "\tname = \"${2}\"",
      "\tconfiguration_set_name = \"${aws_ses_configuration_set.${2:foo}.name}\"",
      "\tmatching_types   = [\"send\",\"reject\",\"bounce\",\"complaint\",\"delivery\"]",
      "\tenabled          = true|false",
      "\tcloudwatch_destination { # Conflicts with kinesis_destination",
      "\t\tdefault_value  = \"default\"",
      "\t\tdimension_name = \"dimension\"",
      "\t\tvalue_source   = \"emailHeader\"",
      "\t}",
      "\tkinesis_destination {",
      "\t\tstream_arn = \"${aws_kinesis_firehose_delivery_stream.${3:bar}.arn}\"",
      "\t\trole_arn   = \"${aws_iam_role.${4:baz}.arn}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSesEventDestination"
  },
  "srAwsSesReceiptFilter": {
    "prefix": "srAwsSesReceiptFilter",
    "body": [
      "resource \"aws_ses_receipt_filter\" \"${1:name}\" {",
      "\tname   = \"${1}\"",
      "\tcidr   = \"${2:foo}\"",
      "\tpolicy = \"Block\"|\"Allow\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSesReceiptFilter"
  },
  "frAwsSesReceiptFilter": {
    "prefix": "frAwsSesReceiptFilter",
    "body": [
      "resource \"aws_ses_receipt_filter\" \"${1:name}\" {",
      "\tname   = \"${1}\"",
      "\tcidr   = \"${2:foo}\"",
      "\tpolicy = \"Block\"|\"Allow\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSesReceiptFilter"
  },
  "srAwsSesReceiptRule": {
    "prefix": "srAwsSesReceiptRule",
    "body": [
      "resource \"aws_ses_receipt_rule\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\trule_set_name = \"${2:foo}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSesReceiptRule"
  },
  "frAwsSesReceiptRule": {
    "prefix": "frAwsSesReceiptRule",
    "body": [
      "resource \"aws_ses_receipt_rule\" \"${1:name}\" {",
      "\tname\t\t\t= \"${1}\"",
      "\trule_set_name\t = \"${2:foo}\"",
      "\tafter\t\t\t = \"\"",
      "\tenabled\t\t = true|false",
      "\trecipients\t\t= [\"user@domain.com\"]",
      "\tscan_enabled\t= true|false",
      "\ttls_policy\t\t= \"\"",
      "\tadd_header_action {",
      "\t\theader_name  = \"\"",
      "\t\theader_value = \"\"",
      "\t\tposition\t = 1",
      "\t}",
      "\tbounce_action {",
      "\t\tmessage\t\t = \"\"",
      "\t\tsender\t\t= \"\"",
      "\t\tsmtp_reply_code = \"\"",
      "\t\tstatus_code\t = \"\"",
      "\t\ttopic_arn\t = \"${aws_sns_topic.${3:bar}.arn}\"",
      "\t\tposition\t\t= 1",
      "\t}",
      "\tlambda_action {",
      "\t\tfunction_arn\t= \"\"",
      "\t\tinvocation_type = \"\"",
      "\t\ttopic_arn\t = \"${aws_sns_topic.${3:bar}.arn}\"",
      "\t\tposition\t\t= 1",
      "\t}",
      "\ts3_action {",
      "\t\tbucket_name\t = \"\"",
      "\t\tkms_key_arn\t = \"\"",
      "\t\tobject_key_prefix = \"\"",
      "\t\ttopic_arn\t\t = \"${aws_sns_topic.${3:bar}.arn}\"",
      "\t\tposition\t\t= 1",
      "\t}",
      "\tsns_action {",
      "\t\ttopic_arn = \"${aws_sns_topic.${3:bar}.arn}\"",
      "\t\tposition  = 1",
      "\t}",
      "\tstop_action {",
      "\t\tscope\t = \"\"",
      "\t\ttopic_arn = \"\"",
      "\t\tposition  = 1",
      "\t}",
      "\tworkmail_action {",
      "\t\torganization_arn = \"\"",
      "\t\ttopic_arn\t\t= \"\"",
      "\t\tposition\t\t = 1",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSesReceiptRule"
  },
  "srAwsSesReceiptRuleSet": {
    "prefix": "srAwsSesReceiptRuleSet",
    "body": [
      "resource \"aws_ses_receipt_rule_set\" \"${1:name}\" {",
      "\trule_set_name = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSesReceiptRuleSet"
  },
  "frAwsSesReceiptRuleSet": {
    "prefix": "frAwsSesReceiptRuleSet",
    "body": [
      "resource \"aws_ses_receipt_rule_set\" \"${1:name}\" {",
      "\trule_set_name = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSesReceiptRuleSet"
  },
  "srAwsSfnActivity": {
    "prefix": "srAwsSfnActivity",
    "body": [
      "resource \"aws_sfn_activity\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSfnActivity"
  },
  "frAwsSfnActivity": {
    "prefix": "frAwsSfnActivity",
    "body": [
      "resource \"aws_sfn_activity\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSfnActivity"
  },
  "srAwsSfnStateMachine": {
    "prefix": "srAwsSfnStateMachine",
    "body": [
      "resource \"aws_sfn_state_machine\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\trole_arn   = \"${aws_iam_role.${2:foo}.arn}\"",
      "\tdefinition = \"{...}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSfnStateMachine"
  },
  "frAwsSfnStateMachine": {
    "prefix": "frAwsSfnStateMachine",
    "body": [
      "resource \"aws_sfn_state_machine\" \"${1:name}\" {",
      "\tname\t = \"${1}\"",
      "\trole_arn   = \"${aws_iam_role.${2:foo}.arn}\"",
      "\tdefinition = \"{...}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSfnStateMachine"
  },
  "srAwsSimpleDBDomain": {
    "prefix": "srAwsSimpleDBDomain",
    "body": [
      "resource \"aws_simpledb_domain\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSimpleDBDomain"
  },
  "frAwsSimpleDBDomain": {
    "prefix": "frAwsSimpleDBDomain",
    "body": [
      "resource \"aws_simpledb_domain\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSimpleDBDomain"
  },
  "srAwsSnapshotCreateVolumePermission": {
    "prefix": "srAwsSnapshotCreateVolumePermission",
    "body": [
      "resource \"aws_snapshot_create_volume_permission\" \"${1:name}\" {",
      "\tsnapshot_id = \"${aws_ebs_snapshot.${2:foo}.id}\"",
      "\taccount_id  = \"12345678\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSnapshotCreateVolumePermission"
  },
  "frAwsSnapshotCreateVolumePermission": {
    "prefix": "frAwsSnapshotCreateVolumePermission",
    "body": [
      "resource \"aws_snapshot_create_volume_permission\" \"${1:name}\" {",
      "\tsnapshot_id = \"${aws_ebs_snapshot.${2:foo}.id}\"",
      "\taccount_id  = \"12345678\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSnapshotCreateVolumePermission"
  },
  "srAwsSnsTopic": {
    "prefix": "srAwsSnsTopic",
    "body": [
      "resource \"aws_sns_topic\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSnsTopic"
  },
  "frAwsSnsTopic": {
    "prefix": "frAwsSnsTopic",
    "body": [
      "resource \"aws_sns_topic\" \"${1:name}\" {",
      "\tname\t\t\t= \"${1}\"",
      "\tdisplay_name\t= \"${1}\"",
      "\tpolicy\t\t= \"${data.aws_iam_policy_document.${2:foo}.json}\"",
      "\tdelivery_policy = \"sns-delivery-policy\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSnsTopic"
  },
  "srAwsSnsTopicPolicy": {
    "prefix": "srAwsSnsTopicPolicy",
    "body": [
      "resource \"aws_sns_topic_policy\" \"${1:name}\" {",
      "\tarn\t= \"${aws_sns_topic.${2:foo}.arn}\"",
      "\tpolicy = \"{jsondoc}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSnsTopicPolicy"
  },
  "frAwsSnsTopicPolicy": {
    "prefix": "frAwsSnsTopicPolicy",
    "body": [
      "resource \"aws_sns_topic_policy\" \"${1:name}\" {",
      "\tarn\t= \"${aws_sns_topic.${2:foo}.arn}\"",
      "\tpolicy = \"{jsondoc}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSnsTopicPolicy"
  },
  "srAwsSnsTopicSubscription": {
    "prefix": "srAwsSnsTopicSubscription",
    "body": [
      "resource \"aws_sns_topic_subscription\" \"${1:name}\" {",
      "\ttopic_arn = \"${aws_sns_topic.${2:foo}.arn}\"",
      "\tprotocol  = \"sqs\"|\"lambda\"|\"application\"",
      "\tendpoint  = \"${aws_sqs_queue.${3:bar}.arn}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSnsTopicSubscription"
  },
  "frAwsSnsTopicSubscription": {
    "prefix": "frAwsSnsTopicSubscription",
    "body": [
      "resource \"aws_sns_topic_subscription\" \"${1:name}\" {",
      "\ttopic_arn\t\t\t\t\t = \"${aws_sns_topic.${2:foo}.arn}\"",
      "\tprotocol\t\t\t\t\t\t= \"sqs\"|\"lambda\"|\"application\"",
      "\tendpoint\t\t\t\t\t\t= \"${aws_sqs_queue.${3:bar}.arn}\"",
      "\tendpoint_auto_confirms\t\t= true|false",
      "\tconfirmation_timeout_in_minutes = 1",
      "\tdelivery_policy\t\t\t\t = \"\"",
      "\traw_message_delivery\t\t\t= true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSnsTopicSubscription"
  },
  "srAwsSpotDataFeedSubscription": {
    "prefix": "srAwsSpotDataFeedSubscription",
    "body": [
      "resource \"aws_spot_data_feed_subscription\" \"${1:name}\" {",
      "\tbucket = \"${aws_s3_bucket.${2:foo}.bucket}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSpotDataFeedSubscription"
  },
  "frAwsSpotDataFeedSubscription": {
    "prefix": "frAwsSpotDataFeedSubscription",
    "body": [
      "\t# Note: Only one por account.",
      "resource \"aws_spot_data_feed_subscription\" \"${1:name}\" {",
      "\tbucket = \"${aws_s3_bucket.${2:foo}.bucket}\"",
      "\tprefix = \"subdir\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSpotDataFeedSubscription"
  },
  "srAwsSpotFleetRequest": {
    "prefix": "srAwsSpotFleetRequest",
    "body": [
      "resource \"aws_spot_fleet_request\" \"${1:name}\" {",
      "\tiam_fleet_role\t = \"${aws_iam_role.${2:foo}.arn}\"",
      "\tlaunch_specification { # Can be used several times.",
      "\t\tvpc_security_group_ids\t = [\"\"]",
      "\t\tassociate_public_ip_address  = true|false",
      "\t\tebs_block_device {",
      "\t\tdelete_on_termination = true|false",
      "\t\tdevice_name\t\t = \"\"",
      "\t\tencrypted\t\t\t = true|false",
      "\t\tiops\t\t\t\t= 1",
      "\t\tsnapshot_id\t\t = \"\"",
      "\t\tvolume_size\t\t = 1",
      "\t\tvolume_type\t\t = \"\"",
      "\t}",
      "\t\tephemeral_block_device {",
      "\t\tdevice_name  = \"\"",
      "\t\tvirtual_name = \"\"",
      "\t}",
      "\t\troot_block_device {",
      "\t\tdelete_on_termination = true|false",
      "\t\tiops\t\t\t\t= 1",
      "\t\tvolume_size\t\t = 1",
      "\t\tvolume_type\t\t = \"\"",
      "\t}",
      "\t\tebs_optimized\t\t\t\t= true|false",
      "\t\tiam_instance_profile\t\t = \"\"",
      "\t\tami\t\t\t\t\t\t= \"\"",
      "\t\tinstance_type\t\t\t\t= \"\"",
      "\t\tkey_name\t\t\t\t\t = \"\"",
      "\t\tmonitoring\t\t\t\t = true|false",
      "\t\tplacement_group\t\t\t= \"\"",
      "\t\tspot_price\t\t\t\t = \"\"",
      "\t\tuser_data\t\t\t\t\t= \"\"",
      "\t\tweighted_capacity\t\t\t= \"\"",
      "\t\tsubnet_id\t\t\t\t\t= \"\"",
      "\t\tavailability_zone\t\t\t= \"\"",
      "\t}",
      "\ttarget_capacity\t= 1",
      "\tspot_price\t\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSpotFleetRequest"
  },
  "frAwsSpotFleetRequest": {
    "prefix": "frAwsSpotFleetRequest",
    "body": [
      "resource \"aws_spot_fleet_request\" \"${1:name}\" {",
      "\tiam_fleet_role\t\t\t\t\t= \"${aws_iam_role.${2:foo}.arn}\"",
      "\tlaunch_specification { # Can be used several times.",
      "\t\tvpc_security_group_ids\t = [\"\"]",
      "\t\tassociate_public_ip_address  = true|false",
      "\t\tebs_block_device {",
      "\t\tdelete_on_termination = true|false",
      "\t\tdevice_name\t\t = \"\"",
      "\t\tencrypted\t\t\t = true|false",
      "\t\tiops\t\t\t\t= 1",
      "\t\tsnapshot_id\t\t = \"\"",
      "\t\tvolume_size\t\t = 1",
      "\t\tvolume_type\t\t = \"\"",
      "\t}",
      "\t\tephemeral_block_device {",
      "\t\tdevice_name  = \"\"",
      "\t\tvirtual_name = \"\"",
      "\t}",
      "\t\troot_block_device {",
      "\t\tdelete_on_termination = true|false",
      "\t\tiops\t\t\t\t= 1",
      "\t\tvolume_size\t\t = 1",
      "\t\tvolume_type\t\t = \"\"",
      "\t}",
      "\t\tebs_optimized\t\t\t\t= true|false",
      "\t\tiam_instance_profile\t\t = \"\"",
      "\t\tami\t\t\t\t\t\t= \"\"",
      "\t\tinstance_type\t\t\t\t= \"\"",
      "\t\tkey_name\t\t\t\t\t = \"\"",
      "\t\tmonitoring\t\t\t\t = true|false",
      "\t\tplacement_group\t\t\t= \"\"",
      "\t\tspot_price\t\t\t\t = \"\"",
      "\t\tuser_data\t\t\t\t\t= \"\"",
      "\t\tweighted_capacity\t\t\t= \"\"",
      "\t\tsubnet_id\t\t\t\t\t= \"\"",
      "\t\tavailability_zone\t\t\t= \"\"",
      "\t}",
      "\ttarget_capacity\t\t\t\t\t = 1",
      "\tspot_price\t\t\t\t\t\t= \"\"",
      "\treplace_unhealthy_instances\t\t = true|false",
      "\tallocation_strategy\t\t\t\t = \"\"",
      "\texcess_capacity_termination_policy  = \"\"",
      "\tterminate_instances_with_expiration = true|false",
      "\tvalid_from\t\t\t\t\t\t= \"\"",
      "\tvalid_until\t\t\t\t\t\t = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSpotFleetRequest"
  },
  "srAwsSpotInstanceRequest": {
    "prefix": "srAwsSpotInstanceRequest",
    "body": [
      "resource \"aws_spot_instance_request\" \"${1:name}\" {",
      "\tspot_price = \"${2:foo}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSpotInstanceRequest"
  },
  "frAwsSpotInstanceRequest": {
    "prefix": "frAwsSpotInstanceRequest",
    "body": [
      "resource \"aws_spot_instance_request\" \"${1:name}\" {",
      "\tspot_price\t\t\t = \"${2:foo}\"",
      "\tspot_type\t\t\t= \"\"",
      "\twait_for_fulfillment   = true|false",
      "\tblock_duration_minutes = 120 # Multiple of 60",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSpotInstanceRequest"
  },
  "srAwsSqsQueue": {
    "prefix": "srAwsSqsQueue",
    "body": [
      "resource \"aws_sqs_queue\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSqsQueue"
  },
  "frAwsSqsQueue": {
    "prefix": "frAwsSqsQueue",
    "body": [
      "resource \"aws_sqs_queue\" \"${1:name}\" {",
      "\tname\t\t\t\t\t\t= \"${1}\"",
      "\tdelay_seconds\t\t\t = 0",
      "\tmax_message_size\t\t\t= 262144 # Max 262144",
      "\tmessage_retention_seconds   = 345600 # Max 1209600",
      "\treceive_wait_time_seconds   = 0 # Max 20",
      "\tvisibility_timeout_seconds  = 30 # Max 43200",
      "\tredrive_policy\t\t\t= \"{\"deadLetterTargetArn\":\"${aws_sqs_queue.${2:foo}.arn}\",\"maxReceiveCount\":4}\"",
      "\tpolicy\t\t\t\t\t= \"\"",
      "\tfifo_queue\t\t\t\t= true|false",
      "\tcontent_based_deduplication = true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSqsQueue"
  },
  "srAwsSqsQueuePolicy": {
    "prefix": "srAwsSqsQueuePolicy",
    "body": [
      "resource \"aws_sqs_queue_policy\" \"${1:name}\" {",
      "\tqueue_url = \"${aws_sqs_queue.${2:foo}.id}\"",
      "\tpolicy = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSqsQueuePolicy"
  },
  "frAwsSqsQueuePolicy": {
    "prefix": "frAwsSqsQueuePolicy",
    "body": [
      "resource \"aws_sqs_queue_policy\" \"${1:name}\" {",
      "\tqueue_url = \"${aws_sqs_queue.${2:foo}.id}\"",
      "\tpolicy = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSqsQueuePolicy"
  },
  "srAwsSsmActivation": {
    "prefix": "srAwsSsmActivation",
    "body": [
      "resource \"aws_ssm_activation\" \"${1:name}\" {",
      "\tiam_role = \"${aws_iam_role.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSsmActivation"
  },
  "frAwsSsmActivation": {
    "prefix": "frAwsSsmActivation",
    "body": [
      "resource \"aws_ssm_activation\" \"${1:name}\" {",
      "\tiam_role = \"${aws_iam_role.${2:foo}.id}\"",
      "\tname = \"${1}\"",
      "\tdescription = \"\"",
      "\texpiration_date = \"\"",
      "\tregistration_limit = 1",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSsmActivation"
  },
  "srAwsSsmAssociation": {
    "prefix": "srAwsSsmAssociation",
    "body": [
      "resource \"aws_ssm_association\" \"${1:name}\" {",
      "\tinstance_id = \"${aws_instance.${2:foo}.id}\"",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSsmAssociation"
  },
  "frAwsSsmAssociation": {
    "prefix": "frAwsSsmAssociation",
    "body": [
      "resource \"aws_ssm_association\" \"${1:name}\" {",
      "\tinstance_id = \"${aws_instance.${2:foo}.id}\"",
      "\tname = \"${1}\"",
      "\tparameters {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSsmAssociation"
  },
  "srAwsSsmDocument": {
    "prefix": "srAwsSsmDocument",
    "body": [
      "resource \"aws_ssm_document\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tcontent = \"{json}\"",
      "\tdocument_type = \"Command\"|\"Policy\"|\"Automation\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSsmDocument"
  },
  "frAwsSsmDocument": {
    "prefix": "frAwsSsmDocument",
    "body": [
      "resource \"aws_ssm_document\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tcontent = \"{json}\"",
      "\tdocument_type = \"Command\"|\"Policy\"|\"Automation\"",
      "\tpermissions {",
      "\t\ttype = \"Share\"",
      "\t\taccount_ids = \"All\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSsmDocument"
  },
  "srAwsSubnet": {
    "prefix": "srAwsSubnet",
    "body": [
      "resource \"aws_subnet\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "\tcidr_block = \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsSubnet"
  },
  "frAwsSubnet": {
    "prefix": "frAwsSubnet",
    "body": [
      "resource \"aws_subnet\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "\tcidr_block = \"\"",
      "\tipv6_cidr_block = \"\"",
      "\tavailability_zone = \"\"",
      "\tmap_public_ip_on_launch = true|false",
      "\tassign_ipv6_address_on_creation = true|false",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsSubnet"
  },
  "srAwsVolumeAttachment": {
    "prefix": "srAwsVolumeAttachment",
    "body": [
      "resource \"aws_volume_attachment\" \"${1:name}\" {",
      "\tdevice_name = \"/dev/sdX\"",
      "\tinstance_id = \"${aws_instance.${2:foo}.id}\"",
      "\tvolume_id   = \"${aws_ebs_volume.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsVolumeAttachment"
  },
  "frAwsVolumeAttachment": {
    "prefix": "frAwsVolumeAttachment",
    "body": [
      "resource \"aws_volume_attachment\" \"${1:name}\" {",
      "\tdevice_name  = \"/dev/sdX\"",
      "\tinstance_id  = \"${aws_instance.${2:foo}.id}\"",
      "\tvolume_id    = \"${aws_ebs_volume.${3:bar}.id}\"",
      "\tforce_detach = true|false",
      "\tskip_destroy = true|false",
      "}",
      ""
    ],
    "description": "Snippet for frAwsVolumeAttachment"
  },
  "srAwsVpc": {
    "prefix": "srAwsVpc",
    "body": [
      "resource \"aws_vpc\" \"${1:name}\" {",
      "\tcidr_block = \"10.0.0.0/16\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsVpc"
  },
  "frAwsVpc": {
    "prefix": "frAwsVpc",
    "body": [
      "resource \"aws_vpc\" \"${1:name}\" {",
      "\tcidr_block           = \"10.0.0.0/16\"",
      "\tinstance_tenancy     = \"\"",
      "\tenable_dns_hostnames = true|false",
      "\tenable_dns_support   = true|false",
      "\tenable_classiclink   = true|false",
      "\tassign_generated_ipv6_cidr_block = true|false",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsVpc"
  },
  "srAwsVpcDhcpOptions": {
    "prefix": "srAwsVpcDhcpOptions",
    "body": [
      "resource \"aws_vpc_dhcp_options\" \"${1:name}\" {",
      "\t# Must specify one of these at least:",
      "\tdomain_name = \"mydomain\"",
      "\tdomain_name_servers  = [\"8.8.8.8\",\"4.2.2.2\"]",
      "\tntp_servers = [\"127.0.0.1\"]",
      "\tnetbios_node_type = \"2\"|\"1\"|\"4\"|\"8\"",
      "\tnetbios_name_servers = [\"127.0.0.1\"]",
      "}",
      ""
    ],
    "description": "Snippet for srAwsVpcDhcpOptions"
  },
  "frAwsVpcDhcpOptions": {
    "prefix": "frAwsVpcDhcpOptions",
    "body": [
      "resource \"aws_vpc_dhcp_options\" \"${1:name}\" {",
      "\tdomain_name = \"mydomain\"",
      "\tdomain_name_servers  = [\"8.8.8.8\",\"4.2.2.2\"]",
      "\tntp_servers = [\"127.0.0.1\"]",
      "\tnetbios_node_type = \"2\"|\"1\"|\"4\"|\"8\"",
      "\tnetbios_name_servers = [\"127.0.0.1\"]",
      "\ttags = {",
      "\t\tkey = \"${var.SOMEVAL}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsVpcDhcpOptions"
  },
  "srAwsVpcDhcpOptionsAssociation": {
    "prefix": "srAwsVpcDhcpOptionsAssociation",
    "body": [
      "resource \"aws_vpc_dhcp_options_association\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "\tdhcp_options_id = \"${aws_vpc_dhcp_options.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsVpcDhcpOptionsAssociation"
  },
  "frAwsVpcDhcpOptionsAssociation": {
    "prefix": "frAwsVpcDhcpOptionsAssociation",
    "body": [
      "resource \"aws_vpc_dhcp_options_association\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "\tdhcp_options_id = \"${aws_vpc_dhcp_options.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsVpcDhcpOptionsAssociation"
  },
  "srAwsVpcEndpoint": {
    "prefix": "srAwsVpcEndpoint",
    "body": [
      "resource \"aws_vpc_endpoint\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "\tservice_name = \"${3:bar}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsVpcEndpoint"
  },
  "frAwsVpcEndpoint": {
    "prefix": "frAwsVpcEndpoint",
    "body": [
      "resource \"aws_vpc_endpoint\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "\tservice_name = \"${3:bar}\"",
      "\tpolicy = \"\"",
      "\troute_table_ids = [\"\"] # Do not use in conjunction with vpc_endpoint_route_table_association",
      "}",
      ""
    ],
    "description": "Snippet for frAwsVpcEndpoint"
  },
  "srAwsVpcEndpointRouteTableAssociation": {
    "prefix": "srAwsVpcEndpointRouteTableAssociation",
    "body": [
      "resource \"aws_vpc_endpoint_route_table_association\" \"${1:name}\" {",
      "\tvpc_endpoint_id = \"${aws_vpc_endpoint.${2:foo}.id}\"",
      "\troute_table_id  = \"${aws_route_table.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsVpcEndpointRouteTableAssociation"
  },
  "frAwsVpcEndpointRouteTableAssociation": {
    "prefix": "frAwsVpcEndpointRouteTableAssociation",
    "body": [
      "resource \"aws_vpc_endpoint_route_table_association\" \"${1:name}\" {",
      "\tvpc_endpoint_id = \"${aws_vpc_endpoint.${2:foo}.id}\"",
      "\troute_table_id  = \"${aws_route_table.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsVpcEndpointRouteTableAssociation"
  },
  "srAwsVpcPeeringConnection": {
    "prefix": "srAwsVpcPeeringConnection",
    "body": [
      "resource \"aws_vpc_peering_connection\" \"${1:name}\" {",
      "\tpeer_owner_id = \"${var.peer_owner_id}\"",
      "\tpeer_vpc_id  = \"${aws_vpc.${2:foo}.id}\"",
      "\tvpc_id = \"${aws_vpc.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsVpcPeeringConnection"
  },
  "frAwsVpcPeeringConnection": {
    "prefix": "frAwsVpcPeeringConnection",
    "body": [
      "resource \"aws_vpc_peering_connection\" \"${1:name}\" {",
      "\tpeer_vpc_id   = \"${aws_vpc.${2:foo}.id}\"",
      "\tvpc_id = \"${aws_vpc.${3:bar}.id}\"",
      "\tpeer_owner_id = \"${var.peer_owner_id}\"",
      "\tauto_accept   = true|false",
      "\taccepter {",
      "\t\tallow_remote_vpc_dns_resolution  = true|false",
      "\t\tallow_classic_link_to_remote_vpc = true|false",
      "\t\tallow_vpc_to_remote_classic_link = true|false",
      "\t}",
      "\trequester {",
      "\t\tallow_remote_vpc_dns_resolution  = true|false",
      "\t\tallow_classic_link_to_remote_vpc = true|false",
      "\t\tallow_vpc_to_remote_classic_link = true|false",
      "\t}",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsVpcPeeringConnection"
  },
  "srAwsVpcPeeringConnectionAccepter": {
    "prefix": "srAwsVpcPeeringConnectionAccepter",
    "body": [
      "resource \"aws_vpc_peering_connection_accepter\" \"${1:name}\" {",
      "\tvpc_peering_connection_id = \"${aws_vpc_peering_connection.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsVpcPeeringConnectionAccepter"
  },
  "frAwsVpcPeeringConnectionAccepter": {
    "prefix": "frAwsVpcPeeringConnectionAccepter",
    "body": [
      "resource \"aws_vpc_peering_connection_accepter\" \"${1:name}\" {",
      "\tvpc_peering_connection_id = \"${aws_vpc_peering_connection.${2:foo}.id}\"",
      "\tauto_accept = true|false",
      "\taccepter {",
      "\t\tallow_remote_vpc_dns_resolution  = true|false",
      "\t\tallow_classic_link_to_remote_vpc = true|false",
      "\t\tallow_vpc_to_remote_classic_link = true|false",
      "\t}",
      "\trequester {",
      "\t\tallow_remote_vpc_dns_resolution  = true|false",
      "\t\tallow_classic_link_to_remote_vpc = true|false",
      "\t\tallow_vpc_to_remote_classic_link = true|false",
      "\t}",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsVpcPeeringConnectionAccepter"
  },
  "srAwsVpnConnection": {
    "prefix": "srAwsVpnConnection",
    "body": [
      "resource \"aws_vpn_connection\" \"${1:name}\" {",
      "\tvpn_gateway_id = \"${aws_vpn_gateway.${2:foo}.id}\"",
      "\tcustomer_gateway_id = \"${aws_customer_gateway.${3:bar}.id}\"",
      "\ttype = \"ipsec.1\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsVpnConnection"
  },
  "frAwsVpnConnection": {
    "prefix": "frAwsVpnConnection",
    "body": [
      "resource \"aws_vpn_connection\" \"${1:name}\" {",
      "\tvpn_gateway_id      = \"${aws_vpn_gateway.${2:foo}.id}\"",
      "\tcustomer_gateway_id = \"${aws_customer_gateway.${3:bar}.id}\"",
      "\ttype                = \"ipsec.1\"",
      "\tstatic_routes_only  = true|false",
      "\tcustomer_gateway_configuration = \"\"",
      "\troutes {",
      "\t\tdestination_cidr_block = \"\"",
      "\t\tsource = \"\"",
      "\t\tstate  = \"\"",
      "\t}",
      "\tvgw_telemetry {",
      "\t\taccepted_route_count = 1",
      "\t\tlast_status_change   = \"\"",
      "\t\toutside_ip_address   = \"\"",
      "\t\tstatus = \"\"",
      "\t\tstatus_message\t = \"\"",
      "\t}",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsVpnConnection"
  },
  "srAwsVpnConnectionRoute": {
    "prefix": "srAwsVpnConnectionRoute",
    "body": [
      "resource \"aws_vpn_connection_route\" \"${1:name}\" {",
      "\tdestination_cidr_block = \"192.168.10.0/24\"",
      "\tvpn_connection_id = \"${aws_vpn_connection.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsVpnConnectionRoute"
  },
  "frAwsVpnConnectionRoute": {
    "prefix": "frAwsVpnConnectionRoute",
    "body": [
      "resource \"aws_vpn_connection_route\" \"${1:name}\" {",
      "\tdestination_cidr_block = \"192.168.10.0/24\"",
      "\tvpn_connection_id = \"${aws_vpn_connection.${2:foo}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsVpnConnectionRoute"
  },
  "srAwsVpnGateway": {
    "prefix": "srAwsVpnGateway",
    "body": [
      "resource \"aws_vpn_gateway\" \"${1:name}\" {",
      "}",
      ""
    ],
    "description": "Snippet for srAwsVpnGateway"
  },
  "frAwsVpnGateway": {
    "prefix": "frAwsVpnGateway",
    "body": [
      "resource \"aws_vpn_gateway\" \"${1:name}\" {",
      "\tavailability_zone = \"\"",
      "\tvpc_id= \"${aws_vpc.${2:foo}.id}\"",
      "\ttags = {",
      "\t\tTagName = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsVpnGateway"
  },
  "srAwsVpnGatewayAttachment": {
    "prefix": "srAwsVpnGatewayAttachment",
    "body": [
      "resource \"aws_vpn_gateway_attachment\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "\tvpn_gateway_id = \"${aws_vpn_gateway.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsVpnGatewayAttachment"
  },
  "frAwsVpnGatewayAttachment": {
    "prefix": "frAwsVpnGatewayAttachment",
    "body": [
      "resource \"aws_vpn_gateway_attachment\" \"${1:name}\" {",
      "\tvpc_id = \"${aws_vpc.${2:foo}.id}\"",
      "\tvpn_gateway_id = \"${aws_vpn_gateway.${3:bar}.id}\"",
      "}",
      ""
    ],
    "description": "Snippet for frAwsVpnGatewayAttachment"
  },
  "srAwsWafByteMatchSet": {
    "prefix": "srAwsWafByteMatchSet",
    "body": [
      "resource \"aws_waf_byte_match_set\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsWafByteMatchSet"
  },
  "frAwsWafByteMatchSet": {
    "prefix": "frAwsWafByteMatchSet",
    "body": [
      "resource \"aws_waf_byte_match_set\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tbyte_match_tuples {",
      "\t\tfield_to_match {",
      "\t\tdata = \"\"",
      "\t\ttype = \"\"",
      "\t}",
      "\t\tpositional_constraint = \"\"",
      "\t\ttarget_string = \"\"",
      "\t\ttext_transformation   = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsWafByteMatchSet"
  },
  "srAwsWafIPSet": {
    "prefix": "srAwsWafIPSet",
    "body": [
      "resource \"aws_waf_ipset\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsWafIPSet"
  },
  "frAwsWafIPSet": {
    "prefix": "frAwsWafIPSet",
    "body": [
      "resource \"aws_waf_ipset\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tip_set_descriptors {",
      "\t\ttype  = \"IPV4\"|\"\"IPV6\"",
      "\t\tvalue = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsWafIPSet"
  },
  "srAwsWafRule": {
    "prefix": "srAwsWafRule",
    "body": [
      "resource \"aws_waf_rule\" \"${1:name}\" {",
      "\tdepends_on  = [\"aws_waf_ipset.foo\"]",
      "\tname = \"${1}\"",
      "\tmetric_name = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsWafRule"
  },
  "frAwsWafRule": {
    "prefix": "frAwsWafRule",
    "body": [
      "resource \"aws_waf_rule\" \"${1:name}\" {",
      "\tdepends_on  = [\"aws_waf_ipset.bar\"]",
      "\tname = \"${1}\"",
      "\tmetric_name = \"${1}\"",
      "\tpredicates {",
      "\t\tnegated = true|false",
      "\t\tdata_id = \"${aws_waf_ipset.${2:foo}.id}\"",
      "\t\ttype = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsWafRule"
  },
  "srAwsWafSizeConstraintSet": {
    "prefix": "srAwsWafSizeConstraintSet",
    "body": [
      "resource \"aws_waf_size_constraint_set\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tsize_constraints {",
      "\t\tfield_to_match {",
      "\t\tdata = \"\"",
      "\t\ttype = \"\"",
      "\t}",
      "\t\tcomparison_operator = \"EQ\"|\"NE\"|\"LT\"|\"GT\"|\"...\"",
      "\t\tsize\t\t\t\t= 1",
      "\t\ttext_transformation = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsWafSizeConstraintSet"
  },
  "frAwsWafSizeConstraintSet": {
    "prefix": "frAwsWafSizeConstraintSet",
    "body": [
      "resource \"aws_waf_size_constraint_set\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tsize_constraints {",
      "\t\tfield_to_match {",
      "\t\tdata = \"\"",
      "\t\ttype = \"\"",
      "\t}",
      "\t\tcomparison_operator = \"EQ\"|\"NE\"|\"LT\"|\"GT\"|\"...\"",
      "\t\tsize\t\t\t\t= 1",
      "\t\ttext_transformation = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsWafSizeConstraintSet"
  },
  "srAwsWafSqlInjectionMatchSet": {
    "prefix": "srAwsWafSqlInjectionMatchSet",
    "body": [
      "resource \"aws_waf_sql_injection_match_set\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsWafSqlInjectionMatchSet"
  },
  "frAwsWafSqlInjectionMatchSet": {
    "prefix": "frAwsWafSqlInjectionMatchSet",
    "body": [
      "resource \"aws_waf_sql_injection_match_set\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\tsql_injection_match_tuples {",
      "\t\tfield_to_match {",
      "\t\tdata = \"\"",
      "\t\ttype = \"\"",
      "\t}",
      "\t\ttext_transformation  = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsWafSqlInjectionMatchSet"
  },
  "srAwsWafWebAcl": {
    "prefix": "srAwsWafWebAcl",
    "body": [
      "resource \"aws_waf_web_acl\" \"${1:name}\" {",
      "\tdepends_on  = [\"aws_waf_ipset.foo\", \"aws_waf_rule.bar\"]",
      "\tname = \"${1}\"",
      "\tdefault_action {",
      "\t\ttype = \"\"",
      "\t}",
      "\tmetric_name\t= \"\"",
      "}",
      ""
    ],
    "description": "Snippet for srAwsWafWebAcl"
  },
  "frAwsWafWebAcl": {
    "prefix": "frAwsWafWebAcl",
    "body": [
      "resource \"aws_waf_web_acl\" \"${1:name}\" {",
      "\tdepends_on  = [\"aws_waf_ipset.foo\", \"aws_waf_rule.bar\"]",
      "\tname = \"${1}\"",
      "\tdefault_action {",
      "\t\ttype = \"ALLOW\"",
      "\t}",
      "\tmetric_name\t= \"${1}\"",
      "\trules {",
      "\t\taction {",
      "\t\ttype = \"BLOCK\"",
      "\t}",
      "\t\tpriority = 1",
      "\t\trule_id  = \"${aws_waf_rule.${2:foo}.id}\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for frAwsWafWebAcl"
  },
  "srAwsWafXssMatchSet": {
    "prefix": "srAwsWafXssMatchSet",
    "body": [
      "resource \"aws_waf_xss_match_set\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\txss_match_tuples {",
      "\t\tfield_to_match {",
      "\t\tdata = \"\"",
      "\t\ttype = \"\"",
      "\t}",
      "\t\ttext_transformation  = \"\"",
      "\t}",
      "}",
      ""
    ],
    "description": "Snippet for srAwsWafXssMatchSet"
  },
  "frAwsWafXssMatchSet": {
    "prefix": "frAwsWafXssMatchSet",
    "body": [
      "resource \"aws_waf_xss_match_set\" \"${1:name}\" {",
      "\tname = \"${1}\"",
      "\txss_match_tuples {",
      "\t\tfield_to_match {",
      "\t\tdata = \"\"",
      "\t\ttype = \"\"",
      "\t}",
      "\t\ttext_transformation  = \"\"",
      "\t}",
      "}"
    ],
    "description": "Snippet for frAwsWafXssMatchSet"
  }
}
